{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0","program":"/home/thienlk/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","cw_storage_plus","--edition=2018","/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"iterator\"","-C","metadata=d782fcef86f2553f","-C","extra-filename=-d782fcef86f2553f","--out-dir","/home/thienlk/astro-contracts/contracts/minter/target/rls/debug/deps","-L","dependency=/home/thienlk/astro-contracts/contracts/minter/target/rls/debug/deps","--extern","cosmwasm_std=/home/thienlk/astro-contracts/contracts/minter/target/rls/debug/deps/libcosmwasm_std-c0846b2dc90ea1fa.rmeta","--extern","schemars=/home/thienlk/astro-contracts/contracts/minter/target/rls/debug/deps/libschemars-2225bec1445fad29.rmeta","--extern","serde=/home/thienlk/astro-contracts/contracts/minter/target/rls/debug/deps/libserde-9291c956dec4da12.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/thienlk/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/thienlk/astro-contracts/contracts/minter/target/rls/debug/deps/libcw_storage_plus-d782fcef86f2553f.rmeta"},"prelude":{"crate_id":{"name":"cw_storage_plus","disambiguator":[2595357809622322514,0]},"crate_root":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src","external_crates":[{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6651269719699919063,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5314938362831806024,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3192916554191843392,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10801551532821350179,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17712696282143808288,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17759323731357012152,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14544669950029098253,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7140361926623002963,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7912653715525474172,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9995494595343579593,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7588845087494698681,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[1970575902162233525,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[17110431802946872365,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[13012552651923263309,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12999591111048205696,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[5038749270737079727,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[4159898706074811085,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[8750230721255451893,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1956939412839304600,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":20,"id":{"name":"cosmwasm_std","disambiguator":[9644517711742492016,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":21,"id":{"name":"schemars","disambiguator":[13960920048075055913,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":22,"id":{"name":"schemars_derive","disambiguator":[8295933580948661057,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":23,"id":{"name":"serde_json","disambiguator":[1895112506172920215,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/mod.rs","num":24,"id":{"name":"serde","disambiguator":[5200584076872698829,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/mod.rs","num":25,"id":{"name":"serde_derive","disambiguator":[14079700180325079533,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":26,"id":{"name":"itoa","disambiguator":[2267151899538898389,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":27,"id":{"name":"ryu","disambiguator":[2171007673896424832,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":28,"id":{"name":"dyn_clone","disambiguator":[2605580907661361283,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":29,"id":{"name":"cosmwasm_crypto","disambiguator":[8596908532507880143,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":30,"id":{"name":"ed25519_zebra","disambiguator":[9907095025824552779,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":31,"id":{"name":"curve25519_dalek","disambiguator":[8043288397115901856,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":32,"id":{"name":"byteorder","disambiguator":[8619418417566596609,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":33,"id":{"name":"digest","disambiguator":[5515402381847239510,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":34,"id":{"name":"generic_array","disambiguator":[2121410340999580066,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":35,"id":{"name":"typenum","disambiguator":[16488537656935604247,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":36,"id":{"name":"rand_core","disambiguator":[17338755646595460987,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":37,"id":{"name":"getrandom","disambiguator":[9798725127522892961,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":38,"id":{"name":"cfg_if","disambiguator":[11900951980957517807,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":39,"id":{"name":"libc","disambiguator":[10171294623923242952,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":40,"id":{"name":"zeroize","disambiguator":[7972038236996625574,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":41,"id":{"name":"subtle","disambiguator":[7349700535608907265,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":42,"id":{"name":"rand_core","disambiguator":[4771526938085149757,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":43,"id":{"name":"getrandom","disambiguator":[4294326609008209527,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":44,"id":{"name":"sha2","disambiguator":[8517548380708959353,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":45,"id":{"name":"block_buffer","disambiguator":[4550913094961176872,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":46,"id":{"name":"opaque_debug","disambiguator":[4961015825481209273,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":47,"id":{"name":"cpufeatures","disambiguator":[6908811377584941128,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":48,"id":{"name":"thiserror","disambiguator":[13486162619536162117,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":49,"id":{"name":"thiserror_impl","disambiguator":[15799121077725180487,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":50,"id":{"name":"hex","disambiguator":[13725890552695030325,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":51,"id":{"name":"k256","disambiguator":[13104596886763090022,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":52,"id":{"name":"elliptic_curve","disambiguator":[9589061564497723038,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":53,"id":{"name":"ff","disambiguator":[11228385067129510417,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":54,"id":{"name":"group","disambiguator":[13707736851479764561,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":55,"id":{"name":"pkcs8","disambiguator":[15565625788412687163,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":56,"id":{"name":"der","disambiguator":[13304370033328517792,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":57,"id":{"name":"const_oid","disambiguator":[9233655245491242765,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":58,"id":{"name":"spki","disambiguator":[1090369236621859415,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":59,"id":{"name":"crypto_bigint","disambiguator":[2364655807876926946,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":60,"id":{"name":"ecdsa","disambiguator":[15177875786497800675,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":61,"id":{"name":"hmac","disambiguator":[5240321255502924330,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":62,"id":{"name":"crypto_mac","disambiguator":[3092574390014323952,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":63,"id":{"name":"signature","disambiguator":[14544565545103475635,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":64,"id":{"name":"forward_ref","disambiguator":[10755872284309063474,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":65,"id":{"name":"cosmwasm_derive","disambiguator":[10025878215719424834,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":66,"id":{"name":"uint","disambiguator":[13880408318459430535,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":67,"id":{"name":"static_assertions","disambiguator":[18091571177233982124,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":68,"id":{"name":"crunchy","disambiguator":[2533427818140127117,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":69,"id":{"name":"base64","disambiguator":[2488519367402815926,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","num":70,"id":{"name":"serde_json_wasm","disambiguator":[12035443003403605112,0]}}],"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","byte_start":0,"byte_end":1027,"line_start":1,"line_end":41,"column_start":1,"column_end":57}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":551},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/mod.rs","byte_start":110015,"byte_end":110025,"line_start":6,"line_end":6,"column_start":16,"column_end":26},"alias_span":null,"name":"MultiIndex","value":"","parent":{"krate":0,"index":487}},{"kind":"Use","ref_id":{"krate":0,"index":691},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/mod.rs","byte_start":110043,"byte_end":110054,"line_start":7,"line_end":7,"column_start":17,"column_end":28},"alias_span":null,"name":"UniqueIndex","value":"","parent":{"krate":0,"index":487}},{"kind":"Use","ref_id":{"krate":0,"index":1737},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","byte_start":264,"byte_end":269,"line_start":20,"line_end":20,"column_start":17,"column_end":22},"alias_span":null,"name":"Bound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":36},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","byte_start":271,"byte_end":278,"line_start":20,"line_end":20,"column_start":24,"column_end":31},"alias_span":null,"name":"Bounder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1760},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","byte_start":280,"byte_end":291,"line_start":20,"line_end":20,"column_start":33,"column_end":44},"alias_span":null,"name":"PrefixBound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1726},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","byte_start":293,"byte_end":301,"line_start":20,"line_end":20,"column_start":46,"column_end":54},"alias_span":null,"name":"RawBound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":172},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","byte_start":320,"byte_end":326,"line_start":21,"line_end":21,"column_start":17,"column_end":23},"alias_span":null,"name":"Endian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":295},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","byte_start":379,"byte_end":388,"line_start":23,"line_end":23,"column_start":23,"column_end":32},"alias_span":null,"name":"IndexList","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":298},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","byte_start":390,"byte_end":400,"line_start":23,"line_end":23,"column_start":34,"column_end":44},"alias_span":null,"name":"IndexedMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":420},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","byte_start":458,"byte_end":476,"line_start":25,"line_end":25,"column_start":27,"column_end":45},"alias_span":null,"name":"IndexedSnapshotMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":551},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","byte_start":524,"byte_end":534,"line_start":27,"line_end":27,"column_start":18,"column_end":28},"alias_span":null,"name":"MultiIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":691},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","byte_start":582,"byte_end":593,"line_start":29,"line_end":29,"column_start":18,"column_end":29},"alias_span":null,"name":"UniqueIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":778},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","byte_start":642,"byte_end":654,"line_start":31,"line_end":31,"column_start":19,"column_end":31},"alias_span":null,"name":"index_string","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":781},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","byte_start":656,"byte_end":674,"line_start":31,"line_end":31,"column_start":33,"column_end":51},"alias_span":null,"name":"index_string_tuple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":780},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","byte_start":676,"byte_end":688,"line_start":31,"line_end":31,"column_start":53,"column_end":65},"alias_span":null,"name":"index_triple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":779},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","byte_start":690,"byte_end":701,"line_start":31,"line_end":31,"column_start":67,"column_end":78},"alias_span":null,"name":"index_tuple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":782},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","byte_start":703,"byte_end":708,"line_start":31,"line_end":31,"column_start":80,"column_end":85},"alias_span":null,"name":"Index","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":790},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","byte_start":728,"byte_end":736,"line_start":32,"line_end":32,"column_start":18,"column_end":26},"alias_span":null,"name":"CwIntKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":838},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","byte_start":752,"byte_end":756,"line_start":33,"line_end":33,"column_start":15,"column_end":19},"alias_span":null,"name":"Item","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2066},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","byte_start":773,"byte_end":776,"line_start":34,"line_end":34,"column_start":16,"column_end":19},"alias_span":null,"name":"Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":956},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","byte_start":778,"byte_end":786,"line_start":34,"line_end":34,"column_start":21,"column_end":29},"alias_span":null,"name":"Prefixer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":907},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","byte_start":788,"byte_end":798,"line_start":34,"line_end":34,"column_start":31,"column_end":41},"alias_span":null,"name":"PrimaryKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2170},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","byte_start":819,"byte_end":828,"line_start":35,"line_end":35,"column_start":19,"column_end":28},"alias_span":null,"name":"IntKeyOld","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2191},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","byte_start":843,"byte_end":846,"line_start":36,"line_end":36,"column_start":14,"column_end":17},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2208},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","byte_start":862,"byte_end":866,"line_start":37,"line_end":37,"column_start":15,"column_end":19},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1377},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","byte_start":914,"byte_end":931,"line_start":39,"line_end":39,"column_start":18,"column_end":35},"alias_span":null,"name":"range_with_prefix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2218},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","byte_start":933,"byte_end":939,"line_start":39,"line_end":39,"column_start":37,"column_end":43},"alias_span":null,"name":"Prefix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1432},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","byte_start":990,"byte_end":1002,"line_start":41,"line_end":41,"column_start":20,"column_end":32},"alias_span":null,"name":"SnapshotItem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1517},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","byte_start":1004,"byte_end":1015,"line_start":41,"line_end":41,"column_start":34,"column_end":45},"alias_span":null,"name":"SnapshotMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2249},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","byte_start":1017,"byte_end":1025,"line_start":41,"line_end":41,"column_start":47,"column_end":55},"alias_span":null,"name":"Strategy","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","byte_start":0,"byte_end":1027,"line_start":1,"line_end":41,"column_start":1,"column_end":57},"name":"","qualname":"::","value":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":82},{"krate":0,"index":147},{"krate":0,"index":168},{"krate":0,"index":180},{"krate":0,"index":238},{"krate":0,"index":357},{"krate":0,"index":487},{"krate":0,"index":786},{"krate":0,"index":796},{"krate":0,"index":860},{"krate":0,"index":888},{"krate":0,"index":1022},{"krate":0,"index":1078},{"krate":0,"index":1206},{"krate":0,"index":1261},{"krate":0,"index":1397},{"krate":0,"index":1636},{"krate":0,"index":1637},{"krate":0,"index":1640},{"krate":0,"index":1643},{"krate":0,"index":1646},{"krate":0,"index":1649},{"krate":0,"index":1652},{"krate":0,"index":1653},{"krate":0,"index":1656},{"krate":0,"index":1659},{"krate":0,"index":1662},{"krate":0,"index":1665},{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1672},{"krate":0,"index":1675},{"krate":0,"index":1678},{"krate":0,"index":1681},{"krate":0,"index":1684},{"krate":0,"index":1687},{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1694},{"krate":0,"index":1697},{"krate":0,"index":1700},{"krate":0,"index":1703},{"krate":0,"index":1706},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1713},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1720},{"krate":0,"index":1723}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1727},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":1644,"byte_end":1653,"line_start":16,"line_end":16,"column_start":5,"column_end":14},"name":"Inclusive","qualname":"::bound::RawBound::Inclusive","value":"RawBound::Inclusive(Vec<u8>)","parent":{"krate":0,"index":1726},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1730},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":1668,"byte_end":1677,"line_start":17,"line_end":17,"column_start":5,"column_end":14},"name":"Exclusive","qualname":"::bound::RawBound::Exclusive","value":"RawBound::Exclusive(Vec<u8>)","parent":{"krate":0,"index":1726},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1726},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":1629,"byte_end":1637,"line_start":15,"line_end":15,"column_start":10,"column_end":18},"name":"RawBound","qualname":"::bound::RawBound","value":"pub enum RawBound { Inclusive(Vec<u8>), Exclusive(Vec<u8>), }","parent":null,"children":[{"krate":0,"index":1727},{"krate":0,"index":1730}],"decl_id":null,"docs":" `RawBound` is used to define the two ends of a range, more explicit than `Option<u8>`.\n `None` means that we don't limit that side of the range at all.\n `Inclusive` means we use the given bytes as a limit and *include* anything at that exact key.\n `Exclusive` means we use the given bytes as a limit and *exclude* anything at that exact key.\n See `Bound` for a type safe way to build these bounds.\n","sig":null,"attributes":[{"value":"/ `RawBound` is used to define the two ends of a range, more explicit than `Option<u8>`.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":1182,"byte_end":1272,"line_start":9,"line_end":9,"column_start":1,"column_end":91}},{"value":"/ `None` means that we don't limit that side of the range at all.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":1273,"byte_end":1340,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/ `Inclusive` means we use the given bytes as a limit and *include* anything at that exact key.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":1341,"byte_end":1438,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ `Exclusive` means we use the given bytes as a limit and *exclude* anything at that exact key.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":1439,"byte_end":1536,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ See `Bound` for a type safe way to build these bounds.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":1537,"byte_end":1595,"line_start":13,"line_end":13,"column_start":1,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1740},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":2078,"byte_end":2087,"line_start":26,"line_end":26,"column_start":5,"column_end":14},"name":"Inclusive","qualname":"::bound::Bound::Inclusive","value":"Bound::Inclusive((K, PhantomData<&'a bool>))","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1743},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":2121,"byte_end":2130,"line_start":27,"line_end":27,"column_start":5,"column_end":14},"name":"Exclusive","qualname":"::bound::Bound::Exclusive","value":"Bound::Exclusive((K, PhantomData<&'a bool>))","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1746},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":2164,"byte_end":2176,"line_start":28,"line_end":28,"column_start":5,"column_end":17},"name":"InclusiveRaw","qualname":"::bound::Bound::InclusiveRaw","value":"Bound::InclusiveRaw(Vec<u8>)","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1749},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":2191,"byte_end":2203,"line_start":29,"line_end":29,"column_start":5,"column_end":17},"name":"ExclusiveRaw","qualname":"::bound::Bound::ExclusiveRaw","value":"Bound::ExclusiveRaw(Vec<u8>)","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1737},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":2043,"byte_end":2048,"line_start":25,"line_end":25,"column_start":10,"column_end":15},"name":"Bound","qualname":"::bound::Bound","value":"pub enum Bound<'a, K: PrimaryKey> {\n    Inclusive((K, PhantomData<&'a bool>)),\n    Exclusive((K, PhantomData<&'a bool>)),\n    InclusiveRaw(Vec<u8>),\n    ExclusiveRaw(Vec<u8>),\n}","parent":null,"children":[{"krate":0,"index":1740},{"krate":0,"index":1743},{"krate":0,"index":1746},{"krate":0,"index":1749}],"decl_id":null,"docs":" `Bound` is used to define the two ends of a range.\n `None` means that we don't limit that side of the range at all.\n `Inclusive` means we use the given value as a limit and *include* anything at that exact key.\n `Exclusive` means we use the given value as a limit and *exclude* anything at that exact key.\n","sig":null,"attributes":[{"value":"/ `Bound` is used to define the two ends of a range.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":1691,"byte_end":1745,"line_start":20,"line_end":20,"column_start":1,"column_end":55}},{"value":"/ `None` means that we don't limit that side of the range at all.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":1746,"byte_end":1813,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"/ `Inclusive` means we use the given value as a limit and *include* anything at that exact key.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":1814,"byte_end":1911,"line_start":22,"line_end":22,"column_start":1,"column_end":98}},{"value":"/ `Exclusive` means we use the given value as a limit and *exclude* anything at that exact key.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":1912,"byte_end":2009,"line_start":23,"line_end":23,"column_start":1,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":2271,"byte_end":2280,"line_start":33,"line_end":33,"column_start":12,"column_end":21},"name":"inclusive","qualname":"<Bound>::inclusive","value":"pub fn inclusive<T: Into<K>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":2376,"byte_end":2385,"line_start":37,"line_end":37,"column_start":12,"column_end":21},"name":"exclusive","qualname":"<Bound>::exclusive","value":"pub fn exclusive<T: Into<K>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":2481,"byte_end":2493,"line_start":41,"line_end":41,"column_start":12,"column_end":24},"name":"to_raw_bound","qualname":"<Bound>::to_raw_bound","value":"pub fn to_raw_bound(&Self) -> RawBound","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1763},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":2937,"byte_end":2946,"line_start":53,"line_end":53,"column_start":5,"column_end":14},"name":"Inclusive","qualname":"::bound::PrefixBound::Inclusive","value":"PrefixBound::Inclusive((K, PhantomData<&'a bool>))","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1766},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":2980,"byte_end":2989,"line_start":54,"line_end":54,"column_start":5,"column_end":14},"name":"Exclusive","qualname":"::bound::PrefixBound::Exclusive","value":"PrefixBound::Exclusive((K, PhantomData<&'a bool>))","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1760},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":2898,"byte_end":2909,"line_start":52,"line_end":52,"column_start":10,"column_end":21},"name":"PrefixBound","qualname":"::bound::PrefixBound","value":"pub enum PrefixBound<'a, K: Prefixer> {\n    Inclusive((K, PhantomData<&'a bool>)),\n    Exclusive((K, PhantomData<&'a bool>)),\n}","parent":null,"children":[{"krate":0,"index":1763},{"krate":0,"index":1766}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":3080,"byte_end":3089,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"inclusive","qualname":"<PrefixBound>::inclusive","value":"pub fn inclusive<T: Into<K>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":3185,"byte_end":3194,"line_start":62,"line_end":62,"column_start":12,"column_end":21},"name":"exclusive","qualname":"<PrefixBound>::exclusive","value":"pub fn exclusive<T: Into<K>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":3290,"byte_end":3302,"line_start":66,"line_end":66,"column_start":12,"column_end":24},"name":"to_raw_bound","qualname":"<PrefixBound>::to_raw_bound","value":"pub fn to_raw_bound(&Self) -> RawBound","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":36},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":3546,"byte_end":3553,"line_start":74,"line_end":74,"column_start":11,"column_end":18},"name":"Bounder","qualname":"::bound::Bounder","value":"Bounder<'a>: PrimaryKey + Sized","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":3591,"byte_end":3606,"line_start":75,"line_end":75,"column_start":8,"column_end":23},"name":"inclusive_bound","qualname":"::bound::Bounder::inclusive_bound","value":"pub fn inclusive_bound(Self) -> Option<Bound>","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":3648,"byte_end":3663,"line_start":76,"line_end":76,"column_start":8,"column_end":23},"name":"exclusive_bound","qualname":"::bound::Bounder::exclusive_bound","value":"pub fn exclusive_bound(Self) -> Option<Bound>","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":102},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/de.rs","byte_start":6702,"byte_end":6716,"line_start":8,"line_end":8,"column_start":11,"column_end":25},"name":"KeyDeserialize","qualname":"::de::KeyDeserialize","value":"KeyDeserialize","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":103},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/de.rs","byte_start":6728,"byte_end":6734,"line_start":9,"line_end":9,"column_start":10,"column_end":16},"name":"Output","qualname":"::de::KeyDeserialize::Output","value":"type Output: Sized;","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/de.rs","byte_start":6751,"byte_end":6759,"line_start":11,"line_end":11,"column_start":8,"column_end":16},"name":"from_vec","qualname":"::de::KeyDeserialize::from_vec","value":"pub fn from_vec(Vec<u8>) -> StdResult<Self::Output>","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/de.rs","byte_start":6812,"byte_end":6822,"line_start":13,"line_end":13,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::de::KeyDeserialize::from_slice","value":"pub fn from_slice(&[u8]) -> StdResult<Self::Output>","parent":{"krate":0,"index":102},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":172},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/endian.rs","byte_start":17760,"byte_end":17766,"line_start":12,"line_end":12,"column_start":11,"column_end":17},"name":"Endian","qualname":"::endian::Endian","value":"Endian: Sized + Copy","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":173},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/endian.rs","byte_start":17792,"byte_end":17795,"line_start":13,"line_end":13,"column_start":10,"column_end":13},"name":"Buf","qualname":"::endian::Endian::Buf","value":"type Buf: AsRef<[u8]> + AsMut<[u8]> + Into<Vec<u8>> + Default;","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/endian.rs","byte_start":17858,"byte_end":17869,"line_start":15,"line_end":15,"column_start":8,"column_end":19},"name":"to_le_bytes","qualname":"::endian::Endian::to_le_bytes","value":"pub fn to_le_bytes(Self) -> Self::Buf","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/endian.rs","byte_start":17897,"byte_end":17908,"line_start":16,"line_end":16,"column_start":8,"column_end":19},"name":"to_be_bytes","qualname":"::endian::Endian::to_be_bytes","value":"pub fn to_be_bytes(Self) -> Self::Buf","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/endian.rs","byte_start":17937,"byte_end":17950,"line_start":18,"line_end":18,"column_start":8,"column_end":21},"name":"from_le_bytes","qualname":"::endian::Endian::from_le_bytes","value":"pub fn from_le_bytes(Self::Buf) -> Self","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/endian.rs","byte_start":17985,"byte_end":17998,"line_start":19,"line_end":19,"column_start":8,"column_end":21},"name":"from_be_bytes","qualname":"::endian::Endian::from_be_bytes","value":"pub fn from_be_bytes(Self::Buf) -> Self","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":295},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":25919,"byte_end":25928,"line_start":17,"line_end":17,"column_start":11,"column_end":20},"name":"IndexList","qualname":"::indexed_map::IndexList","value":"IndexList<T>","parent":null,"children":[{"krate":0,"index":297}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":25941,"byte_end":25952,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"get_indexes","qualname":"::indexed_map::IndexList::get_indexes","value":"pub fn get_indexes(&Self) -> Box<dyn Iterator<Item = &dyn Index<T>>>","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":298},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":26146,"byte_end":26156,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"name":"IndexedMap","qualname":"::indexed_map::IndexedMap","value":"IndexedMap { idx }","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305}],"decl_id":null,"docs":" `IndexedMap` works like a `Map` but has a secondary index\n","sig":null,"attributes":[{"value":"/ `IndexedMap` works like a `Map` but has a secondary index","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":26073,"byte_end":26134,"line_start":22,"line_end":22,"column_start":1,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":305},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":26437,"byte_end":26440,"line_start":33,"line_end":33,"column_start":9,"column_end":12},"name":"idx","qualname":"::indexed_map::IndexedMap::idx","value":"I","parent":{"krate":0,"index":298},"children":[],"decl_id":null,"docs":" This is meant to be read directly to get the proper types, like:\n map.idx.owner.items(...)\n","sig":null,"attributes":[{"value":"/ This is meant to be read directly to get the proper types, like:","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":26327,"byte_end":26395,"line_start":31,"line_end":31,"column_start":5,"column_end":73}},{"value":"/ map.idx.owner.items(...)","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":26400,"byte_end":26428,"line_start":32,"line_end":32,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":26657,"byte_end":26660,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexedMap>::new","value":"pub fn new(&'a str, I) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":26877,"byte_end":26880,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"key","qualname":"<IndexedMap>::key","value":"pub fn key(&Self, K) -> Path<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":27358,"byte_end":27362,"line_start":65,"line_end":65,"column_start":12,"column_end":16},"name":"save","qualname":"<IndexedMap>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues.\n this must load the old value to update the indexes properly\n if you loaded the old value earlier in the same function, use replace to avoid needless db reads\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":27087,"byte_end":27173,"line_start":62,"line_end":62,"column_start":5,"column_end":91}},{"value":"/ this must load the old value to update the indexes properly","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":27178,"byte_end":27241,"line_start":63,"line_end":63,"column_start":5,"column_end":68}},{"value":"/ if you loaded the old value earlier in the same function, use replace to avoid needless db reads","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":27246,"byte_end":27346,"line_start":64,"line_end":64,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":27573,"byte_end":27579,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexedMap>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":28026,"byte_end":28033,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"replace","qualname":"<IndexedMap>::replace","value":"pub fn replace(&Self, &mut dyn Storage, K, Option<&T>, Option<&T>)\n-> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" replace writes data to key. old_data must be the current stored value (from a previous load)\n and is used to properly update the index. This is used by save, replace, and update\n and can be called directly if you want to optimize\n","sig":null,"attributes":[{"value":"/ replace writes data to key. old_data must be the current stored value (from a previous load)","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":27767,"byte_end":27863,"line_start":75,"line_end":75,"column_start":5,"column_end":101}},{"value":"/ and is used to properly update the index. This is used by save, replace, and update","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":27868,"byte_end":27955,"line_start":76,"line_end":76,"column_start":5,"column_end":92}},{"value":"/ and can be called directly if you want to optimize","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":27960,"byte_end":28014,"line_start":77,"line_end":77,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":29023,"byte_end":29029,"line_start":107,"line_end":107,"column_start":12,"column_end":18},"name":"update","qualname":"<IndexedMap>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":28745,"byte_end":28815,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":28820,"byte_end":28906,"line_start":104,"line_end":104,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":28911,"byte_end":28914,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":28919,"byte_end":29011,"line_start":106,"line_end":106,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":29664,"byte_end":29668,"line_start":123,"line_end":123,"column_start":12,"column_end":16},"name":"load","qualname":"<IndexedMap>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":29569,"byte_end":29652,"line_start":122,"line_end":122,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":29924,"byte_end":29932,"line_start":129,"line_end":129,"column_start":12,"column_end":20},"name":"may_load","qualname":"<IndexedMap>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":29772,"byte_end":29869,"line_start":127,"line_end":127,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":29874,"byte_end":29912,"line_start":128,"line_end":128,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":30787,"byte_end":30803,"line_start":151,"line_end":151,"column_start":12,"column_end":28},"name":"prefix_range_raw","qualname":"<IndexedMap>::prefix_range_raw","value":"pub fn prefix_range_raw<'c>(&Self, &'c dyn Storage, Option<PrefixBound>,\n                            Option<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Record<T>>> + 'c> where\nT: 'c, 'a:'c","parent":null,"children":[],"decl_id":null,"docs":" While `range_raw` over a `prefix` fixes the prefix to one element and iterates over the\n remaining, `prefix_range_raw` accepts bounds for the lowest and highest elements of the `Prefix`\n itself, and iterates over those (inclusively or exclusively, depending on `PrefixBound`).\n There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't\n solve them.\n","sig":null,"attributes":[{"value":"/ While `range_raw` over a `prefix` fixes the prefix to one element and iterates over the","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":30362,"byte_end":30453,"line_start":146,"line_end":146,"column_start":5,"column_end":96}},{"value":"/ remaining, `prefix_range_raw` accepts bounds for the lowest and highest elements of the `Prefix`","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":30458,"byte_end":30558,"line_start":147,"line_end":147,"column_start":5,"column_end":105}},{"value":"/ itself, and iterates over those (inclusively or exclusively, depending on `PrefixBound`).","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":30563,"byte_end":30656,"line_start":148,"line_end":148,"column_start":5,"column_end":98}},{"value":"/ There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":30661,"byte_end":30755,"line_start":149,"line_end":149,"column_start":5,"column_end":99}},{"value":"/ solve them.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":30760,"byte_end":30775,"line_start":150,"line_end":150,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":31445,"byte_end":31455,"line_start":175,"line_end":175,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<IndexedMap>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix)\n-> Prefix<K::SuperSuffix, T, K::SuperSuffix>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":31597,"byte_end":31603,"line_start":179,"line_end":179,"column_start":12,"column_end":18},"name":"prefix","qualname":"<IndexedMap>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<K::Suffix, T, K::Suffix>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":32337,"byte_end":32349,"line_start":197,"line_end":197,"column_start":12,"column_end":24},"name":"prefix_range","qualname":"<IndexedMap>::prefix_range","value":"pub fn prefix_range<'c>(&Self, &'c dyn Storage, Option<PrefixBound>,\n                        Option<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'c> where T: 'c,\n'a:'c, K: 'c, K::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" While `range` over a `prefix` fixes the prefix to one element and iterates over the\n remaining, `prefix_range` accepts bounds for the lowest and highest elements of the\n `Prefix` itself, and iterates over those (inclusively or exclusively, depending on\n `PrefixBound`).\n There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't\n solve them.\n","sig":null,"attributes":[{"value":"/ While `range` over a `prefix` fixes the prefix to one element and iterates over the","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":31912,"byte_end":31999,"line_start":191,"line_end":191,"column_start":5,"column_end":92}},{"value":"/ remaining, `prefix_range` accepts bounds for the lowest and highest elements of the","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":32004,"byte_end":32091,"line_start":192,"line_end":192,"column_start":5,"column_end":92}},{"value":"/ `Prefix` itself, and iterates over those (inclusively or exclusively, depending on","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":32096,"byte_end":32182,"line_start":193,"line_end":193,"column_start":5,"column_end":91}},{"value":"/ `PrefixBound`).","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":32187,"byte_end":32206,"line_start":194,"line_end":194,"column_start":5,"column_end":24}},{"value":"/ There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":32211,"byte_end":32305,"line_start":195,"line_end":195,"column_start":5,"column_end":99}},{"value":"/ solve them.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":32310,"byte_end":32325,"line_start":196,"line_end":196,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":32865,"byte_end":32874,"line_start":215,"line_end":215,"column_start":12,"column_end":21},"name":"range_raw","qualname":"<IndexedMap>::range_raw","value":"pub fn range_raw<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                     cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Record<T>>> + 'c> where\nT: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":33220,"byte_end":33228,"line_start":228,"line_end":228,"column_start":12,"column_end":20},"name":"keys_raw","qualname":"<IndexedMap>::keys_raw","value":"pub fn keys_raw<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                    cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = Vec<u8>> + 'c>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":33517,"byte_end":33522,"line_start":238,"line_end":238,"column_start":12,"column_end":17},"name":"range","qualname":"<IndexedMap>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'c> where T: 'c,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":33879,"byte_end":33883,"line_start":252,"line_end":252,"column_start":12,"column_end":16},"name":"keys","qualname":"<IndexedMap>::keys","value":"pub fn keys<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<K::Output>> + 'c> where T: 'c,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":420},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":73213,"byte_end":73231,"line_start":17,"line_end":17,"column_start":12,"column_end":30},"name":"IndexedSnapshotMap","qualname":"::indexed_snapshot::IndexedSnapshotMap","value":"IndexedSnapshotMap { idx }","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427}],"decl_id":null,"docs":" `IndexedSnapshotMap` works like a `SnapshotMap` but has a secondary index\n","sig":null,"attributes":[{"value":"/ `IndexedSnapshotMap` works like a `SnapshotMap` but has a secondary index","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":73124,"byte_end":73201,"line_start":16,"line_end":16,"column_start":1,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":427},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":73425,"byte_end":73428,"line_start":22,"line_end":22,"column_start":9,"column_end":12},"name":"idx","qualname":"::indexed_snapshot::IndexedSnapshotMap::idx","value":"I","parent":{"krate":0,"index":420},"children":[],"decl_id":null,"docs":" This is meant to be read directly to get the proper types, like:\n map.idx.owner.items(...)\n","sig":null,"attributes":[{"value":"/ This is meant to be read directly to get the proper types, like:","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":73315,"byte_end":73383,"line_start":20,"line_end":20,"column_start":5,"column_end":73}},{"value":"/ map.idx.owner.items(...)","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":73388,"byte_end":73416,"line_start":21,"line_end":21,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":74063,"byte_end":74066,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexedSnapshotMap>::new","value":"pub fn new(&'a str, &'a str, &'a str, Strategy, I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Examples:","sig":null,"attributes":[{"value":"/ Examples:","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":73492,"byte_end":73505,"line_start":26,"line_end":26,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":73510,"byte_end":73513,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":73518,"byte_end":73529,"line_start":28,"line_end":28,"column_start":5,"column_end":16}},{"value":"/ use cw_storage_plus::{IndexedSnapshotMap, Strategy, UniqueIndex};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":73534,"byte_end":73603,"line_start":29,"line_end":29,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":73608,"byte_end":73611,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ #[derive(PartialEq, Debug, Clone)]","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":73616,"byte_end":73654,"line_start":31,"line_end":31,"column_start":5,"column_end":43}},{"value":"/ struct Data {","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":73659,"byte_end":73676,"line_start":32,"line_end":32,"column_start":5,"column_end":22}},{"value":"/     pub name: String,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":73681,"byte_end":73706,"line_start":33,"line_end":33,"column_start":5,"column_end":30}},{"value":"/     pub age: u32,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":73711,"byte_end":73732,"line_start":34,"line_end":34,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":73737,"byte_end":73742,"line_start":35,"line_end":35,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":73747,"byte_end":73750,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let indexes = UniqueIndex::new(|d: &Data| d.age, \"data__age\");","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":73755,"byte_end":73821,"line_start":37,"line_end":37,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":73826,"byte_end":73829,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ IndexedSnapshotMap::<&[u8], Data, UniqueIndex<u32, Data>>::new(","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":73834,"byte_end":73901,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/     \"data\",","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":73906,"byte_end":73921,"line_start":40,"line_end":40,"column_start":5,"column_end":20}},{"value":"/     \"checkpoints\",","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":73926,"byte_end":73948,"line_start":41,"line_end":41,"column_start":5,"column_end":27}},{"value":"/     \"changelog\",","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":73953,"byte_end":73973,"line_start":42,"line_end":42,"column_start":5,"column_end":25}},{"value":"/     Strategy::EveryBlock,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":73978,"byte_end":74007,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/     indexes,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":74012,"byte_end":74028,"line_start":44,"line_end":44,"column_start":5,"column_end":21}},{"value":"/ );","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":74033,"byte_end":74039,"line_start":45,"line_end":45,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":74044,"byte_end":74051,"line_start":46,"line_end":46,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":74442,"byte_end":74451,"line_start":61,"line_end":61,"column_start":12,"column_end":21},"name":"changelog","qualname":"<IndexedSnapshotMap>::changelog","value":"pub fn changelog(&Self) -> &Map","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":74729,"byte_end":74743,"line_start":72,"line_end":72,"column_start":12,"column_end":26},"name":"add_checkpoint","qualname":"<IndexedSnapshotMap>::add_checkpoint","value":"pub fn add_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":74877,"byte_end":74894,"line_start":76,"line_end":76,"column_start":12,"column_end":29},"name":"remove_checkpoint","qualname":"<IndexedSnapshotMap>::remove_checkpoint","value":"pub fn remove_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":75031,"byte_end":75049,"line_start":80,"line_end":80,"column_start":12,"column_end":30},"name":"may_load_at_height","qualname":"<IndexedSnapshotMap>::may_load_at_height","value":"pub fn may_load_at_height(&Self, &dyn Storage, K, u64) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":75238,"byte_end":75257,"line_start":89,"line_end":89,"column_start":12,"column_end":31},"name":"assert_checkpointed","qualname":"<IndexedSnapshotMap>::assert_checkpointed","value":"pub fn assert_checkpointed(&Self, &dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":75392,"byte_end":75395,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"key","qualname":"<IndexedSnapshotMap>::key","value":"pub fn key(&Self, K) -> Path<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":75913,"byte_end":75917,"line_start":107,"line_end":107,"column_start":12,"column_end":16},"name":"save","qualname":"<IndexedSnapshotMap>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues.\n this must load the old value to update the indexes properly\n if you loaded the old value earlier in the same function, use replace to avoid needless db reads\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":75642,"byte_end":75728,"line_start":104,"line_end":104,"column_start":5,"column_end":91}},{"value":"/ this must load the old value to update the indexes properly","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":75733,"byte_end":75796,"line_start":105,"line_end":105,"column_start":5,"column_end":68}},{"value":"/ if you loaded the old value earlier in the same function, use replace to avoid needless db reads","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":75801,"byte_end":75901,"line_start":106,"line_end":106,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":76149,"byte_end":76155,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexedSnapshotMap>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":76623,"byte_end":76630,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"name":"replace","qualname":"<IndexedSnapshotMap>::replace","value":"pub fn replace(&Self, &mut dyn Storage, K, Option<&T>, Option<&T>, u64)\n-> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" replace writes data to key. old_data must be the current stored value (from a previous load)\n and is used to properly update the index. This is used by save, replace, and update\n and can be called directly if you want to optimize\n","sig":null,"attributes":[{"value":"/ replace writes data to key. old_data must be the current stored value (from a previous load)","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":76364,"byte_end":76460,"line_start":117,"line_end":117,"column_start":5,"column_end":101}},{"value":"/ and is used to properly update the index. This is used by save, replace, and update","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":76465,"byte_end":76552,"line_start":118,"line_end":118,"column_start":5,"column_end":92}},{"value":"/ and can be called directly if you want to optimize","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":76557,"byte_end":76611,"line_start":119,"line_end":119,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":77658,"byte_end":77664,"line_start":150,"line_end":150,"column_start":12,"column_end":18},"name":"update","qualname":"<IndexedSnapshotMap>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, u64, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":77380,"byte_end":77450,"line_start":146,"line_end":146,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":77455,"byte_end":77541,"line_start":147,"line_end":147,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":77546,"byte_end":77549,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":77554,"byte_end":77646,"line_start":149,"line_end":149,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":78367,"byte_end":78371,"line_start":172,"line_end":172,"column_start":12,"column_end":16},"name":"load","qualname":"<IndexedSnapshotMap>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":78272,"byte_end":78355,"line_start":171,"line_end":171,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":78627,"byte_end":78635,"line_start":178,"line_end":178,"column_start":12,"column_end":20},"name":"may_load","qualname":"<IndexedSnapshotMap>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":78475,"byte_end":78572,"line_start":176,"line_end":176,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":78577,"byte_end":78615,"line_start":177,"line_end":177,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":78796,"byte_end":78809,"line_start":183,"line_end":183,"column_start":12,"column_end":25},"name":"no_prefix_raw","qualname":"<IndexedSnapshotMap>::no_prefix_raw","value":"pub fn no_prefix_raw(&Self) -> Prefix<Vec<u8>, T, K>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":79302,"byte_end":79311,"line_start":197,"line_end":197,"column_start":12,"column_end":21},"name":"range_raw","qualname":"<IndexedSnapshotMap>::range_raw","value":"pub fn range_raw<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                     cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Record<T>>> + 'c> where\nT: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":79657,"byte_end":79665,"line_start":210,"line_end":210,"column_start":12,"column_end":20},"name":"keys_raw","qualname":"<IndexedSnapshotMap>::keys_raw","value":"pub fn keys_raw<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                    cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = Vec<u8>> + 'c>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":80132,"byte_end":80142,"line_start":228,"line_end":228,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<IndexedSnapshotMap>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix)\n-> Prefix<K::SuperSuffix, T, K::SuperSuffix>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":80284,"byte_end":80290,"line_start":232,"line_end":232,"column_start":12,"column_end":18},"name":"prefix","qualname":"<IndexedSnapshotMap>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<K::Suffix, T, K::Suffix>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":81032,"byte_end":81044,"line_start":250,"line_end":250,"column_start":12,"column_end":24},"name":"prefix_range","qualname":"<IndexedSnapshotMap>::prefix_range","value":"pub fn prefix_range<'c>(&Self, &'c dyn Storage, Option<PrefixBound>,\n                        Option<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'c> where T: 'c,\n'a:'c, K: 'c, K::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" While `range` over a `prefix` fixes the prefix to one element and iterates over the\n remaining, `prefix_range` accepts bounds for the lowest and highest elements of the\n `Prefix` itself, and iterates over those (inclusively or exclusively, depending on\n `PrefixBound`).\n There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't\n solve them.\n","sig":null,"attributes":[{"value":"/ While `range` over a `prefix` fixes the prefix to one element and iterates over the","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":80607,"byte_end":80694,"line_start":244,"line_end":244,"column_start":5,"column_end":92}},{"value":"/ remaining, `prefix_range` accepts bounds for the lowest and highest elements of the","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":80699,"byte_end":80786,"line_start":245,"line_end":245,"column_start":5,"column_end":92}},{"value":"/ `Prefix` itself, and iterates over those (inclusively or exclusively, depending on","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":80791,"byte_end":80877,"line_start":246,"line_end":246,"column_start":5,"column_end":91}},{"value":"/ `PrefixBound`).","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":80882,"byte_end":80901,"line_start":247,"line_end":247,"column_start":5,"column_end":24}},{"value":"/ There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":80906,"byte_end":81000,"line_start":248,"line_end":248,"column_start":5,"column_end":99}},{"value":"/ solve them.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":81005,"byte_end":81020,"line_start":249,"line_end":249,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":81560,"byte_end":81565,"line_start":268,"line_end":268,"column_start":12,"column_end":17},"name":"range","qualname":"<IndexedSnapshotMap>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'c> where T: 'c,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":81922,"byte_end":81926,"line_start":282,"line_end":282,"column_start":12,"column_end":16},"name":"keys","qualname":"<IndexedSnapshotMap>::keys","value":"pub fn keys<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<K::Output>> + 'c> where T: 'c,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":551},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":112112,"byte_end":112122,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"MultiIndex","qualname":"::indexes::multi::MultiIndex","value":"MultiIndex {  }","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560}],"decl_id":null,"docs":" MultiIndex stores (namespace, index_name, idx_value, pk) -> b\"pk_len\".\n Allows many values per index, and references pk.\n The associated primary key value is stored in the main (pk_namespace) map,\n which stores (namespace, pk_namespace, pk) -> value.","sig":null,"attributes":[{"value":"/ MultiIndex stores (namespace, index_name, idx_value, pk) -> b\"pk_len\".","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":111453,"byte_end":111527,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ Allows many values per index, and references pk.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":111528,"byte_end":111580,"line_start":19,"line_end":19,"column_start":1,"column_end":53}},{"value":"/ The associated primary key value is stored in the main (pk_namespace) map,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":111581,"byte_end":111659,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ which stores (namespace, pk_namespace, pk) -> value.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":111660,"byte_end":111716,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":111717,"byte_end":111720,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The stored pk_len is used to recover the pk from the index namespace, and perform","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":111721,"byte_end":111806,"line_start":23,"line_end":23,"column_start":1,"column_end":86}},{"value":"/ the secondary load of the associated value from the main map.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":111807,"byte_end":111872,"line_start":24,"line_end":24,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":111873,"byte_end":111876,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The PK type defines the type of Primary Key, both for deserialization, and","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":111877,"byte_end":111955,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ more important, type-safe bound key type.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":111956,"byte_end":112001,"line_start":27,"line_end":27,"column_start":1,"column_end":46}},{"value":"/ This type must match the encompassing `IndexedMap` primary key type,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":112002,"byte_end":112074,"line_start":28,"line_end":28,"column_start":1,"column_end":73}},{"value":"/ or its owned variant.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":112075,"byte_end":112100,"line_start":29,"line_end":29,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":113184,"byte_end":113187,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"new","qualname":"<MultiIndex>::new","value":"pub fn new(fn(: &T) -> IK, &'a str, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new MultiIndex","sig":null,"attributes":[{"value":"/ Create a new MultiIndex","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":112530,"byte_end":112557,"line_start":44,"line_end":44,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":112562,"byte_end":112565,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ idx_fn - lambda creating index key from value","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":112570,"byte_end":112619,"line_start":46,"line_end":46,"column_start":5,"column_end":54}},{"value":"/ pk_namespace - prefix for the primary key","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":112624,"byte_end":112669,"line_start":47,"line_end":47,"column_start":5,"column_end":50}},{"value":"/ idx_namespace - prefix for the index value","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":112674,"byte_end":112720,"line_start":48,"line_end":48,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":112725,"byte_end":112728,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ ## Example:","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":112733,"byte_end":112748,"line_start":50,"line_end":50,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":112753,"byte_end":112756,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":112761,"byte_end":112772,"line_start":52,"line_end":52,"column_start":5,"column_end":16}},{"value":"/ use cw_storage_plus::MultiIndex;","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":112777,"byte_end":112813,"line_start":53,"line_end":53,"column_start":5,"column_end":41}},{"value":"/ use serde::{Deserialize, Serialize};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":112818,"byte_end":112858,"line_start":54,"line_end":54,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":112863,"byte_end":112866,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ #[derive(Deserialize, Serialize, Clone)]","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":112871,"byte_end":112915,"line_start":56,"line_end":56,"column_start":5,"column_end":49}},{"value":"/ struct Data {","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":112920,"byte_end":112937,"line_start":57,"line_end":57,"column_start":5,"column_end":22}},{"value":"/     pub name: String,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":112942,"byte_end":112967,"line_start":58,"line_end":58,"column_start":5,"column_end":30}},{"value":"/     pub age: u32,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":112972,"byte_end":112993,"line_start":59,"line_end":59,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":112998,"byte_end":113003,"line_start":60,"line_end":60,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":113008,"byte_end":113011,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let index: MultiIndex<_, _, String> = MultiIndex::new(","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":113016,"byte_end":113074,"line_start":62,"line_end":62,"column_start":5,"column_end":63}},{"value":"/     |d: &Data| d.age,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":113079,"byte_end":113104,"line_start":63,"line_end":63,"column_start":5,"column_end":30}},{"value":"/     \"age\",","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":113109,"byte_end":113123,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/     \"age__owner\",","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":113128,"byte_end":113149,"line_start":65,"line_end":65,"column_start":5,"column_end":26}},{"value":"/ );","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":113154,"byte_end":113160,"line_start":66,"line_end":66,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":113165,"byte_end":113172,"line_start":67,"line_end":67,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":115963,"byte_end":115972,"line_start":167,"line_end":167,"column_start":12,"column_end":21},"name":"index_key","qualname":"<MultiIndex>::index_key","value":"pub fn index_key(&Self, IK) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":117148,"byte_end":117157,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"range_raw","qualname":"<MultiIndex>::range_raw","value":"pub fn range_raw<'c>(&'c Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                     Order)\n-> Box<dyn Iterator<Item = StdResult<Record<T>>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":117492,"byte_end":117500,"line_start":216,"line_end":216,"column_start":12,"column_end":20},"name":"keys_raw","qualname":"<MultiIndex>::keys_raw","value":"pub fn keys_raw<'c>(&'c Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                    Order) -> Box<dyn Iterator<Item = Vec<u8>> + 'c>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":118218,"byte_end":118234,"line_start":232,"line_end":232,"column_start":12,"column_end":28},"name":"prefix_range_raw","qualname":"<MultiIndex>::prefix_range_raw","value":"pub fn prefix_range_raw<'c>(&'c Self, &'c dyn Storage, Option<PrefixBound>,\n                            Option<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Record<T>>> + 'c> where\nT: 'c, 'a:'c","parent":null,"children":[],"decl_id":null,"docs":" While `range_raw` over a `prefix` fixes the prefix to one element and iterates over the\n remaining, `prefix_range_raw` accepts bounds for the lowest and highest elements of the\n `Prefix` itself, and iterates over those (inclusively or exclusively, depending on\n `PrefixBound`).\n There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't\n solve them.\n","sig":null,"attributes":[{"value":"/ While `range_raw` over a `prefix` fixes the prefix to one element and iterates over the","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":117785,"byte_end":117876,"line_start":226,"line_end":226,"column_start":5,"column_end":96}},{"value":"/ remaining, `prefix_range_raw` accepts bounds for the lowest and highest elements of the","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":117881,"byte_end":117972,"line_start":227,"line_end":227,"column_start":5,"column_end":96}},{"value":"/ `Prefix` itself, and iterates over those (inclusively or exclusively, depending on","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":117977,"byte_end":118063,"line_start":228,"line_end":228,"column_start":5,"column_end":91}},{"value":"/ `PrefixBound`).","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":118068,"byte_end":118087,"line_start":229,"line_end":229,"column_start":5,"column_end":24}},{"value":"/ There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":118092,"byte_end":118186,"line_start":230,"line_end":230,"column_start":5,"column_end":99}},{"value":"/ solve them.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":118191,"byte_end":118206,"line_start":231,"line_end":231,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":118955,"byte_end":118961,"line_start":256,"line_end":256,"column_start":12,"column_end":18},"name":"prefix","qualname":"<MultiIndex>::prefix","value":"pub fn prefix(&Self, IK) -> Prefix<PK, T, PK>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":119239,"byte_end":119249,"line_start":266,"line_end":266,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<MultiIndex>::sub_prefix","value":"pub fn sub_prefix(&Self, IK::Prefix) -> Prefix<PK, T, (IK::Suffix, PK)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":120194,"byte_end":120206,"line_start":290,"line_end":290,"column_start":12,"column_end":24},"name":"prefix_range","qualname":"<MultiIndex>::prefix_range","value":"pub fn prefix_range<'c>(&Self, &'c dyn Storage, Option<PrefixBound>,\n                        Option<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(PK::Output, T)>> + 'c> where T: 'c,\n'a:'c, IK: 'c, PK: 'c, PK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" While `range` over a `prefix` fixes the prefix to one element and iterates over the\n remaining, `prefix_range` accepts bounds for the lowest and highest elements of the\n `Prefix` itself, and iterates over those (inclusively or exclusively, depending on\n `PrefixBound`).\n There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't\n solve them.\n","sig":null,"attributes":[{"value":"/ While `range` over a `prefix` fixes the prefix to one element and iterates over the","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":119769,"byte_end":119856,"line_start":284,"line_end":284,"column_start":5,"column_end":92}},{"value":"/ remaining, `prefix_range` accepts bounds for the lowest and highest elements of the","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":119861,"byte_end":119948,"line_start":285,"line_end":285,"column_start":5,"column_end":92}},{"value":"/ `Prefix` itself, and iterates over those (inclusively or exclusively, depending on","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":119953,"byte_end":120039,"line_start":286,"line_end":286,"column_start":5,"column_end":91}},{"value":"/ `PrefixBound`).","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":120044,"byte_end":120063,"line_start":287,"line_end":287,"column_start":5,"column_end":24}},{"value":"/ There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":120068,"byte_end":120162,"line_start":288,"line_end":288,"column_start":5,"column_end":99}},{"value":"/ solve them.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":120167,"byte_end":120182,"line_start":289,"line_end":289,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":120729,"byte_end":120734,"line_start":309,"line_end":309,"column_start":12,"column_end":17},"name":"range","qualname":"<MultiIndex>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(PK::Output, T)>> + 'c> where T: 'c,\nPK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":121107,"byte_end":121111,"line_start":323,"line_end":323,"column_start":12,"column_end":16},"name":"keys","qualname":"<MultiIndex>::keys","value":"pub fn keys<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<PK::Output>> + 'c> where T: 'c,\nPK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":691},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":122752,"byte_end":122763,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"UniqueIndex","qualname":"::indexes::unique::UniqueIndex","value":"UniqueIndex {  }","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699}],"decl_id":null,"docs":" UniqueIndex stores (namespace, index_name, idx_value) -> {key, value}\n Allows one value per index (i.e. unique) and copies pk and data\n The optional PK type defines the type of Primary Key deserialization.\n","sig":null,"attributes":[{"value":"/ UniqueIndex stores (namespace, index_name, idx_value) -> {key, value}","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":122525,"byte_end":122598,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/ Allows one value per index (i.e. unique) and copies pk and data","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":122599,"byte_end":122666,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"/ The optional PK type defines the type of Primary Key deserialization.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":122667,"byte_end":122740,"line_start":28,"line_end":28,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":123438,"byte_end":123441,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"new","qualname":"<UniqueIndex>::new","value":"pub fn new(fn(: &T) -> IK, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new UniqueIndex","sig":null,"attributes":[{"value":"/ Create a new UniqueIndex","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":123000,"byte_end":123028,"line_start":38,"line_end":38,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":123033,"byte_end":123036,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ idx_fn - lambda creating index key from index value","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":123041,"byte_end":123096,"line_start":40,"line_end":40,"column_start":5,"column_end":60}},{"value":"/ idx_namespace - prefix for the index value","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":123101,"byte_end":123147,"line_start":41,"line_end":41,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":123152,"byte_end":123155,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ## Example:","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":123160,"byte_end":123175,"line_start":43,"line_end":43,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":123180,"byte_end":123183,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":123188,"byte_end":123199,"line_start":45,"line_end":45,"column_start":5,"column_end":16}},{"value":"/ use cw_storage_plus::UniqueIndex;","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":123204,"byte_end":123241,"line_start":46,"line_end":46,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":123246,"byte_end":123249,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ struct Data {","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":123254,"byte_end":123271,"line_start":48,"line_end":48,"column_start":5,"column_end":22}},{"value":"/     pub name: String,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":123276,"byte_end":123301,"line_start":49,"line_end":49,"column_start":5,"column_end":30}},{"value":"/     pub age: u32,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":123306,"byte_end":123327,"line_start":50,"line_end":50,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":123332,"byte_end":123337,"line_start":51,"line_end":51,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":123342,"byte_end":123345,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ UniqueIndex::<_, _, ()>::new(|d: &Data| d.age, \"data__age\");","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":123350,"byte_end":123414,"line_start":53,"line_end":53,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":123419,"byte_end":123426,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":125159,"byte_end":125168,"line_start":112,"line_end":112,"column_start":12,"column_end":21},"name":"index_key","qualname":"<UniqueIndex>::index_key","value":"pub fn index_key(&Self, IK) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":125604,"byte_end":125608,"line_start":127,"line_end":127,"column_start":12,"column_end":16},"name":"item","qualname":"<UniqueIndex>::item","value":"pub fn item(&Self, &dyn Storage, IK) -> StdResult<Option<Record<T>>>","parent":null,"children":[],"decl_id":null,"docs":" returns all items that match this secondary index, always by pk Ascending\n","sig":null,"attributes":[{"value":"/ returns all items that match this secondary index, always by pk Ascending","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":125515,"byte_end":125592,"line_start":126,"line_end":126,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":126182,"byte_end":126191,"line_start":144,"line_end":144,"column_start":12,"column_end":21},"name":"range_raw","qualname":"<UniqueIndex>::range_raw","value":"pub fn range_raw<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                     Order)\n-> Box<dyn Iterator<Item = StdResult<Record<T>>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":126511,"byte_end":126519,"line_start":157,"line_end":157,"column_start":12,"column_end":20},"name":"keys_raw","qualname":"<UniqueIndex>::keys_raw","value":"pub fn keys_raw<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                    Order) -> Box<dyn Iterator<Item = Vec<u8>> + 'c>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":127410,"byte_end":127422,"line_start":181,"line_end":181,"column_start":12,"column_end":24},"name":"prefix_range","qualname":"<UniqueIndex>::prefix_range","value":"pub fn prefix_range<'c>(&Self, &'c dyn Storage, Option<PrefixBound>,\n                        Option<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(PK::Output, T)>> + 'c> where T: 'c,\n'a:'c, IK: 'c, PK: 'c, PK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" While `range` over a `prefix` fixes the prefix to one element and iterates over the\n remaining, `prefix_range` accepts bounds for the lowest and highest elements of the\n `Prefix` itself, and iterates over those (inclusively or exclusively, depending on\n `PrefixBound`).\n There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't\n solve them.\n","sig":null,"attributes":[{"value":"/ While `range` over a `prefix` fixes the prefix to one element and iterates over the","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":126985,"byte_end":127072,"line_start":175,"line_end":175,"column_start":5,"column_end":92}},{"value":"/ remaining, `prefix_range` accepts bounds for the lowest and highest elements of the","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":127077,"byte_end":127164,"line_start":176,"line_end":176,"column_start":5,"column_end":92}},{"value":"/ `Prefix` itself, and iterates over those (inclusively or exclusively, depending on","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":127169,"byte_end":127255,"line_start":177,"line_end":177,"column_start":5,"column_end":91}},{"value":"/ `PrefixBound`).","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":127260,"byte_end":127279,"line_start":178,"line_end":178,"column_start":5,"column_end":24}},{"value":"/ There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":127284,"byte_end":127378,"line_start":179,"line_end":179,"column_start":5,"column_end":99}},{"value":"/ solve them.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":127383,"byte_end":127398,"line_start":180,"line_end":180,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":127961,"byte_end":127966,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"range","qualname":"<UniqueIndex>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(PK::Output, T)>> + 'c> where T: 'c,\nPK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":128327,"byte_end":128331,"line_start":214,"line_end":214,"column_start":12,"column_end":16},"name":"keys","qualname":"<UniqueIndex>::keys","value":"pub fn keys<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<PK::Output>> + 'c> where T: 'c,\nPK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":128686,"byte_end":128692,"line_start":228,"line_end":228,"column_start":12,"column_end":18},"name":"prefix","qualname":"<UniqueIndex>::prefix","value":"pub fn prefix(&Self, IK::Prefix) -> Prefix<PK, T, IK::Suffix>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":129004,"byte_end":129014,"line_start":238,"line_end":238,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<UniqueIndex>::sub_prefix","value":"pub fn sub_prefix(&Self, IK::SubPrefix) -> Prefix<PK, T, IK::SuperSuffix>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":778},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/mod.rs","byte_start":110161,"byte_end":110173,"line_start":14,"line_end":14,"column_start":8,"column_end":20},"name":"index_string","qualname":"::indexes::index_string","value":"pub fn index_string(&str) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":779},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/mod.rs","byte_start":110238,"byte_end":110249,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"index_tuple","qualname":"::indexes::index_tuple","value":"pub fn index_tuple(&str, u32) -> (Vec<u8>, u32)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":780},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/mod.rs","byte_start":110332,"byte_end":110344,"line_start":22,"line_end":22,"column_start":8,"column_end":20},"name":"index_triple","qualname":"::indexes::index_triple","value":"pub fn index_triple(&str, u32, Vec<u8>) -> (Vec<u8>, u32, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":781},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/mod.rs","byte_start":110453,"byte_end":110471,"line_start":26,"line_end":26,"column_start":8,"column_end":26},"name":"index_string_tuple","qualname":"::indexes::index_string_tuple","value":"pub fn index_string_tuple(&str, &str) -> (Vec<u8>, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":782},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/mod.rs","byte_start":110701,"byte_end":110706,"line_start":32,"line_end":32,"column_start":11,"column_end":16},"name":"Index","qualname":"::indexes::Index","value":"Index<T>","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":785}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/mod.rs","byte_start":110770,"byte_end":110774,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"save","qualname":"::indexes::Index::save","value":"pub fn save(&Self, &mut dyn Storage, &[u8], &T) -> StdResult<()>","parent":{"krate":0,"index":782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/mod.rs","byte_start":110853,"byte_end":110859,"line_start":37,"line_end":37,"column_start":8,"column_end":14},"name":"remove","qualname":"::indexes::Index::remove","value":"pub fn remove(&Self, &mut dyn Storage, &[u8], &T) -> StdResult<()>","parent":{"krate":0,"index":782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":790},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/int_key.rs","byte_start":129993,"byte_end":130001,"line_start":8,"line_end":8,"column_start":11,"column_end":19},"name":"CwIntKey","qualname":"::int_key::CwIntKey","value":"CwIntKey: Sized + Copy","parent":null,"children":[{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793}],"decl_id":null,"docs":" Our int keys are simply the big-endian representation bytes for unsigned ints,\n but \"sign-flipped\" (xored msb) big-endian bytes for signed ints.","sig":null,"attributes":[{"value":"/ Our int keys are simply the big-endian representation bytes for unsigned ints,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/int_key.rs","byte_start":129626,"byte_end":129708,"line_start":3,"line_end":3,"column_start":1,"column_end":83}},{"value":"/ but \"sign-flipped\" (xored msb) big-endian bytes for signed ints.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/int_key.rs","byte_start":129709,"byte_end":129777,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/int_key.rs","byte_start":129778,"byte_end":129781,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ So that the representation of signed integers is in the right lexicographical order.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/int_key.rs","byte_start":129782,"byte_end":129870,"line_start":6,"line_end":6,"column_start":1,"column_end":89}}]},{"kind":"Type","id":{"krate":0,"index":791},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/int_key.rs","byte_start":130027,"byte_end":130030,"line_start":9,"line_end":9,"column_start":10,"column_end":13},"name":"Buf","qualname":"::int_key::CwIntKey::Buf","value":"type Buf: AsRef<[u8]> + AsMut<[u8]> + Into<Vec<u8>> + Default;","parent":{"krate":0,"index":790},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/int_key.rs","byte_start":130093,"byte_end":130104,"line_start":11,"line_end":11,"column_start":8,"column_end":19},"name":"to_cw_bytes","qualname":"::int_key::CwIntKey::to_cw_bytes","value":"pub fn to_cw_bytes(&Self) -> Self::Buf","parent":{"krate":0,"index":790},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/int_key.rs","byte_start":130133,"byte_end":130146,"line_start":12,"line_end":12,"column_start":8,"column_end":21},"name":"from_cw_bytes","qualname":"::int_key::CwIntKey::from_cw_bytes","value":"pub fn from_cw_bytes(Self::Buf) -> Self","parent":{"krate":0,"index":790},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":838},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/item.rs","byte_start":133888,"byte_end":133892,"line_start":14,"line_end":14,"column_start":12,"column_end":16},"name":"Item","qualname":"::item::Item","value":"Item {  }","parent":null,"children":[{"krate":0,"index":841},{"krate":0,"index":842}],"decl_id":null,"docs":" Item stores one typed item at the given key.\n This is an analog of Singleton.\n It functions just as Path but doesn't ue a Vec and thus has a const fn constructor.\n","sig":null,"attributes":[{"value":"/ Item stores one typed item at the given key.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/item.rs","byte_start":133704,"byte_end":133752,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/ This is an analog of Singleton.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/item.rs","byte_start":133753,"byte_end":133788,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/ It functions just as Path but doesn't ue a Vec and thus has a const fn constructor.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/item.rs","byte_start":133789,"byte_end":133876,"line_start":13,"line_end":13,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/item.rs","byte_start":134202,"byte_end":134205,"line_start":22,"line_end":22,"column_start":18,"column_end":21},"name":"new","qualname":"<Item>::new","value":"pub const fn new(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/item.rs","byte_start":134492,"byte_end":134500,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Item>::as_slice","value":"pub fn as_slice(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/item.rs","byte_start":134652,"byte_end":134656,"line_start":40,"line_end":40,"column_start":12,"column_end":16},"name":"save","qualname":"<Item>::save","value":"pub fn save(&Self, &mut dyn Storage, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/item.rs","byte_start":134555,"byte_end":134640,"line_start":39,"line_end":39,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/item.rs","byte_start":134804,"byte_end":134810,"line_start":45,"line_end":45,"column_start":12,"column_end":18},"name":"remove","qualname":"<Item>::remove","value":"pub fn remove(&Self, &mut dyn Storage)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/item.rs","byte_start":134991,"byte_end":134995,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"load","qualname":"<Item>::load","value":"pub fn load(&Self, &dyn Storage) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/item.rs","byte_start":134896,"byte_end":134979,"line_start":49,"line_end":49,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/item.rs","byte_start":135289,"byte_end":135297,"line_start":57,"line_end":57,"column_start":12,"column_end":20},"name":"may_load","qualname":"<Item>::may_load","value":"pub fn may_load(&Self, &dyn Storage) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns `Ok(None)` if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns `Ok(None)` if no data there.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/item.rs","byte_start":135135,"byte_end":135234,"line_start":55,"line_end":55,"column_start":5,"column_end":104}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/item.rs","byte_start":135239,"byte_end":135277,"line_start":56,"line_end":56,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/item.rs","byte_start":135751,"byte_end":135757,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"name":"update","qualname":"<Item>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, A) -> Result<T, E> where\nA: FnOnce(T) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/item.rs","byte_start":135444,"byte_end":135514,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/item.rs","byte_start":135519,"byte_end":135605,"line_start":63,"line_end":63,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/item.rs","byte_start":135610,"byte_end":135613,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ It assumes, that data was initialized before, and if it doesn't exist, `Err(StdError::NotFound)`","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/item.rs","byte_start":135618,"byte_end":135718,"line_start":65,"line_end":65,"column_start":5,"column_end":105}},{"value":"/ is returned.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/item.rs","byte_start":135723,"byte_end":135739,"line_start":66,"line_end":66,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/item.rs","byte_start":136317,"byte_end":136322,"line_start":82,"line_end":82,"column_start":12,"column_end":17},"name":"query","qualname":"<Item>::query","value":"pub fn query<Q: CustomQuery>(&Self, &QuerierWrapper<, Q>, Addr)\n-> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" If you import the proper Item from the remote contract, this will let you read the data\n from a remote contract in a type-safe way using WasmQuery::RawQuery.","sig":null,"attributes":[{"value":"/ If you import the proper Item from the remote contract, this will let you read the data","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/item.rs","byte_start":136046,"byte_end":136137,"line_start":78,"line_end":78,"column_start":5,"column_end":96}},{"value":"/ from a remote contract in a type-safe way using WasmQuery::RawQuery.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/item.rs","byte_start":136142,"byte_end":136214,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/item.rs","byte_start":136219,"byte_end":136222,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Note that we expect an Item to be set, and error if there is no data there","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/item.rs","byte_start":136227,"byte_end":136305,"line_start":81,"line_end":81,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2068},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":151094,"byte_end":151097,"line_start":9,"line_end":9,"column_start":5,"column_end":8},"name":"Ref","qualname":"::keys::Key::Ref","value":"Key::Ref(&'a [u8])","parent":{"krate":0,"index":2066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2071},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":151113,"byte_end":151117,"line_start":10,"line_end":10,"column_start":5,"column_end":9},"name":"Val8","qualname":"::keys::Key::Val8","value":"Key::Val8([u8; ])","parent":{"krate":0,"index":2066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2075},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":151132,"byte_end":151137,"line_start":11,"line_end":11,"column_start":5,"column_end":10},"name":"Val16","qualname":"::keys::Key::Val16","value":"Key::Val16([u8; ])","parent":{"krate":0,"index":2066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2079},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":151152,"byte_end":151157,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"Val32","qualname":"::keys::Key::Val32","value":"Key::Val32([u8; ])","parent":{"krate":0,"index":2066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2083},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":151172,"byte_end":151177,"line_start":13,"line_end":13,"column_start":5,"column_end":10},"name":"Val64","qualname":"::keys::Key::Val64","value":"Key::Val64([u8; ])","parent":{"krate":0,"index":2066},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2066},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":151080,"byte_end":151083,"line_start":8,"line_end":8,"column_start":10,"column_end":13},"name":"Key","qualname":"::keys::Key","value":"pub enum Key<'a> {\n    Ref(&'a [u8]),\n    Val8([u8; ]),\n    Val16([u8; ]),\n    Val32([u8; ]),\n    Val64([u8; ]),\n}","parent":null,"children":[{"krate":0,"index":2068},{"krate":0,"index":2071},{"krate":0,"index":2075},{"krate":0,"index":2079},{"krate":0,"index":2083}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":907},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":152392,"byte_end":152402,"line_start":53,"line_end":53,"column_start":11,"column_end":21},"name":"PrimaryKey","qualname":"::keys::PrimaryKey","value":"PrimaryKey<'a>: Clone","parent":null,"children":[{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915}],"decl_id":null,"docs":" `PrimaryKey` needs to be implemented for types that want to be a `Map` (or `Map`-like) key,\n or part of a key.","sig":null,"attributes":[{"value":"/ `PrimaryKey` needs to be implemented for types that want to be a `Map` (or `Map`-like) key,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":151578,"byte_end":151673,"line_start":34,"line_end":34,"column_start":1,"column_end":96}},{"value":"/ or part of a key.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":151674,"byte_end":151695,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":151696,"byte_end":151699,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ In particular, it defines a series of types that help iterating over parts of a (composite) key:","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":151700,"byte_end":151800,"line_start":37,"line_end":37,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":151801,"byte_end":151804,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ `Prefix`: Prefix is eager. That is, except for empty keys, it's always \"one less\" than the full key.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":151805,"byte_end":151909,"line_start":39,"line_end":39,"column_start":1,"column_end":105}},{"value":"/ `Suffix`: Suffix is the complement of prefix.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":151910,"byte_end":151959,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/ `SubPrefix`: Sub-prefix is \"one less\" than prefix.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":151960,"byte_end":152014,"line_start":41,"line_end":41,"column_start":1,"column_end":55}},{"value":"/ `SuperSuffix`: Super-suffix is \"one more\" than suffix. The complement of sub-prefix.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":152015,"byte_end":152103,"line_start":42,"line_end":42,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":152104,"byte_end":152107,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ By example, for a 2-tuple `(T, U)`:","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":152108,"byte_end":152147,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":152148,"byte_end":152151,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ `T`: Prefix.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":152152,"byte_end":152168,"line_start":46,"line_end":46,"column_start":1,"column_end":17}},{"value":"/ `U`: Suffix.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":152169,"byte_end":152185,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/ `()`: Sub-prefix.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":152186,"byte_end":152207,"line_start":48,"line_end":48,"column_start":1,"column_end":22}},{"value":"/ `(T, U)`: Super-suffix.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":152208,"byte_end":152235,"line_start":49,"line_end":49,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":152236,"byte_end":152239,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ `SubPrefix` and `SuperSuffix` only make real sense in the case of triples. Still, they need to be","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":152240,"byte_end":152341,"line_start":51,"line_end":51,"column_start":1,"column_end":102}},{"value":"/ consistently defined for all types.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":152342,"byte_end":152381,"line_start":52,"line_end":52,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":909},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":152602,"byte_end":152608,"line_start":56,"line_end":56,"column_start":10,"column_end":16},"name":"Prefix","qualname":"::keys::PrimaryKey::Prefix","value":"type Prefix: Prefixer<'a>;","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":" These associated types need to implement `Prefixer`, so that they can be useful arguments\n for `prefix()`, `sub_prefix()`, and their key-deserializable variants.\n","sig":null,"attributes":[{"value":"/ These associated types need to implement `Prefixer`, so that they can be useful arguments","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":152420,"byte_end":152513,"line_start":54,"line_end":54,"column_start":5,"column_end":98}},{"value":"/ for `prefix()`, `sub_prefix()`, and their key-deserializable variants.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":152518,"byte_end":152592,"line_start":55,"line_end":55,"column_start":5,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":910},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":152633,"byte_end":152642,"line_start":57,"line_end":57,"column_start":10,"column_end":19},"name":"SubPrefix","qualname":"::keys::PrimaryKey::SubPrefix","value":"type SubPrefix: Prefixer<'a>;","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":911},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":152803,"byte_end":152809,"line_start":61,"line_end":61,"column_start":10,"column_end":16},"name":"Suffix","qualname":"::keys::PrimaryKey::Suffix","value":"type Suffix: KeyDeserialize;","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":" These associated types need to implement `KeyDeserialize`, so that they can be returned from\n `range_de()` and friends.\n","sig":null,"attributes":[{"value":"/ These associated types need to implement `KeyDeserialize`, so that they can be returned from","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":152663,"byte_end":152759,"line_start":59,"line_end":59,"column_start":5,"column_end":101}},{"value":"/ `range_de()` and friends.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":152764,"byte_end":152793,"line_start":60,"line_end":60,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":912},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":152836,"byte_end":152847,"line_start":62,"line_end":62,"column_start":10,"column_end":21},"name":"SuperSuffix","qualname":"::keys::PrimaryKey::SuperSuffix","value":"type SuperSuffix: KeyDeserialize;","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":152944,"byte_end":152947,"line_start":65,"line_end":65,"column_start":8,"column_end":11},"name":"key","qualname":"::keys::PrimaryKey::key","value":"pub fn key(&Self) -> Vec<Key>","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":" returns a slice of key steps, which can be optionally combined\n","sig":null,"attributes":[{"value":"/ returns a slice of key steps, which can be optionally combined","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":152870,"byte_end":152936,"line_start":64,"line_end":64,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":152976,"byte_end":152986,"line_start":67,"line_end":67,"column_start":8,"column_end":18},"name":"joined_key","qualname":"::keys::PrimaryKey::joined_key","value":"pub fn joined_key(&Self) -> Vec<u8>","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":153226,"byte_end":153242,"line_start":76,"line_end":76,"column_start":8,"column_end":24},"name":"joined_extra_key","qualname":"::keys::PrimaryKey::joined_extra_key","value":"pub fn joined_extra_key(&Self, &[u8]) -> Vec<u8>","parent":{"krate":0,"index":907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":956},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":155196,"byte_end":155204,"line_start":156,"line_end":156,"column_start":11,"column_end":19},"name":"Prefixer","qualname":"::keys::Prefixer","value":"Prefixer<'a>","parent":null,"children":[{"krate":0,"index":958},{"krate":0,"index":959}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":155322,"byte_end":155328,"line_start":158,"line_end":158,"column_start":8,"column_end":14},"name":"prefix","qualname":"::keys::Prefixer::prefix","value":"pub fn prefix(&Self) -> Vec<Key>","parent":{"krate":0,"index":956},"children":[],"decl_id":null,"docs":" returns 0 or more namespaces that should be length-prefixed and concatenated for range searches\n","sig":null,"attributes":[{"value":"/ returns 0 or more namespaces that should be length-prefixed and concatenated for range searches","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":155215,"byte_end":155314,"line_start":157,"line_end":157,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":155357,"byte_end":155370,"line_start":160,"line_end":160,"column_start":8,"column_end":21},"name":"joined_prefix","qualname":"::keys::Prefixer::joined_prefix","value":"pub fn joined_prefix(&Self) -> Vec<u8>","parent":{"krate":0,"index":956},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2170},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys_old.rs","byte_start":165069,"byte_end":165078,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"IntKeyOld","qualname":"::keys_old::IntKeyOld","value":"IntKeyOld { wrapped, data }","parent":null,"children":[{"krate":0,"index":2172},{"krate":0,"index":2173}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2172},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys_old.rs","byte_start":165100,"byte_end":165107,"line_start":10,"line_end":10,"column_start":9,"column_end":16},"name":"wrapped","qualname":"::keys_old::IntKeyOld::wrapped","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":2170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2173},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys_old.rs","byte_start":165126,"byte_end":165130,"line_start":11,"line_end":11,"column_start":9,"column_end":13},"name":"data","qualname":"::keys_old::IntKeyOld::data","value":"std::marker::PhantomData<T>","parent":{"krate":0,"index":2170},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys_old.rs","byte_start":165193,"byte_end":165196,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"new","qualname":"<IntKeyOld<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2191},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":167992,"byte_end":167995,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"Map","qualname":"::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":2195},{"krate":0,"index":2196},{"krate":0,"index":2197}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1157},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":168263,"byte_end":168266,"line_start":29,"line_end":29,"column_start":18,"column_end":21},"name":"new","qualname":"<Map>::new","value":"pub const fn new(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":168455,"byte_end":168464,"line_start":37,"line_end":37,"column_start":12,"column_end":21},"name":"namespace","qualname":"<Map>::namespace","value":"pub fn namespace(&Self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":168626,"byte_end":168629,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"key","qualname":"<Map>::key","value":"pub fn key(&Self, K) -> Path<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":168944,"byte_end":168948,"line_start":59,"line_end":59,"column_start":12,"column_end":16},"name":"save","qualname":"<Map>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":169072,"byte_end":169078,"line_start":63,"line_end":63,"column_start":12,"column_end":18},"name":"remove","qualname":"<Map>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":169259,"byte_end":169263,"line_start":68,"line_end":68,"column_start":12,"column_end":16},"name":"load","qualname":"<Map>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":169164,"byte_end":169247,"line_start":67,"line_end":67,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":169511,"byte_end":169519,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"may_load","qualname":"<Map>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":169359,"byte_end":169456,"line_start":72,"line_end":72,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":169461,"byte_end":169499,"line_start":73,"line_end":73,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":169750,"byte_end":169753,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"has","qualname":"<Map>::has","value":"pub fn has(&Self, &dyn Storage, K) -> bool","parent":null,"children":[],"decl_id":null,"docs":" has returns true or false if any data is at this key, without parsing or interpreting the\n contents.\n","sig":null,"attributes":[{"value":"/ has returns true or false if any data is at this key, without parsing or interpreting the","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":169627,"byte_end":169720,"line_start":78,"line_end":78,"column_start":5,"column_end":98}},{"value":"/ contents.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":169725,"byte_end":169738,"line_start":79,"line_end":79,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":170118,"byte_end":170124,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"name":"update","qualname":"<Map>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":169840,"byte_end":169910,"line_start":84,"line_end":84,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":169915,"byte_end":170001,"line_start":85,"line_end":85,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":170006,"byte_end":170009,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":170014,"byte_end":170106,"line_start":87,"line_end":87,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":170516,"byte_end":170521,"line_start":98,"line_end":98,"column_start":12,"column_end":17},"name":"query","qualname":"<Map>::query","value":"pub fn query<Q: CustomQuery>(&Self, &QuerierWrapper<, Q>, Addr, K)\n-> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" If you import the proper Map from the remote contract, this will let you read the data\n from a remote contract in a type-safe way using WasmQuery::RawQuery\n","sig":null,"attributes":[{"value":"/ If you import the proper Map from the remote contract, this will let you read the data","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":170338,"byte_end":170428,"line_start":96,"line_end":96,"column_start":5,"column_end":95}},{"value":"/ from a remote contract in a type-safe way using WasmQuery::RawQuery","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":170433,"byte_end":170504,"line_start":97,"line_end":97,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1179},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":171049,"byte_end":171059,"line_start":120,"line_end":120,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<Map>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix)\n-> Prefix<K::SuperSuffix, T, K::SuperSuffix>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1180},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":171198,"byte_end":171204,"line_start":124,"line_end":124,"column_start":12,"column_end":18},"name":"prefix","qualname":"<Map>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<K::Suffix, T, K::Suffix>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1185},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":172046,"byte_end":172062,"line_start":143,"line_end":143,"column_start":12,"column_end":28},"name":"prefix_range_raw","qualname":"<Map>::prefix_range_raw","value":"pub fn prefix_range_raw<'c>(&Self, &'c dyn Storage, Option<PrefixBound>,\n                            Option<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Record<T>>> + 'c> where\nT: 'c, 'a:'c","parent":null,"children":[],"decl_id":null,"docs":" While `range_raw` over a `prefix` fixes the prefix to one element and iterates over the\n remaining, `prefix_range_raw` accepts bounds for the lowest and highest elements of the `Prefix`\n itself, and iterates over those (inclusively or exclusively, depending on `PrefixBound`).\n There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't\n solve them.\n","sig":null,"attributes":[{"value":"/ While `range_raw` over a `prefix` fixes the prefix to one element and iterates over the","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":171621,"byte_end":171712,"line_start":138,"line_end":138,"column_start":5,"column_end":96}},{"value":"/ remaining, `prefix_range_raw` accepts bounds for the lowest and highest elements of the `Prefix`","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":171717,"byte_end":171817,"line_start":139,"line_end":139,"column_start":5,"column_end":105}},{"value":"/ itself, and iterates over those (inclusively or exclusively, depending on `PrefixBound`).","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":171822,"byte_end":171915,"line_start":140,"line_end":140,"column_start":5,"column_end":98}},{"value":"/ There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":171920,"byte_end":172014,"line_start":141,"line_end":141,"column_start":5,"column_end":99}},{"value":"/ solve them.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":172019,"byte_end":172034,"line_start":142,"line_end":142,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1191},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":173094,"byte_end":173106,"line_start":172,"line_end":172,"column_start":12,"column_end":24},"name":"prefix_range","qualname":"<Map>::prefix_range","value":"pub fn prefix_range<'c>(&Self, &'c dyn Storage, Option<PrefixBound>,\n                        Option<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'c> where T: 'c,\n'a:'c, K: 'c, K::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" While `range` over a `prefix` fixes the prefix to one element and iterates over the\n remaining, `prefix_range` accepts bounds for the lowest and highest elements of the\n `Prefix` itself, and iterates over those (inclusively or exclusively, depending on\n `PrefixBound`).\n There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't\n solve them.\n","sig":null,"attributes":[{"value":"/ While `range` over a `prefix` fixes the prefix to one element and iterates over the","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":172669,"byte_end":172756,"line_start":166,"line_end":166,"column_start":5,"column_end":92}},{"value":"/ remaining, `prefix_range` accepts bounds for the lowest and highest elements of the","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":172761,"byte_end":172848,"line_start":167,"line_end":167,"column_start":5,"column_end":92}},{"value":"/ `Prefix` itself, and iterates over those (inclusively or exclusively, depending on","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":172853,"byte_end":172939,"line_start":168,"line_end":168,"column_start":5,"column_end":91}},{"value":"/ `PrefixBound`).","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":172944,"byte_end":172963,"line_start":169,"line_end":169,"column_start":5,"column_end":24}},{"value":"/ There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":172968,"byte_end":173062,"line_start":170,"line_end":170,"column_start":5,"column_end":99}},{"value":"/ solve them.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":173067,"byte_end":173082,"line_start":171,"line_end":171,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":173871,"byte_end":173880,"line_start":201,"line_end":201,"column_start":12,"column_end":21},"name":"range_raw","qualname":"<Map>::range_raw","value":"pub fn range_raw<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                     cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Record<T>>> + 'c> where\nT: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":174226,"byte_end":174234,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"keys_raw","qualname":"<Map>::keys_raw","value":"pub fn keys_raw<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                    cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = Vec<u8>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1202},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":174552,"byte_end":174557,"line_start":227,"line_end":227,"column_start":12,"column_end":17},"name":"range","qualname":"<Map>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'c> where T: 'c,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":174914,"byte_end":174918,"line_start":241,"line_end":241,"column_start":12,"column_end":16},"name":"keys","qualname":"<Map>::keys","value":"pub fn keys<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<K::Output>> + 'c> where T: 'c,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2208},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/path.rs","byte_start":215185,"byte_end":215189,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Path","qualname":"::path::Path","value":"Path {  }","parent":null,"children":[{"krate":0,"index":2210},{"krate":0,"index":2211}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/path.rs","byte_start":215718,"byte_end":215721,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<Path<T>>::new","value":"pub fn new(&[u8], &[&[u8]]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/path.rs","byte_start":216272,"byte_end":216276,"line_start":54,"line_end":54,"column_start":12,"column_end":16},"name":"save","qualname":"<Path<T>>::save","value":"pub fn save(&Self, &mut dyn Storage, &T) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":" save will serialize the model and store, returns an error on serialization issues\n","sig":null,"attributes":[{"value":"/ save will serialize the model and store, returns an error on serialization issues","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/path.rs","byte_start":216175,"byte_end":216260,"line_start":53,"line_end":53,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/path.rs","byte_start":216425,"byte_end":216431,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"remove","qualname":"<Path<T>>::remove","value":"pub fn remove(&Self, &mut dyn Storage)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1255},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/path.rs","byte_start":216613,"byte_end":216617,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"load","qualname":"<Path<T>>::load","value":"pub fn load(&Self, &dyn Storage) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/path.rs","byte_start":216518,"byte_end":216601,"line_start":63,"line_end":63,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/path.rs","byte_start":216910,"byte_end":216918,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"may_load","qualname":"<Path<T>>::may_load","value":"pub fn may_load(&Self, &dyn Storage) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/path.rs","byte_start":216758,"byte_end":216855,"line_start":69,"line_end":69,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/path.rs","byte_start":216860,"byte_end":216898,"line_start":70,"line_end":70,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/path.rs","byte_start":217285,"byte_end":217288,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"has","qualname":"<Path<T>>::has","value":"pub fn has(&Self, &dyn Storage) -> bool","parent":null,"children":[],"decl_id":null,"docs":" has returns true or false if any data is at this key, without parsing or interpreting the\n contents. It will returns true for an length-0 byte array (Some(b\"\")), if you somehow manage to set that.\n","sig":null,"attributes":[{"value":"/ has returns true or false if any data is at this key, without parsing or interpreting the","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/path.rs","byte_start":217066,"byte_end":217159,"line_start":76,"line_end":76,"column_start":5,"column_end":98}},{"value":"/ contents. It will returns true for an length-0 byte array (Some(b\"\")), if you somehow manage to set that.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/path.rs","byte_start":217164,"byte_end":217273,"line_start":77,"line_end":77,"column_start":5,"column_end":114}}]},{"kind":"Method","id":{"krate":0,"index":1258},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/path.rs","byte_start":217663,"byte_end":217669,"line_start":86,"line_end":86,"column_start":12,"column_end":18},"name":"update","qualname":"<Path<T>>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/path.rs","byte_start":217385,"byte_end":217455,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/path.rs","byte_start":217460,"byte_end":217546,"line_start":83,"line_end":83,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/path.rs","byte_start":217551,"byte_end":217554,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/path.rs","byte_start":217559,"byte_end":217651,"line_start":85,"line_end":85,"column_start":5,"column_end":97}}]},{"kind":"Struct","id":{"krate":0,"index":2218},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/prefix.rs","byte_start":219020,"byte_end":219026,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"Prefix","qualname":"::prefix::Prefix","value":"Prefix {  }","parent":null,"children":[{"krate":0,"index":2222},{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2226}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1349},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/prefix.rs","byte_start":219753,"byte_end":219756,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<Prefix<K, T, B>>::new","value":"pub fn new(&[u8], &[Key]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1350},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/prefix.rs","byte_start":220022,"byte_end":220052,"line_start":79,"line_end":79,"column_start":12,"column_end":42},"name":"with_deserialization_functions","qualname":"<Prefix<K, T, B>>::with_deserialization_functions","value":"pub fn with_deserialization_functions(&[u8], &[Key], &[u8],\n                                      DeserializeKvFn<K, T>,\n                                      DeserializeVFn<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1356},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/prefix.rs","byte_start":220622,"byte_end":220631,"line_start":103,"line_end":103,"column_start":12,"column_end":21},"name":"range_raw","qualname":"<Prefix<K, T, B>>::range_raw","value":"pub fn range_raw<'a>(&Self, &'a dyn Storage, Option<Bound>, Option<Bound>,\n                     Order)\n-> Box<dyn Iterator<Item = StdResult<Record<T>>> + 'a> where T: 'a","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1361},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/prefix.rs","byte_start":221251,"byte_end":221259,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"keys_raw","qualname":"<Prefix<K, T, B>>::keys_raw","value":"pub fn keys_raw<'a>(&Self, &'a dyn Storage, Option<Bound>, Option<Bound>,\n                    Order) -> Box<dyn Iterator<Item = Vec<u8>> + 'a>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/prefix.rs","byte_start":221731,"byte_end":221736,"line_start":144,"line_end":144,"column_start":12,"column_end":17},"name":"range","qualname":"<Prefix<K, T, B>>::range","value":"pub fn range<'a>(&Self, &'a dyn Storage, Option<Bound>, Option<Bound>, Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'a> where T: 'a,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1371},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/prefix.rs","byte_start":222390,"byte_end":222394,"line_start":168,"line_end":168,"column_start":12,"column_end":16},"name":"keys","qualname":"<Prefix<K, T, B>>::keys","value":"pub fn keys<'a>(&Self, &'a dyn Storage, Option<Bound>, Option<Bound>, Order)\n-> Box<dyn Iterator<Item = StdResult<K::Output>> + 'a> where T: 'a,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1377},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/prefix.rs","byte_start":223080,"byte_end":223097,"line_start":194,"line_end":194,"column_start":8,"column_end":25},"name":"range_with_prefix","qualname":"::prefix::range_with_prefix","value":"pub fn range_with_prefix<'a>(&'a dyn Storage, &[u8], Option<RawBound>,\n                             Option<RawBound>, Order)\n-> Box<dyn Iterator<Item = Record> + 'a>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1432},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":245958,"byte_end":245970,"line_start":12,"line_end":12,"column_start":12,"column_end":24},"name":"SnapshotItem","qualname":"::snapshot::item::SnapshotItem","value":"SnapshotItem {  }","parent":null,"children":[{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437}],"decl_id":null,"docs":" Item that maintains a snapshot of one or more checkpoints.\n We can query historical data as well as current state.\n What data is snapshotted depends on the Strategy.\n","sig":null,"attributes":[{"value":"/ Item that maintains a snapshot of one or more checkpoints.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":245771,"byte_end":245833,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/ We can query historical data as well as current state.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":245834,"byte_end":245892,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/ What data is snapshotted depends on the Strategy.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":245893,"byte_end":245946,"line_start":11,"line_end":11,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1441},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":246402,"byte_end":246405,"line_start":30,"line_end":30,"column_start":18,"column_end":21},"name":"new","qualname":"<SnapshotItem>::new","value":"pub const fn new(&'a str, &'a str, &'a str, Strategy) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Example:","sig":null,"attributes":[{"value":"/ Example:","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":246117,"byte_end":246129,"line_start":19,"line_end":19,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":246134,"byte_end":246137,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":246142,"byte_end":246153,"line_start":21,"line_end":21,"column_start":5,"column_end":16}},{"value":"/ use cw_storage_plus::{SnapshotItem, Strategy};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":246158,"byte_end":246208,"line_start":22,"line_end":22,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":246213,"byte_end":246216,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ SnapshotItem::<'static, u64>::new(","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":246221,"byte_end":246259,"line_start":24,"line_end":24,"column_start":5,"column_end":43}},{"value":"/     \"every\",","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":246264,"byte_end":246280,"line_start":25,"line_end":25,"column_start":5,"column_end":21}},{"value":"/     \"every__check\",","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":246285,"byte_end":246308,"line_start":26,"line_end":26,"column_start":5,"column_end":28}},{"value":"/     \"every__change\",","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":246313,"byte_end":246337,"line_start":27,"line_end":27,"column_start":5,"column_end":29}},{"value":"/     Strategy::EveryBlock);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":246342,"byte_end":246372,"line_start":28,"line_end":28,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":246377,"byte_end":246384,"line_start":29,"line_end":29,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1442},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":246751,"byte_end":246765,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"name":"add_checkpoint","qualname":"<SnapshotItem>::add_checkpoint","value":"pub fn add_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1443},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":246901,"byte_end":246918,"line_start":47,"line_end":47,"column_start":12,"column_end":29},"name":"remove_checkpoint","qualname":"<SnapshotItem>::remove_checkpoint","value":"pub fn remove_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1444},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":247057,"byte_end":247066,"line_start":51,"line_end":51,"column_start":12,"column_end":21},"name":"changelog","qualname":"<SnapshotItem>::changelog","value":"pub fn changelog(&Self) -> Map<, u64, ChangeSet<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1449},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":247799,"byte_end":247803,"line_start":72,"line_end":72,"column_start":12,"column_end":16},"name":"save","qualname":"<SnapshotItem>::save","value":"pub fn save(&Self, &mut dyn Storage, &T, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1450},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":248051,"byte_end":248057,"line_start":79,"line_end":79,"column_start":12,"column_end":18},"name":"remove","qualname":"<SnapshotItem>::remove","value":"pub fn remove(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1451},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":248378,"byte_end":248382,"line_start":88,"line_end":88,"column_start":12,"column_end":16},"name":"load","qualname":"<SnapshotItem>::load","value":"pub fn load(&Self, &dyn Storage) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set, or on parse error","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":248300,"byte_end":248366,"line_start":87,"line_end":87,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1452},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":248614,"byte_end":248622,"line_start":94,"line_end":94,"column_start":12,"column_end":20},"name":"may_load","qualname":"<SnapshotItem>::may_load","value":"pub fn may_load(&Self, &dyn Storage) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored if present, returns Ok(None) if no data there.\n returns an error on parsing issues\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored if present, returns Ok(None) if no data there.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":248473,"byte_end":248559,"line_start":92,"line_end":92,"column_start":5,"column_end":91}},{"value":"/ returns an error on parsing issues","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":248564,"byte_end":248602,"line_start":93,"line_end":93,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1453},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":248732,"byte_end":248750,"line_start":98,"line_end":98,"column_start":12,"column_end":30},"name":"may_load_at_height","qualname":"<SnapshotItem>::may_load_at_height","value":"pub fn may_load_at_height(&Self, &dyn Storage, u64) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1454},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":249160,"byte_end":249179,"line_start":110,"line_end":110,"column_start":12,"column_end":31},"name":"assert_checkpointed","qualname":"<SnapshotItem>::assert_checkpointed","value":"pub fn assert_checkpointed(&Self, &dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1455},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":249705,"byte_end":249711,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"name":"update","qualname":"<SnapshotItem>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, u64, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result in the database.\n This is a shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result in the database.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":249309,"byte_end":249396,"line_start":114,"line_end":114,"column_start":5,"column_end":92}},{"value":"/ This is a shorthand for some common sequences, which may be useful.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":249401,"byte_end":249472,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":249477,"byte_end":249480,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":249485,"byte_end":249577,"line_start":117,"line_end":117,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":249582,"byte_end":249585,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This is a bit more customized than needed to only read \"old\" value 1 time, not 2 per naive approach","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":249590,"byte_end":249693,"line_start":119,"line_end":119,"column_start":5,"column_end":108}}]},{"kind":"Struct","id":{"krate":0,"index":1517},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":257006,"byte_end":257017,"line_start":19,"line_end":19,"column_start":12,"column_end":23},"name":"SnapshotMap","qualname":"::snapshot::map::SnapshotMap","value":"SnapshotMap {  }","parent":null,"children":[{"krate":0,"index":1521},{"krate":0,"index":1522}],"decl_id":null,"docs":" Map that maintains a snapshots of one or more checkpoints.\n We can query historical data as well as current state.\n What data is snapshotted depends on the Strategy.\n","sig":null,"attributes":[{"value":"/ Map that maintains a snapshots of one or more checkpoints.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":256819,"byte_end":256881,"line_start":16,"line_end":16,"column_start":1,"column_end":63}},{"value":"/ We can query historical data as well as current state.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":256882,"byte_end":256940,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/ What data is snapshotted depends on the Strategy.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":256941,"byte_end":256994,"line_start":18,"line_end":18,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1527},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":257430,"byte_end":257433,"line_start":37,"line_end":37,"column_start":18,"column_end":21},"name":"new","qualname":"<SnapshotMap>::new","value":"pub const fn new(&'a str, &'a str, &'a str, Strategy) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Example:","sig":null,"attributes":[{"value":"/ Example:","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":257139,"byte_end":257151,"line_start":25,"line_end":25,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":257156,"byte_end":257159,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":257164,"byte_end":257175,"line_start":27,"line_end":27,"column_start":5,"column_end":16}},{"value":"/ use cw_storage_plus::{SnapshotMap, Strategy};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":257180,"byte_end":257229,"line_start":28,"line_end":28,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":257234,"byte_end":257237,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ SnapshotMap::<&[u8], &str>::new(","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":257242,"byte_end":257278,"line_start":30,"line_end":30,"column_start":5,"column_end":41}},{"value":"/     \"never\",","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":257283,"byte_end":257299,"line_start":31,"line_end":31,"column_start":5,"column_end":21}},{"value":"/     \"never__check\",","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":257304,"byte_end":257327,"line_start":32,"line_end":32,"column_start":5,"column_end":28}},{"value":"/     \"never__change\",","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":257332,"byte_end":257356,"line_start":33,"line_end":33,"column_start":5,"column_end":29}},{"value":"/     Strategy::EveryBlock","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":257361,"byte_end":257389,"line_start":34,"line_end":34,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":257394,"byte_end":257400,"line_start":35,"line_end":35,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":257405,"byte_end":257412,"line_start":36,"line_end":36,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":257715,"byte_end":257724,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"changelog","qualname":"<SnapshotMap>::changelog","value":"pub fn changelog(&Self) -> &Map","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1533},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":257952,"byte_end":257966,"line_start":59,"line_end":59,"column_start":12,"column_end":26},"name":"add_checkpoint","qualname":"<SnapshotMap>::add_checkpoint","value":"pub fn add_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":258102,"byte_end":258119,"line_start":63,"line_end":63,"column_start":12,"column_end":29},"name":"remove_checkpoint","qualname":"<SnapshotMap>::remove_checkpoint","value":"pub fn remove_checkpoint(&Self, &mut dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1539},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":258405,"byte_end":258408,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"key","qualname":"<SnapshotMap>::key","value":"pub fn key(&Self, K) -> Path<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":259090,"byte_end":259094,"line_start":92,"line_end":92,"column_start":12,"column_end":16},"name":"save","qualname":"<SnapshotMap>::save","value":"pub fn save(&Self, &mut dyn Storage, K, &T, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1543},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":259361,"byte_end":259367,"line_start":99,"line_end":99,"column_start":12,"column_end":18},"name":"remove","qualname":"<SnapshotMap>::remove","value":"pub fn remove(&Self, &mut dyn Storage, K, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":259724,"byte_end":259728,"line_start":108,"line_end":108,"column_start":12,"column_end":16},"name":"load","qualname":"<SnapshotMap>::load","value":"pub fn load(&Self, &dyn Storage, K) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":" load will return an error if no data is set at the given key, or on parse error\n","sig":null,"attributes":[{"value":"/ load will return an error if no data is set at the given key, or on parse error","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":259629,"byte_end":259712,"line_start":107,"line_end":107,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1545},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":259980,"byte_end":259988,"line_start":114,"line_end":114,"column_start":12,"column_end":20},"name":"may_load","qualname":"<SnapshotMap>::may_load","value":"pub fn may_load(&Self, &dyn Storage, K) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" may_load will parse the data stored at the key if present, returns Ok(None) if no data there.\n returns an error on issues parsing\n","sig":null,"attributes":[{"value":"/ may_load will parse the data stored at the key if present, returns Ok(None) if no data there.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":259828,"byte_end":259925,"line_start":112,"line_end":112,"column_start":5,"column_end":102}},{"value":"/ returns an error on issues parsing","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":259930,"byte_end":259968,"line_start":113,"line_end":113,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1546},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":260107,"byte_end":260125,"line_start":118,"line_end":118,"column_start":12,"column_end":30},"name":"may_load_at_height","qualname":"<SnapshotMap>::may_load_at_height","value":"pub fn may_load_at_height(&Self, &dyn Storage, K, u64) -> StdResult<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1547},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":260532,"byte_end":260551,"line_start":136,"line_end":136,"column_start":12,"column_end":31},"name":"assert_checkpointed","qualname":"<SnapshotMap>::assert_checkpointed","value":"pub fn assert_checkpointed(&Self, &dyn Storage, u64) -> StdResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":261075,"byte_end":261081,"line_start":146,"line_end":146,"column_start":12,"column_end":18},"name":"update","qualname":"<SnapshotMap>::update","value":"pub fn update<A, E>(&Self, &mut dyn Storage, K, u64, A) -> Result<T, E> where\nA: FnOnce(Option<T>) -> Result<T, E>, E: From<StdError>","parent":null,"children":[],"decl_id":null,"docs":" Loads the data, perform the specified action, and store the result\n in the database. This is shorthand for some common sequences, which may be useful.","sig":null,"attributes":[{"value":"/ Loads the data, perform the specified action, and store the result","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":260681,"byte_end":260751,"line_start":140,"line_end":140,"column_start":5,"column_end":75}},{"value":"/ in the database. This is shorthand for some common sequences, which may be useful.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":260756,"byte_end":260842,"line_start":141,"line_end":141,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":260847,"byte_end":260850,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ If the data exists, `action(Some(value))` is called. Otherwise `action(None)` is called.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":260855,"byte_end":260947,"line_start":143,"line_end":143,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":260952,"byte_end":260955,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ This is a bit more customized than needed to only read \"old\" value 1 time, not 2 per naive approach","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":260960,"byte_end":261063,"line_start":145,"line_end":145,"column_start":5,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":1555},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":261839,"byte_end":261848,"line_start":172,"line_end":172,"column_start":12,"column_end":21},"name":"range_raw","qualname":"<SnapshotMap>::range_raw","value":"pub fn range_raw<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                     cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<cosmwasm_std::Record<T>>> + 'c> where\nT: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1557},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":262194,"byte_end":262202,"line_start":185,"line_end":185,"column_start":12,"column_end":20},"name":"keys_raw","qualname":"<SnapshotMap>::keys_raw","value":"pub fn keys_raw<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                    cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = Vec<u8>> + 'c> where T: 'c","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1563},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":263091,"byte_end":263103,"line_start":211,"line_end":211,"column_start":12,"column_end":24},"name":"prefix_range","qualname":"<SnapshotMap>::prefix_range","value":"pub fn prefix_range<'c>(&Self, &'c dyn Storage, Option<PrefixBound>,\n                        Option<PrefixBound>, cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'c> where T: 'c,\n'a:'c, K: 'c, K::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" While `range` over a `prefix` fixes the prefix to one element and iterates over the\n remaining, `prefix_range` accepts bounds for the lowest and highest elements of the\n `Prefix` itself, and iterates over those (inclusively or exclusively, depending on\n `PrefixBound`).\n There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't\n solve them.\n","sig":null,"attributes":[{"value":"/ While `range` over a `prefix` fixes the prefix to one element and iterates over the","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":262666,"byte_end":262753,"line_start":205,"line_end":205,"column_start":5,"column_end":92}},{"value":"/ remaining, `prefix_range` accepts bounds for the lowest and highest elements of the","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":262758,"byte_end":262845,"line_start":206,"line_end":206,"column_start":5,"column_end":92}},{"value":"/ `Prefix` itself, and iterates over those (inclusively or exclusively, depending on","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":262850,"byte_end":262936,"line_start":207,"line_end":207,"column_start":5,"column_end":91}},{"value":"/ `PrefixBound`).","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":262941,"byte_end":262960,"line_start":208,"line_end":208,"column_start":5,"column_end":24}},{"value":"/ There are some issues that distinguish these two, and blindly casting to `Vec<u8>` doesn't","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":262965,"byte_end":263059,"line_start":209,"line_end":209,"column_start":5,"column_end":99}},{"value":"/ solve them.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":263064,"byte_end":263079,"line_start":210,"line_end":210,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1565},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":263626,"byte_end":263631,"line_start":229,"line_end":229,"column_start":12,"column_end":17},"name":"range","qualname":"<SnapshotMap>::range","value":"pub fn range<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                 cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<(K::Output, T)>> + 'c> where T: 'c,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1567},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":263988,"byte_end":263992,"line_start":243,"line_end":243,"column_start":12,"column_end":16},"name":"keys","qualname":"<SnapshotMap>::keys","value":"pub fn keys<'c>(&Self, &'c dyn Storage, Option<Bound>, Option<Bound>,\n                cosmwasm_std::Order)\n-> Box<dyn Iterator<Item = StdResult<K::Output>> + 'c> where T: 'c,\nK::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1569},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":264343,"byte_end":264349,"line_start":257,"line_end":257,"column_start":12,"column_end":18},"name":"prefix","qualname":"<SnapshotMap>::prefix","value":"pub fn prefix(&Self, K::Prefix) -> Prefix<K::Suffix, T, K::Suffix>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":264485,"byte_end":264495,"line_start":261,"line_end":261,"column_start":12,"column_end":22},"name":"sub_prefix","qualname":"<SnapshotMap>::sub_prefix","value":"pub fn sub_prefix(&Self, K::SubPrefix)\n-> Prefix<K::SuperSuffix, T, K::SuperSuffix>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2250},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/mod.rs","byte_start":237275,"byte_end":237285,"line_start":165,"line_end":165,"column_start":5,"column_end":15},"name":"EveryBlock","qualname":"::snapshot::Strategy::EveryBlock","value":"Strategy::EveryBlock","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2252},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/mod.rs","byte_start":237291,"byte_end":237296,"line_start":166,"line_end":166,"column_start":5,"column_end":10},"name":"Never","qualname":"::snapshot::Strategy::Never","value":"Strategy::Never","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2254},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/mod.rs","byte_start":237635,"byte_end":237643,"line_start":172,"line_end":172,"column_start":5,"column_end":13},"name":"Selected","qualname":"::snapshot::Strategy::Selected","value":"Strategy::Selected","parent":{"krate":0,"index":2249},"children":[],"decl_id":null,"docs":" Only writes for linked blocks - does a few more reads to save some writes.\n Probably uses more gas, but less total disk usage.","sig":null,"attributes":[{"value":"/ Only writes for linked blocks - does a few more reads to save some writes.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/mod.rs","byte_start":237302,"byte_end":237380,"line_start":167,"line_end":167,"column_start":5,"column_end":83}},{"value":"/ Probably uses more gas, but less total disk usage.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/mod.rs","byte_start":237385,"byte_end":237439,"line_start":168,"line_end":168,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/mod.rs","byte_start":237444,"byte_end":237447,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Note that you need a trusted source (eg. own contract) to set/remove checkpoints.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/mod.rs","byte_start":237452,"byte_end":237537,"line_start":170,"line_end":170,"column_start":5,"column_end":90}},{"value":"/ Useful when the checkpoint setting happens in the same contract as the snapshotting.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/mod.rs","byte_start":237542,"byte_end":237630,"line_start":171,"line_end":171,"column_start":5,"column_end":93}}]},{"kind":"Enum","id":{"krate":0,"index":2249},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/mod.rs","byte_start":237260,"byte_end":237268,"line_start":164,"line_end":164,"column_start":10,"column_end":18},"name":"Strategy","qualname":"::snapshot::Strategy","value":"pub enum Strategy { EveryBlock, Never, Selected, }","parent":null,"children":[{"krate":0,"index":2250},{"krate":0,"index":2252},{"krate":0,"index":2254}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2311},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/mod.rs","byte_start":237724,"byte_end":237733,"line_start":176,"line_end":176,"column_start":12,"column_end":21},"name":"ChangeSet","qualname":"::snapshot::ChangeSet","value":"ChangeSet { old }","parent":null,"children":[{"krate":0,"index":2313}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2313},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/mod.rs","byte_start":237747,"byte_end":237750,"line_start":177,"line_end":177,"column_start":9,"column_end":12},"name":"old","qualname":"::snapshot::ChangeSet::old","value":"std::option::Option<T>","parent":{"krate":0,"index":2311},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":2245,"byte_end":2250,"line_start":32,"line_end":32,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":25},{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":3048,"byte_end":3059,"line_start":57,"line_end":57,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":5193,"byte_end":5199,"line_start":135,"line_end":135,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":5432,"byte_end":5435,"line_start":144,"line_end":144,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":5913,"byte_end":5917,"line_start":162,"line_end":162,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/de.rs","byte_start":7098,"byte_end":7101,"line_start":27,"line_end":27,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/de.rs","byte_start":7613,"byte_end":7619,"line_start":54,"line_end":54,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/de.rs","byte_start":8209,"byte_end":8213,"line_start":81,"line_end":81,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":26466,"byte_end":26476,"line_start":36,"line_end":36,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":26962,"byte_end":26972,"line_start":56,"line_end":56,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":30237,"byte_end":30247,"line_start":140,"line_end":140,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":31313,"byte_end":31323,"line_start":169,"line_end":169,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":31770,"byte_end":31780,"line_start":185,"line_end":185,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":73454,"byte_end":73472,"line_start":25,"line_end":25,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":74557,"byte_end":74575,"line_start":66,"line_end":66,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":75477,"byte_end":75495,"line_start":98,"line_end":98,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":78984,"byte_end":79002,"line_start":189,"line_end":189,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":79992,"byte_end":80010,"line_start":222,"line_end":222,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":80457,"byte_end":80475,"line_start":238,"line_end":238,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":112413,"byte_end":112423,"line_start":39,"line_end":39,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":114831,"byte_end":114841,"line_start":128,"line_end":128,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":115380,"byte_end":115390,"line_start":145,"line_end":145,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":115793,"byte_end":115803,"line_start":161,"line_end":161,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":116815,"byte_end":116825,"line_start":195,"line_end":195,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":600},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":118785,"byte_end":118795,"line_start":250,"line_end":250,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":119589,"byte_end":119599,"line_start":278,"line_end":278,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":619},{"krate":0,"index":621},{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":122933,"byte_end":122944,"line_start":36,"line_end":36,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":123732,"byte_end":123743,"line_start":65,"line_end":65,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":125044,"byte_end":125055,"line_start":107,"line_end":107,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":125921,"byte_end":125932,"line_start":137,"line_end":137,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":735},{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":126836,"byte_end":126847,"line_start":169,"line_end":169,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":746},{"krate":0,"index":748},{"krate":0,"index":750},{"krate":0,"index":753},{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/item.rs","byte_start":134171,"byte_end":134175,"line_start":21,"line_end":21,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/item.rs","byte_start":134369,"byte_end":134373,"line_start":30,"line_end":30,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":151216,"byte_end":151219,"line_start":16,"line_end":16,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":151485,"byte_end":151488,"line_start":28,"line_end":28,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":156427,"byte_end":156430,"line_start":202,"line_end":202,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":156634,"byte_end":156637,"line_start":213,"line_end":213,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":156754,"byte_end":156760,"line_start":219,"line_end":219,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":156971,"byte_end":156977,"line_start":230,"line_end":230,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":157582,"byte_end":157586,"line_start":256,"line_end":256,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":157851,"byte_end":157855,"line_start":268,"line_end":268,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys_old.rs","byte_start":165167,"byte_end":165176,"line_start":14,"line_end":14,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys_old.rs","byte_start":165360,"byte_end":165369,"line_start":23,"line_end":23,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys_old.rs","byte_start":165476,"byte_end":165485,"line_start":29,"line_end":29,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1057}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys_old.rs","byte_start":165664,"byte_end":165667,"line_start":38,"line_end":38,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys_old.rs","byte_start":165853,"byte_end":165862,"line_start":45,"line_end":45,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys_old.rs","byte_start":166172,"byte_end":166181,"line_start":60,"line_end":60,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1072}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys_old.rs","byte_start":166383,"byte_end":166392,"line_start":68,"line_end":68,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":168230,"byte_end":168233,"line_start":28,"line_end":28,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1157},{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":168533,"byte_end":168536,"line_start":42,"line_end":42,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":170956,"byte_end":170959,"line_start":115,"line_end":115,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1179},{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":171434,"byte_end":171437,"line_start":131,"line_end":131,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":172566,"byte_end":172569,"line_start":161,"line_end":161,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1191},{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":173747,"byte_end":173750,"line_start":196,"line_end":196,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1198},{"krate":0,"index":1200},{"krate":0,"index":1202},{"krate":0,"index":1204}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/path.rs","byte_start":215502,"byte_end":215506,"line_start":21,"line_end":21,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1247},{"krate":0,"index":1248}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/path.rs","byte_start":215654,"byte_end":215658,"line_start":32,"line_end":32,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1251},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/prefix.rs","byte_start":219469,"byte_end":219475,"line_start":52,"line_end":52,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1343},{"krate":0,"index":1344}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/prefix.rs","byte_start":219658,"byte_end":219664,"line_start":64,"line_end":64,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1349},{"krate":0,"index":1350}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/prefix.rs","byte_start":220504,"byte_end":220510,"line_start":97,"line_end":97,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1356},{"krate":0,"index":1361},{"krate":0,"index":1366},{"krate":0,"index":1371}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":246091,"byte_end":246103,"line_start":18,"line_end":18,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1444}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":247236,"byte_end":247248,"line_start":57,"line_end":57,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":1454},{"krate":0,"index":1455}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":257111,"byte_end":257122,"line_start":24,"line_end":24,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1527},{"krate":0,"index":1528}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":257828,"byte_end":257839,"line_start":54,"line_end":54,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1533},{"krate":0,"index":1534}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":258264,"byte_end":258275,"line_start":68,"line_end":68,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1539},{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1548}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":261552,"byte_end":261563,"line_start":165,"line_end":165,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1555},{"krate":0,"index":1557}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":262555,"byte_end":262566,"line_start":200,"line_end":200,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1563},{"krate":0,"index":1565},{"krate":0,"index":1567},{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1571}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/mod.rs","byte_start":232627,"byte_end":232635,"line_start":31,"line_end":31,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1624}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/mod.rs","byte_start":233592,"byte_end":233600,"line_start":64,"line_end":64,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1629},{"krate":0,"index":1630},{"krate":0,"index":1631},{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1634}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":2245,"byte_end":2250,"line_start":32,"line_end":32,"column_start":29,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1737},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":3048,"byte_end":3059,"line_start":57,"line_end":57,"column_start":27,"column_end":38},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":3559,"byte_end":3569,"line_start":74,"line_end":74,"column_start":24,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":907},"to":{"krate":0,"index":36}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":3576,"byte_end":3581,"line_start":74,"line_end":74,"column_start":41,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":3009},"to":{"krate":0,"index":36}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":5193,"byte_end":5199,"line_start":135,"line_end":135,"column_start":26,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":7590},"to":{"krate":0,"index":36}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":5432,"byte_end":5435,"line_start":144,"line_end":144,"column_start":26,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":7050},"to":{"krate":0,"index":36}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/bound.rs","byte_start":5913,"byte_end":5917,"line_start":162,"line_end":162,"column_start":26,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":20,"index":3085},"to":{"krate":0,"index":36}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/de.rs","byte_start":7098,"byte_end":7101,"line_start":27,"line_end":27,"column_start":25,"column_end":28},"kind":{"Impl":{"id":13}},"from":{"krate":5,"index":7050},"to":{"krate":0,"index":102}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/de.rs","byte_start":7613,"byte_end":7619,"line_start":54,"line_end":54,"column_start":25,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":5,"index":7590},"to":{"krate":0,"index":102}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/de.rs","byte_start":8209,"byte_end":8213,"line_start":81,"line_end":81,"column_start":25,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":20,"index":3085},"to":{"krate":0,"index":102}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/endian.rs","byte_start":17768,"byte_end":17773,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":3009},"to":{"krate":0,"index":172}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/endian.rs","byte_start":17776,"byte_end":17780,"line_start":12,"line_end":12,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":3014},"to":{"krate":0,"index":172}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":26466,"byte_end":26476,"line_start":36,"line_end":36,"column_start":19,"column_end":29},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":26962,"byte_end":26972,"line_start":56,"line_end":56,"column_start":19,"column_end":29},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":30237,"byte_end":30247,"line_start":140,"line_end":140,"column_start":19,"column_end":29},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":31313,"byte_end":31323,"line_start":169,"line_end":169,"column_start":19,"column_end":29},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_map.rs","byte_start":31770,"byte_end":31780,"line_start":185,"line_end":185,"column_start":19,"column_end":29},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":73454,"byte_end":73472,"line_start":25,"line_end":25,"column_start":19,"column_end":37},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":74557,"byte_end":74575,"line_start":66,"line_end":66,"column_start":19,"column_end":37},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":75477,"byte_end":75495,"line_start":98,"line_end":98,"column_start":19,"column_end":37},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":78984,"byte_end":79002,"line_start":189,"line_end":189,"column_start":19,"column_end":37},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":79992,"byte_end":80010,"line_start":222,"line_end":222,"column_start":19,"column_end":37},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexed_snapshot.rs","byte_start":80457,"byte_end":80475,"line_start":238,"line_end":238,"column_start":19,"column_end":37},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":112413,"byte_end":112423,"line_start":39,"line_end":39,"column_start":21,"column_end":31},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":114831,"byte_end":114841,"line_start":128,"line_end":128,"column_start":34,"column_end":44},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":551},"to":{"krate":0,"index":782}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":115380,"byte_end":115390,"line_start":145,"line_end":145,"column_start":21,"column_end":31},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":115793,"byte_end":115803,"line_start":161,"line_end":161,"column_start":21,"column_end":31},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":116815,"byte_end":116825,"line_start":195,"line_end":195,"column_start":21,"column_end":31},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":118785,"byte_end":118795,"line_start":250,"line_end":250,"column_start":21,"column_end":31},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/multi.rs","byte_start":119589,"byte_end":119599,"line_start":278,"line_end":278,"column_start":21,"column_end":31},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":122933,"byte_end":122944,"line_start":36,"line_end":36,"column_start":21,"column_end":32},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":123732,"byte_end":123743,"line_start":65,"line_end":65,"column_start":34,"column_end":45},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":691},"to":{"krate":0,"index":782}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":125044,"byte_end":125055,"line_start":107,"line_end":107,"column_start":21,"column_end":32},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":125921,"byte_end":125932,"line_start":137,"line_end":137,"column_start":21,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/indexes/unique.rs","byte_start":126836,"byte_end":126847,"line_start":169,"line_end":169,"column_start":21,"column_end":32},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/int_key.rs","byte_start":130003,"byte_end":130008,"line_start":8,"line_end":8,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":3009},"to":{"krate":0,"index":790}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/int_key.rs","byte_start":130011,"byte_end":130015,"line_start":8,"line_end":8,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":3014},"to":{"krate":0,"index":790}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/item.rs","byte_start":134171,"byte_end":134175,"line_start":21,"line_end":21,"column_start":13,"column_end":17},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":838},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/item.rs","byte_start":134369,"byte_end":134373,"line_start":30,"line_end":30,"column_start":13,"column_end":17},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":838},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":151216,"byte_end":151219,"line_start":16,"line_end":16,"column_start":26,"column_end":29},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2066},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":151485,"byte_end":151488,"line_start":28,"line_end":28,"column_start":31,"column_end":34},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2066},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":152408,"byte_end":152413,"line_start":53,"line_end":53,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2625},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":156427,"byte_end":156430,"line_start":202,"line_end":202,"column_start":29,"column_end":32},"kind":{"Impl":{"id":75}},"from":{"krate":5,"index":7050},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":156634,"byte_end":156637,"line_start":213,"line_end":213,"column_start":27,"column_end":30},"kind":{"Impl":{"id":76}},"from":{"krate":5,"index":7050},"to":{"krate":0,"index":956}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":156754,"byte_end":156760,"line_start":219,"line_end":219,"column_start":29,"column_end":35},"kind":{"Impl":{"id":77}},"from":{"krate":5,"index":7590},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":156971,"byte_end":156977,"line_start":230,"line_end":230,"column_start":27,"column_end":33},"kind":{"Impl":{"id":78}},"from":{"krate":5,"index":7590},"to":{"krate":0,"index":956}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":157582,"byte_end":157586,"line_start":256,"line_end":256,"column_start":29,"column_end":33},"kind":{"Impl":{"id":79}},"from":{"krate":20,"index":3085},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys.rs","byte_start":157851,"byte_end":157855,"line_start":268,"line_end":268,"column_start":27,"column_end":31},"kind":{"Impl":{"id":80}},"from":{"krate":20,"index":3085},"to":{"krate":0,"index":956}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys_old.rs","byte_start":165167,"byte_end":165176,"line_start":14,"line_end":14,"column_start":17,"column_end":26},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys_old.rs","byte_start":165360,"byte_end":165369,"line_start":23,"line_end":23,"column_start":29,"column_end":38},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2170},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys_old.rs","byte_start":165476,"byte_end":165485,"line_start":29,"line_end":29,"column_start":35,"column_end":44},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2170},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys_old.rs","byte_start":165664,"byte_end":165667,"line_start":38,"line_end":38,"column_start":40,"column_end":43},"kind":{"Impl":{"id":100}},"from":{"krate":5,"index":7050},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys_old.rs","byte_start":165853,"byte_end":165862,"line_start":45,"line_end":45,"column_start":48,"column_end":57},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2170},"to":{"krate":0,"index":907}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys_old.rs","byte_start":166172,"byte_end":166181,"line_start":60,"line_end":60,"column_start":38,"column_end":47},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2170},"to":{"krate":0,"index":956}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/keys_old.rs","byte_start":166383,"byte_end":166392,"line_start":68,"line_end":68,"column_start":37,"column_end":46},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2170},"to":{"krate":0,"index":36}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":168230,"byte_end":168233,"line_start":28,"line_end":28,"column_start":16,"column_end":19},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":168533,"byte_end":168536,"line_start":42,"line_end":42,"column_start":16,"column_end":19},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":170956,"byte_end":170959,"line_start":115,"line_end":115,"column_start":16,"column_end":19},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":171434,"byte_end":171437,"line_start":131,"line_end":131,"column_start":16,"column_end":19},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":172566,"byte_end":172569,"line_start":161,"line_end":161,"column_start":16,"column_end":19},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/map.rs","byte_start":173747,"byte_end":173750,"line_start":196,"line_end":196,"column_start":16,"column_end":19},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/path.rs","byte_start":215502,"byte_end":215506,"line_start":21,"line_end":21,"column_start":19,"column_end":23},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2208},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/path.rs","byte_start":215654,"byte_end":215658,"line_start":32,"line_end":32,"column_start":9,"column_end":13},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/prefix.rs","byte_start":219469,"byte_end":219475,"line_start":52,"line_end":52,"column_start":22,"column_end":28},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2218},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/prefix.rs","byte_start":219658,"byte_end":219664,"line_start":64,"line_end":64,"column_start":15,"column_end":21},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/prefix.rs","byte_start":220504,"byte_end":220510,"line_start":97,"line_end":97,"column_start":19,"column_end":25},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":246091,"byte_end":246103,"line_start":18,"line_end":18,"column_start":13,"column_end":25},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/item.rs","byte_start":247236,"byte_end":247248,"line_start":57,"line_end":57,"column_start":13,"column_end":25},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":257111,"byte_end":257122,"line_start":24,"line_end":24,"column_start":16,"column_end":27},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":257828,"byte_end":257839,"line_start":54,"line_end":54,"column_start":16,"column_end":27},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":258264,"byte_end":258275,"line_start":68,"line_end":68,"column_start":16,"column_end":27},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":261552,"byte_end":261563,"line_start":165,"line_end":165,"column_start":16,"column_end":27},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/map.rs","byte_start":262555,"byte_end":262566,"line_start":200,"line_end":200,"column_start":16,"column_end":27},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/mod.rs","byte_start":232627,"byte_end":232635,"line_start":31,"line_end":31,"column_start":16,"column_end":24},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-storage-plus-0.13.0/src/snapshot/mod.rs","byte_start":233592,"byte_end":233600,"line_start":64,"line_end":64,"column_start":16,"column_end":24},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2232},"to":{"krate":4294967295,"index":4294967295}}]}