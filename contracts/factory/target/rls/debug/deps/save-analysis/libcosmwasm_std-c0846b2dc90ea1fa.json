{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7","program":"/home/thienlk/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","cosmwasm_std","--edition=2018","/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"iterator\"","--cfg","feature=\"staking\"","-C","metadata=c0846b2dc90ea1fa","-C","extra-filename=-c0846b2dc90ea1fa","--out-dir","/home/thienlk/astro-contracts/contracts/factory/target/rls/debug/deps","-L","dependency=/home/thienlk/astro-contracts/contracts/factory/target/rls/debug/deps","--extern","base64=/home/thienlk/astro-contracts/contracts/factory/target/rls/debug/deps/libbase64-1632b85f8e0b320d.rmeta","--extern","cosmwasm_crypto=/home/thienlk/astro-contracts/contracts/factory/target/rls/debug/deps/libcosmwasm_crypto-06a18b68f05be5a7.rmeta","--extern","cosmwasm_derive=/home/thienlk/astro-contracts/contracts/factory/target/rls/debug/deps/libcosmwasm_derive-16b0cd45d370e4e1.so","--extern","forward_ref=/home/thienlk/astro-contracts/contracts/factory/target/rls/debug/deps/libforward_ref-a7570ee873214062.rmeta","--extern","schemars=/home/thienlk/astro-contracts/contracts/factory/target/rls/debug/deps/libschemars-2225bec1445fad29.rmeta","--extern","serde=/home/thienlk/astro-contracts/contracts/factory/target/rls/debug/deps/libserde-9291c956dec4da12.rmeta","--extern","serde_json_wasm=/home/thienlk/astro-contracts/contracts/factory/target/rls/debug/deps/libserde_json_wasm-118eb4dd514466c3.rmeta","--extern","thiserror=/home/thienlk/astro-contracts/contracts/factory/target/rls/debug/deps/libthiserror-77a4072aa0be6b6c.rmeta","--extern","uint=/home/thienlk/astro-contracts/contracts/factory/target/rls/debug/deps/libuint-28b7e58cb0d1d23a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/thienlk/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/thienlk/astro-contracts/contracts/factory/target/rls/debug/deps/libcosmwasm_std-c0846b2dc90ea1fa.rmeta"},"prelude":{"crate_id":{"name":"cosmwasm_std","disambiguator":[9644517711742492016,0]},"crate_root":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src","external_crates":[{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6651269719699919063,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/uint-0.9.1/src/uint.rs","num":2,"id":{"name":"core","disambiguator":[5314938362831806024,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3192916554191843392,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10801551532821350179,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17712696282143808288,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17759323731357012152,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14544669950029098253,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7140361926623002963,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7912653715525474172,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9995494595343579593,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7588845087494698681,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[1970575902162233525,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[17110431802946872365,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[13012552651923263309,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12999591111048205696,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[5038749270737079727,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[4159898706074811085,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[8750230721255451893,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1956939412839304600,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","num":20,"id":{"name":"schemars","disambiguator":[13960920048075055913,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","num":21,"id":{"name":"schemars_derive","disambiguator":[8295933580948661057,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","num":22,"id":{"name":"serde_json","disambiguator":[1895112506172920215,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","num":23,"id":{"name":"serde","disambiguator":[5200584076872698829,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","num":24,"id":{"name":"serde_derive","disambiguator":[14079700180325079533,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","num":25,"id":{"name":"itoa","disambiguator":[2267151899538898389,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","num":26,"id":{"name":"ryu","disambiguator":[2171007673896424832,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","num":27,"id":{"name":"dyn_clone","disambiguator":[2605580907661361283,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":28,"id":{"name":"cosmwasm_crypto","disambiguator":[8596908532507880143,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":29,"id":{"name":"ed25519_zebra","disambiguator":[9907095025824552779,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":30,"id":{"name":"curve25519_dalek","disambiguator":[8043288397115901856,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":31,"id":{"name":"byteorder","disambiguator":[8619418417566596609,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":32,"id":{"name":"digest","disambiguator":[5515402381847239510,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":33,"id":{"name":"generic_array","disambiguator":[2121410340999580066,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":34,"id":{"name":"typenum","disambiguator":[16488537656935604247,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":35,"id":{"name":"rand_core","disambiguator":[17338755646595460987,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":36,"id":{"name":"getrandom","disambiguator":[9798725127522892961,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":37,"id":{"name":"cfg_if","disambiguator":[11900951980957517807,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":38,"id":{"name":"libc","disambiguator":[10171294623923242952,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":39,"id":{"name":"zeroize","disambiguator":[7972038236996625574,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":40,"id":{"name":"subtle","disambiguator":[7349700535608907265,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":41,"id":{"name":"rand_core","disambiguator":[4771526938085149757,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":42,"id":{"name":"getrandom","disambiguator":[4294326609008209527,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":43,"id":{"name":"sha2","disambiguator":[8517548380708959353,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":44,"id":{"name":"block_buffer","disambiguator":[4550913094961176872,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":45,"id":{"name":"opaque_debug","disambiguator":[4961015825481209273,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":46,"id":{"name":"cpufeatures","disambiguator":[6908811377584941128,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":47,"id":{"name":"thiserror","disambiguator":[13486162619536162117,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":48,"id":{"name":"thiserror_impl","disambiguator":[15799121077725180487,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":49,"id":{"name":"hex","disambiguator":[13725890552695030325,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":50,"id":{"name":"k256","disambiguator":[13104596886763090022,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":51,"id":{"name":"elliptic_curve","disambiguator":[9589061564497723038,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":52,"id":{"name":"ff","disambiguator":[11228385067129510417,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":53,"id":{"name":"group","disambiguator":[13707736851479764561,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":54,"id":{"name":"pkcs8","disambiguator":[15565625788412687163,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":55,"id":{"name":"der","disambiguator":[13304370033328517792,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":56,"id":{"name":"const_oid","disambiguator":[9233655245491242765,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":57,"id":{"name":"spki","disambiguator":[1090369236621859415,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":58,"id":{"name":"crypto_bigint","disambiguator":[2364655807876926946,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":59,"id":{"name":"ecdsa","disambiguator":[15177875786497800675,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":60,"id":{"name":"hmac","disambiguator":[5240321255502924330,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":61,"id":{"name":"crypto_mac","disambiguator":[3092574390014323952,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","num":62,"id":{"name":"signature","disambiguator":[14544565545103475635,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","num":63,"id":{"name":"forward_ref","disambiguator":[10755872284309063474,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","num":64,"id":{"name":"cosmwasm_derive","disambiguator":[10025878215719424834,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","num":65,"id":{"name":"uint","disambiguator":[13880408318459430535,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","num":66,"id":{"name":"static_assertions","disambiguator":[18091571177233982124,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","num":67,"id":{"name":"crunchy","disambiguator":[2533427818140127117,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","num":68,"id":{"name":"base64","disambiguator":[2488519367402815926,0]}},{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/serde.rs","num":69,"id":{"name":"serde_json_wasm","disambiguator":[12035443003403605112,0]}}],"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":0,"byte_end":4360,"line_start":1,"line_end":120,"column_start":1,"column_end":38}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":3085},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":389,"byte_end":393,"line_start":26,"line_end":26,"column_start":28,"column_end":32},"alias_span":null,"name":"Addr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3135},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":395,"byte_end":408,"line_start":26,"line_end":26,"column_start":34,"column_end":47},"alias_span":null,"name":"CanonicalAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3136},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":395,"byte_end":408,"line_start":26,"line_end":26,"column_start":34,"column_end":47},"alias_span":null,"name":"CanonicalAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3181},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":434,"byte_end":440,"line_start":27,"line_end":27,"column_start":24,"column_end":30},"alias_span":null,"name":"Binary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3182},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":434,"byte_end":440,"line_start":27,"line_end":27,"column_start":24,"column_end":30},"alias_span":null,"name":"Binary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":182},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":465,"byte_end":469,"line_start":28,"line_end":28,"column_start":24,"column_end":28},"alias_span":null,"name":"coin","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":180},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":471,"byte_end":476,"line_start":28,"line_end":28,"column_start":30,"column_end":35},"alias_span":null,"name":"coins","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":184},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":478,"byte_end":487,"line_start":28,"line_end":28,"column_start":37,"column_end":46},"alias_span":null,"name":"has_coins","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3206},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":489,"byte_end":493,"line_start":28,"line_end":28,"column_start":48,"column_end":52},"alias_span":null,"name":"Coin","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3272},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":518,"byte_end":522,"line_start":29,"line_end":29,"column_start":23,"column_end":27},"alias_span":null,"name":"Deps","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":224},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":524,"byte_end":531,"line_start":29,"line_end":29,"column_start":29,"column_end":36},"alias_span":null,"name":"DepsMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":533,"byte_end":542,"line_start":29,"line_end":29,"column_start":38,"column_end":47},"alias_span":null,"name":"OwnedDeps","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3413},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":574,"byte_end":597,"line_start":31,"line_end":31,"column_start":5,"column_end":28},"alias_span":null,"name":"ConversionOverflowError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3436},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":599,"byte_end":616,"line_start":31,"line_end":31,"column_start":30,"column_end":47},"alias_span":null,"name":"DivideByZeroError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3390},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":618,"byte_end":631,"line_start":31,"line_end":31,"column_start":49,"column_end":62},"alias_span":null,"name":"OverflowError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3349},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":633,"byte_end":650,"line_start":31,"line_end":31,"column_start":64,"column_end":81},"alias_span":null,"name":"OverflowOperation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3282},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":656,"byte_end":674,"line_start":32,"line_end":32,"column_start":5,"column_end":23},"alias_span":null,"name":"RecoverPubkeyError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3303},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":676,"byte_end":684,"line_start":32,"line_end":32,"column_start":25,"column_end":33},"alias_span":null,"name":"StdError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":310},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":686,"byte_end":695,"line_start":32,"line_end":32,"column_start":35,"column_end":44},"alias_span":null,"name":"StdResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3673},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":697,"byte_end":708,"line_start":32,"line_end":32,"column_start":46,"column_end":57},"alias_span":null,"name":"SystemError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3685},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":710,"byte_end":727,"line_start":32,"line_end":32,"column_start":59,"column_end":76},"alias_span":null,"name":"VerificationError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":400},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1134,"byte_end":1138,"line_start":42,"line_end":42,"column_start":26,"column_end":30},"alias_span":null,"name":"Pair","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3712},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1195,"byte_end":1200,"line_start":44,"line_end":44,"column_start":27,"column_end":32},"alias_span":null,"name":"Order","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":398},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1202,"byte_end":1208,"line_start":44,"line_end":44,"column_start":34,"column_end":40},"alias_span":null,"name":"Record","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3722},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1238,"byte_end":1245,"line_start":46,"line_end":46,"column_start":5,"column_end":12},"alias_span":null,"name":"Decimal","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3781},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1247,"byte_end":1257,"line_start":46,"line_end":46,"column_start":14,"column_end":24},"alias_span":null,"name":"Decimal256","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3814},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1259,"byte_end":1282,"line_start":46,"line_end":46,"column_start":26,"column_end":49},"alias_span":null,"name":"Decimal256RangeExceeded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3815},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1259,"byte_end":1282,"line_start":46,"line_end":46,"column_start":26,"column_end":49},"alias_span":null,"name":"Decimal256RangeExceeded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3755},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1284,"byte_end":1304,"line_start":46,"line_end":46,"column_start":51,"column_end":71},"alias_span":null,"name":"DecimalRangeExceeded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3756},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1284,"byte_end":1304,"line_start":46,"line_end":46,"column_start":51,"column_end":71},"alias_span":null,"name":"DecimalRangeExceeded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":752},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1306,"byte_end":1314,"line_start":46,"line_end":46,"column_start":73,"column_end":81},"alias_span":null,"name":"Fraction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":778},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1316,"byte_end":1321,"line_start":46,"line_end":46,"column_start":83,"column_end":88},"alias_span":null,"name":"Isqrt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3840},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1323,"byte_end":1330,"line_start":46,"line_end":46,"column_start":90,"column_end":97},"alias_span":null,"name":"Uint128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4447},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1336,"byte_end":1343,"line_start":47,"line_end":47,"column_start":5,"column_end":12},"alias_span":null,"name":"Uint256","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5054},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1345,"byte_end":1352,"line_start":47,"line_end":47,"column_start":14,"column_end":21},"alias_span":null,"name":"Uint512","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5115},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1354,"byte_end":1360,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"alias_span":null,"name":"Uint64","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5429},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1393,"byte_end":1411,"line_start":50,"line_end":50,"column_start":5,"column_end":23},"alias_span":null,"name":"AllBalanceResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5368},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1413,"byte_end":1428,"line_start":50,"line_end":50,"column_start":25,"column_end":40},"alias_span":null,"name":"BalanceResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5303},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1430,"byte_end":1439,"line_start":50,"line_end":50,"column_start":42,"column_end":51},"alias_span":null,"name":"BankQuery","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6361},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1441,"byte_end":1461,"line_start":50,"line_end":50,"column_start":53,"column_end":73},"alias_span":null,"name":"ContractInfoResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1901},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1463,"byte_end":1474,"line_start":50,"line_end":50,"column_start":75,"column_end":86},"alias_span":null,"name":"CustomQuery","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6504},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1480,"byte_end":1492,"line_start":51,"line_end":51,"column_start":5,"column_end":17},"alias_span":null,"name":"QueryRequest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6352},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1494,"byte_end":1503,"line_start":51,"line_end":51,"column_start":19,"column_end":28},"alias_span":null,"name":"WasmQuery","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5792},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1564,"byte_end":1586,"line_start":55,"line_end":55,"column_start":5,"column_end":27},"alias_span":null,"name":"AllDelegationsResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5995},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1588,"byte_end":1609,"line_start":55,"line_end":55,"column_start":29,"column_end":50},"alias_span":null,"name":"AllValidatorsResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5731},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1611,"byte_end":1630,"line_start":55,"line_end":55,"column_start":52,"column_end":71},"alias_span":null,"name":"BondedDenomResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5794},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1632,"byte_end":1642,"line_start":55,"line_end":55,"column_start":73,"column_end":83},"alias_span":null,"name":"Delegation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5922},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1644,"byte_end":1658,"line_start":55,"line_end":55,"column_start":85,"column_end":99},"alias_span":null,"name":"FullDelegation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5662},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1664,"byte_end":1676,"line_start":56,"line_end":56,"column_start":5,"column_end":17},"alias_span":null,"name":"StakingQuery","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6117},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1678,"byte_end":1687,"line_start":56,"line_end":56,"column_start":19,"column_end":28},"alias_span":null,"name":"Validator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6056},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1689,"byte_end":1706,"line_start":56,"line_end":56,"column_start":30,"column_end":47},"alias_span":null,"name":"ValidatorResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2053},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1859,"byte_end":1863,"line_start":61,"line_end":61,"column_start":5,"column_end":9},"alias_span":null,"name":"attr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1979},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1865,"byte_end":1877,"line_start":61,"line_end":61,"column_start":11,"column_end":23},"alias_span":null,"name":"wasm_execute","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1977},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1879,"byte_end":1895,"line_start":61,"line_end":61,"column_start":25,"column_end":41},"alias_span":null,"name":"wasm_instantiate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7516},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1897,"byte_end":1906,"line_start":61,"line_end":61,"column_start":43,"column_end":52},"alias_span":null,"name":"Attribute","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6808},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1908,"byte_end":1915,"line_start":61,"line_end":61,"column_start":54,"column_end":61},"alias_span":null,"name":"BankMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6584},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1917,"byte_end":1931,"line_start":61,"line_end":61,"column_start":63,"column_end":77},"alias_span":null,"name":"ContractResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6664},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1933,"byte_end":1942,"line_start":61,"line_end":61,"column_start":79,"column_end":88},"alias_span":null,"name":"CosmosMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1975},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1944,"byte_end":1953,"line_start":61,"line_end":61,"column_start":90,"column_end":99},"alias_span":null,"name":"CustomMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7395},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1959,"byte_end":1964,"line_start":62,"line_end":62,"column_start":5,"column_end":10},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7452},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1966,"byte_end":1971,"line_start":62,"line_end":62,"column_start":12,"column_end":17},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2060},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1973,"byte_end":1986,"line_start":62,"line_end":62,"column_start":19,"column_end":32},"alias_span":null,"name":"QueryResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7811},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1988,"byte_end":1993,"line_start":62,"line_end":62,"column_start":34,"column_end":39},"alias_span":null,"name":"Reply","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7722},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":1995,"byte_end":2002,"line_start":62,"line_end":62,"column_start":41,"column_end":48},"alias_span":null,"name":"ReplyOn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7582},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":2004,"byte_end":2012,"line_start":62,"line_end":62,"column_start":50,"column_end":58},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7731},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":2014,"byte_end":2020,"line_start":62,"line_end":62,"column_start":60,"column_end":66},"alias_span":null,"name":"SubMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7939},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":2022,"byte_end":2045,"line_start":62,"line_end":62,"column_start":68,"column_end":91},"alias_span":null,"name":"SubMsgExecutionResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7932},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":2051,"byte_end":2063,"line_start":63,"line_end":63,"column_start":5,"column_end":17},"alias_span":null,"name":"SubMsgResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8069},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":2065,"byte_end":2077,"line_start":63,"line_end":63,"column_start":19,"column_end":31},"alias_span":null,"name":"SystemResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7375},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":2079,"byte_end":2086,"line_start":63,"line_end":63,"column_start":33,"column_end":40},"alias_span":null,"name":"WasmMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7119},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":2144,"byte_end":2159,"line_start":66,"line_end":66,"column_start":26,"column_end":41},"alias_span":null,"name":"DistributionMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6983},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":2161,"byte_end":2171,"line_start":66,"line_end":66,"column_start":43,"column_end":53},"alias_span":null,"name":"StakingMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2293},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":2272,"byte_end":2283,"line_start":69,"line_end":69,"column_start":24,"column_end":35},"alias_span":null,"name":"from_binary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2290},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":2285,"byte_end":2295,"line_start":69,"line_end":69,"column_start":37,"column_end":47},"alias_span":null,"name":"from_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2298},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":2297,"byte_end":2306,"line_start":69,"line_end":69,"column_start":49,"column_end":58},"alias_span":null,"name":"to_binary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2295},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":2308,"byte_end":2314,"line_start":69,"line_end":69,"column_start":60,"column_end":66},"alias_span":null,"name":"to_vec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8077},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":2341,"byte_end":2354,"line_start":70,"line_end":70,"column_start":25,"column_end":38},"alias_span":null,"name":"MemoryStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8081},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":2382,"byte_end":2391,"line_start":71,"line_end":71,"column_start":27,"column_end":36},"alias_span":null,"name":"Timestamp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2493},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":2417,"byte_end":2420,"line_start":72,"line_end":72,"column_start":25,"column_end":28},"alias_span":null,"name":"Api","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2503},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":2422,"byte_end":2429,"line_start":72,"line_end":72,"column_start":30,"column_end":37},"alias_span":null,"name":"Querier","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2502},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":2431,"byte_end":2444,"line_start":72,"line_end":72,"column_start":39,"column_end":52},"alias_span":null,"name":"QuerierResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8131},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":2446,"byte_end":2460,"line_start":72,"line_end":72,"column_start":54,"column_end":68},"alias_span":null,"name":"QuerierWrapper","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2487},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":2462,"byte_end":2469,"line_start":72,"line_end":72,"column_start":70,"column_end":77},"alias_span":null,"name":"Storage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8260},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":2495,"byte_end":2504,"line_start":73,"line_end":73,"column_start":24,"column_end":33},"alias_span":null,"name":"BlockInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8387},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":2506,"byte_end":2518,"line_start":73,"line_end":73,"column_start":35,"column_end":47},"alias_span":null,"name":"ContractInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8140},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":2520,"byte_end":2523,"line_start":73,"line_end":73,"column_start":49,"column_end":52},"alias_span":null,"name":"Env","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8327},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":2525,"byte_end":2536,"line_start":73,"line_end":73,"column_start":54,"column_end":65},"alias_span":null,"name":"MessageInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8203},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":2538,"byte_end":2553,"line_start":73,"line_end":73,"column_start":67,"column_end":82},"alias_span":null,"name":"TransactionInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8460},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":3609,"byte_end":3623,"line_start":102,"line_end":102,"column_start":26,"column_end":40},"alias_span":null,"name":"StakingQuerier","value":"","parent":{"krate":0,"index":3035}},{"kind":"Use","ref_id":{"krate":0,"index":3030},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":3660,"byte_end":3669,"line_start":104,"line_end":104,"column_start":9,"column_end":18},"alias_span":null,"name":"digit_sum","value":"","parent":{"krate":0,"index":3035}},{"kind":"Use","ref_id":{"krate":0,"index":2966},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":3671,"byte_end":3688,"line_start":104,"line_end":104,"column_start":20,"column_end":37},"alias_span":null,"name":"mock_dependencies","value":"","parent":{"krate":0,"index":3035}},{"kind":"Use","ref_id":{"krate":0,"index":2967},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":3690,"byte_end":3720,"line_start":104,"line_end":104,"column_start":39,"column_end":69},"alias_span":null,"name":"mock_dependencies_with_balance","value":"","parent":{"krate":0,"index":3035}},{"kind":"Use","ref_id":{"krate":0,"index":2968},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":3730,"byte_end":3761,"line_start":105,"line_end":105,"column_start":9,"column_end":40},"alias_span":null,"name":"mock_dependencies_with_balances","value":"","parent":{"krate":0,"index":3035}},{"kind":"Use","ref_id":{"krate":0,"index":2986},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":3763,"byte_end":3771,"line_start":105,"line_end":105,"column_start":42,"column_end":50},"alias_span":null,"name":"mock_env","value":"","parent":{"krate":0,"index":3035}},{"kind":"Use","ref_id":{"krate":0,"index":2987},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":3773,"byte_end":3782,"line_start":105,"line_end":105,"column_start":52,"column_end":61},"alias_span":null,"name":"mock_info","value":"","parent":{"krate":0,"index":3035}},{"kind":"Use","ref_id":{"krate":0,"index":3032},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":3784,"byte_end":3799,"line_start":105,"line_end":105,"column_start":63,"column_end":78},"alias_span":null,"name":"mock_wasmd_attr","value":"","parent":{"krate":0,"index":3035}},{"kind":"Use","ref_id":{"krate":0,"index":3028},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":3801,"byte_end":3815,"line_start":105,"line_end":105,"column_start":80,"column_end":94},"alias_span":null,"name":"riffle_shuffle","value":"","parent":{"krate":0,"index":3035}},{"kind":"Use","ref_id":{"krate":0,"index":8454},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":3825,"byte_end":3836,"line_start":106,"line_end":106,"column_start":9,"column_end":20},"alias_span":null,"name":"BankQuerier","value":"","parent":{"krate":0,"index":3035}},{"kind":"Use","ref_id":{"krate":0,"index":8444},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":3838,"byte_end":3845,"line_start":106,"line_end":106,"column_start":22,"column_end":29},"alias_span":null,"name":"MockApi","value":"","parent":{"krate":0,"index":3035}},{"kind":"Use","ref_id":{"krate":0,"index":2989},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":3847,"byte_end":3858,"line_start":106,"line_end":106,"column_start":31,"column_end":42},"alias_span":null,"name":"MockQuerier","value":"","parent":{"krate":0,"index":3035}},{"kind":"Use","ref_id":{"krate":0,"index":2988},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":3860,"byte_end":3890,"line_start":106,"line_end":106,"column_start":44,"column_end":74},"alias_span":null,"name":"MockQuerierCustomHandlerResult","value":"","parent":{"krate":0,"index":3035}},{"kind":"Use","ref_id":{"krate":0,"index":2969},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":3892,"byte_end":3903,"line_start":106,"line_end":106,"column_start":76,"column_end":87},"alias_span":null,"name":"MockStorage","value":"","parent":{"krate":0,"index":3035}},{"kind":"Use","ref_id":{"krate":0,"index":2965},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":3913,"byte_end":3931,"line_start":107,"line_end":107,"column_start":9,"column_end":27},"alias_span":null,"name":"MOCK_CONTRACT_ADDR","value":"","parent":{"krate":0,"index":3035}},{"kind":"Use","ref_id":{"krate":64,"index":10},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":4348,"byte_end":4359,"line_start":120,"line_end":120,"column_start":26,"column_end":37},"alias_span":null,"name":"entry_point","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":0,"byte_end":4360,"line_start":1,"line_end":120,"column_start":1,"column_end":38},"name":"","qualname":"::","value":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":66},{"krate":0,"index":70},{"krate":0,"index":158},{"krate":0,"index":187},{"krate":0,"index":192},{"krate":0,"index":245},{"krate":0,"index":385},{"krate":0,"index":391},{"krate":0,"index":407},{"krate":0,"index":1788},{"krate":0,"index":1915},{"krate":0,"index":2261},{"krate":0,"index":2269},{"krate":0,"index":2300},{"krate":0,"index":2344},{"krate":0,"index":2373},{"krate":0,"index":2542},{"krate":0,"index":2562},{"krate":0,"index":2563},{"krate":0,"index":2566},{"krate":0,"index":2567},{"krate":0,"index":2569},{"krate":0,"index":2570},{"krate":0,"index":2572},{"krate":0,"index":2573},{"krate":0,"index":2576},{"krate":0,"index":2579},{"krate":0,"index":2582},{"krate":0,"index":2585},{"krate":0,"index":2586},{"krate":0,"index":2589},{"krate":0,"index":2592},{"krate":0,"index":2595},{"krate":0,"index":2596},{"krate":0,"index":2599},{"krate":0,"index":2602},{"krate":0,"index":2605},{"krate":0,"index":2608},{"krate":0,"index":2611},{"krate":0,"index":2614},{"krate":0,"index":2617},{"krate":0,"index":2620},{"krate":0,"index":2623},{"krate":0,"index":2626},{"krate":0,"index":2627},{"krate":0,"index":2630},{"krate":0,"index":2633},{"krate":0,"index":2634},{"krate":0,"index":2637},{"krate":0,"index":2640},{"krate":0,"index":2641},{"krate":0,"index":2643},{"krate":0,"index":2644},{"krate":0,"index":2646},{"krate":0,"index":2649},{"krate":0,"index":2652},{"krate":0,"index":2655},{"krate":0,"index":2658},{"krate":0,"index":2661},{"krate":0,"index":2664},{"krate":0,"index":2665},{"krate":0,"index":2668},{"krate":0,"index":2671},{"krate":0,"index":2674},{"krate":0,"index":2677},{"krate":0,"index":2680},{"krate":0,"index":2683},{"krate":0,"index":2686},{"krate":0,"index":2687},{"krate":0,"index":2690},{"krate":0,"index":2693},{"krate":0,"index":2696},{"krate":0,"index":2699},{"krate":0,"index":2702},{"krate":0,"index":2705},{"krate":0,"index":2708},{"krate":0,"index":2711},{"krate":0,"index":2712},{"krate":0,"index":2715},{"krate":0,"index":2718},{"krate":0,"index":2721},{"krate":0,"index":2724},{"krate":0,"index":2727},{"krate":0,"index":2730},{"krate":0,"index":2733},{"krate":0,"index":2736},{"krate":0,"index":2739},{"krate":0,"index":2742},{"krate":0,"index":2745},{"krate":0,"index":2748},{"krate":0,"index":2751},{"krate":0,"index":2754},{"krate":0,"index":2757},{"krate":0,"index":2760},{"krate":0,"index":2763},{"krate":0,"index":2766},{"krate":0,"index":2769},{"krate":0,"index":2770},{"krate":0,"index":2773},{"krate":0,"index":2776},{"krate":0,"index":2777},{"krate":0,"index":2780},{"krate":0,"index":2783},{"krate":0,"index":2786},{"krate":0,"index":2789},{"krate":0,"index":2792},{"krate":0,"index":2795},{"krate":0,"index":2796},{"krate":0,"index":2799},{"krate":0,"index":2802},{"krate":0,"index":2805},{"krate":0,"index":2808},{"krate":0,"index":2811},{"krate":0,"index":2812},{"krate":0,"index":2815},{"krate":0,"index":2818},{"krate":0,"index":2821},{"krate":0,"index":2824},{"krate":0,"index":2827},{"krate":0,"index":3035},{"krate":0,"index":3082}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3085},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":5538,"byte_end":5542,"line_start":28,"line_end":28,"column_start":12,"column_end":16},"name":"Addr","qualname":"::addresses::Addr","value":"","parent":null,"children":[],"decl_id":null,"docs":" A human readable address.","sig":null,"attributes":[{"value":"/ A human readable address.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":4511,"byte_end":4540,"line_start":9,"line_end":9,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":4541,"byte_end":4544,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ In Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":4545,"byte_end":4632,"line_start":11,"line_end":11,"column_start":1,"column_end":88}},{"value":"/ assumptions should be made other than being UTF-8 encoded and of reasonable length.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":4633,"byte_end":4720,"line_start":12,"line_end":12,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":4721,"byte_end":4724,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This type represents a validated address. It can be created in the following ways","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":4725,"byte_end":4810,"line_start":14,"line_end":14,"column_start":1,"column_end":86}},{"value":"/ 1. Use `Addr::unchecked(input)`","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":4811,"byte_end":4846,"line_start":15,"line_end":15,"column_start":1,"column_end":36}},{"value":"/ 2. Use `let checked: Addr = deps.api.addr_validate(input)?`","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":4847,"byte_end":4910,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/ 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?`","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":4911,"byte_end":4983,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ 4. Deserialize from JSON. This must only be done from JSON that was validated before","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":4984,"byte_end":5072,"line_start":18,"line_end":18,"column_start":1,"column_end":89}},{"value":"/    such as a contract's state. `Addr` must not be used in messages sent by the user","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":5073,"byte_end":5160,"line_start":19,"line_end":19,"column_start":1,"column_end":88}},{"value":"/    because this would result in unvalidated instances.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":5161,"byte_end":5219,"line_start":20,"line_end":20,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":5220,"byte_end":5223,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This type is immutable. If you really need to mutate it (Really? Are you sure?), create","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":5224,"byte_end":5315,"line_start":22,"line_end":22,"column_start":1,"column_end":92}},{"value":"/ a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String`","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":5316,"byte_end":5407,"line_start":23,"line_end":23,"column_start":1,"column_end":92}},{"value":"/ instance.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":5408,"byte_end":5421,"line_start":24,"line_end":24,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":6230,"byte_end":6239,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"unchecked","qualname":"<Addr>::unchecked","value":"pub fn unchecked<impl Into<String>: Into<String>>(impl Into<String>) -> Addr","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Addr` instance from the given input without checking the validity\n of the input. Since `Addr` must always contain valid addresses, the caller is\n responsible for ensuring the input is valid.","sig":null,"attributes":[{"value":"/ Creates a new `Addr` instance from the given input without checking the validity","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":5569,"byte_end":5653,"line_start":31,"line_end":31,"column_start":5,"column_end":89}},{"value":"/ of the input. Since `Addr` must always contain valid addresses, the caller is","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":5658,"byte_end":5739,"line_start":32,"line_end":32,"column_start":5,"column_end":86}},{"value":"/ responsible for ensuring the input is valid.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":5744,"byte_end":5792,"line_start":33,"line_end":33,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":5797,"byte_end":5800,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Use this in cases where the address was validated before or in test code.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":5805,"byte_end":5882,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ If you see this in contract code, it should most likely be replaced with","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":5887,"byte_end":5963,"line_start":36,"line_end":36,"column_start":5,"column_end":81}},{"value":"/ `let checked: Addr = deps.api.addr_humanize(canonical_addr)?`.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":5968,"byte_end":6034,"line_start":37,"line_end":37,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":6039,"byte_end":6042,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":6047,"byte_end":6062,"line_start":39,"line_end":39,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":6067,"byte_end":6070,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":6075,"byte_end":6082,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Addr};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":6087,"byte_end":6118,"line_start":42,"line_end":42,"column_start":5,"column_end":36}},{"value":"/ let address = Addr::unchecked(\"foobar\");","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":6123,"byte_end":6167,"line_start":43,"line_end":43,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(address, \"foobar\");","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":6172,"byte_end":6206,"line_start":44,"line_end":44,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":6211,"byte_end":6218,"line_start":45,"line_end":45,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":6335,"byte_end":6341,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Addr>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":6314,"byte_end":6323,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":6550,"byte_end":6558,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Addr>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the UTF-8 encoded address string as a byte array.","sig":null,"attributes":[{"value":"/ Returns the UTF-8 encoded address string as a byte array.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":6394,"byte_end":6455,"line_start":55,"line_end":55,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":6460,"byte_end":6463,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `address.as_str().as_bytes()`.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":6468,"byte_end":6524,"line_start":57,"line_end":57,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":6529,"byte_end":6538,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":6688,"byte_end":6699,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"into_string","qualname":"<Addr>::into_string","value":"pub fn into_string(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Utility for explicit conversion to `String`.\n","sig":null,"attributes":[{"value":"/ Utility for explicit conversion to `String`.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":6614,"byte_end":6662,"line_start":63,"line_end":63,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":6667,"byte_end":6676,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3135},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":8125,"byte_end":8138,"line_start":139,"line_end":139,"column_start":12,"column_end":25},"name":"CanonicalAddr","qualname":"::addresses::CanonicalAddr","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3137},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":8139,"byte_end":8149,"line_start":139,"line_end":139,"column_start":26,"column_end":36},"name":"0","qualname":"::addresses::CanonicalAddr::0","value":"binary::Binary","parent":{"krate":0,"index":3135},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":9061,"byte_end":9069,"line_start":173,"line_end":173,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<CanonicalAddr>::as_slice","value":"pub fn as_slice(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3181},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":23420,"byte_end":23426,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Binary","qualname":"::binary::Binary","value":"","parent":null,"children":[],"decl_id":null,"docs":" Binary is a wrapper around Vec<u8> to add base64 de/serialization\n with serde. It also adds some helper methods to help encode inline.","sig":null,"attributes":[{"value":"/ Binary is a wrapper around Vec<u8> to add base64 de/serialization","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":23101,"byte_end":23170,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/ with serde. It also adds some helper methods to help encode inline.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":23171,"byte_end":23242,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":23243,"byte_end":23246,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":23247,"byte_end":23332,"line_start":12,"line_end":12,"column_start":1,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":3205},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":23456,"byte_end":23467,"line_start":14,"line_end":14,"column_start":48,"column_end":59},"name":"0","qualname":"::binary::Binary::0","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":3181},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"schemars(with = \"String\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":23427,"byte_end":23455,"line_start":14,"line_end":14,"column_start":19,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":23597,"byte_end":23608,"line_start":19,"line_end":19,"column_start":12,"column_end":23},"name":"from_base64","qualname":"<Binary>::from_base64","value":"pub fn from_base64(&str) -> StdResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" take an (untrusted) string and decode it into bytes.\n fails if it is not valid base64\n","sig":null,"attributes":[{"value":"/ take an (untrusted) string and decode it into bytes.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":23489,"byte_end":23545,"line_start":17,"line_end":17,"column_start":5,"column_end":61}},{"value":"/ fails if it is not valid base64","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":23550,"byte_end":23585,"line_start":18,"line_end":18,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":23927,"byte_end":23936,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"to_base64","qualname":"<Binary>::to_base64","value":"pub fn to_base64(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" encode to base64 string (guaranteed to be success as we control the data inside).\n this returns normalized form (with trailing = if needed)\n","sig":null,"attributes":[{"value":"/ encode to base64 string (guaranteed to be success as we control the data inside).","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":23765,"byte_end":23850,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ this returns normalized form (with trailing = if needed)","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":23855,"byte_end":23915,"line_start":25,"line_end":25,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":24006,"byte_end":24014,"line_start":30,"line_end":30,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Binary>::as_slice","value":"pub fn as_slice(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":25058,"byte_end":25066,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Binary>::to_array","value":"pub fn to_array<const LENGTH: usize>(&Self) -> StdResult<[u8; ]>","parent":null,"children":[],"decl_id":null,"docs":" Copies content into fixed-sized array.\n The result type `A: ByteArray` is a workaround for\n the missing [const-generics](https://rust-lang.github.io/rfcs/2000-const-generics.html).\n `A` is a fixed-sized array like `[u8; 8]`.","sig":null,"attributes":[{"value":"/ Copies content into fixed-sized array.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":24070,"byte_end":24112,"line_start":34,"line_end":34,"column_start":5,"column_end":47}},{"value":"/ The result type `A: ByteArray` is a workaround for","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":24117,"byte_end":24171,"line_start":35,"line_end":35,"column_start":5,"column_end":59}},{"value":"/ the missing [const-generics](https://rust-lang.github.io/rfcs/2000-const-generics.html).","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":24176,"byte_end":24268,"line_start":36,"line_end":36,"column_start":5,"column_end":97}},{"value":"/ `A` is a fixed-sized array like `[u8; 8]`.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":24273,"byte_end":24319,"line_start":37,"line_end":37,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":24324,"byte_end":24327,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ByteArray is implemented for `[u8; 0]` to `[u8; 64]`, such that","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":24332,"byte_end":24399,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/ we are limited to 64 bytes for now.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":24404,"byte_end":24443,"line_start":40,"line_end":40,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":24448,"byte_end":24451,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":24456,"byte_end":24470,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":24475,"byte_end":24478,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Copy to array of explicit length","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":24483,"byte_end":24519,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":24524,"byte_end":24527,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":24532,"byte_end":24539,"line_start":46,"line_end":46,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::Binary;","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":24544,"byte_end":24575,"line_start":47,"line_end":47,"column_start":5,"column_end":36}},{"value":"/ let binary = Binary::from(&[0xfb, 0x1f, 0x37]);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":24580,"byte_end":24631,"line_start":48,"line_end":48,"column_start":5,"column_end":56}},{"value":"/ let array: [u8; 3] = binary.to_array().unwrap();","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":24636,"byte_end":24688,"line_start":49,"line_end":49,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(array, [0xfb, 0x1f, 0x37]);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":24693,"byte_end":24735,"line_start":50,"line_end":50,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":24740,"byte_end":24747,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":24752,"byte_end":24755,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Copy to integer","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":24760,"byte_end":24779,"line_start":53,"line_end":53,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":24784,"byte_end":24787,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":24792,"byte_end":24799,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::Binary;","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":24804,"byte_end":24835,"line_start":56,"line_end":56,"column_start":5,"column_end":36}},{"value":"/ let binary = Binary::from(&[0x8b, 0x67, 0x64, 0x84, 0xb5, 0xfb, 0x1f, 0x37]);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":24840,"byte_end":24921,"line_start":57,"line_end":57,"column_start":5,"column_end":86}},{"value":"/ let num = u64::from_be_bytes(binary.to_array().unwrap());","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":24926,"byte_end":24987,"line_start":58,"line_end":58,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num, 10045108015024774967);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":24992,"byte_end":25034,"line_start":59,"line_end":59,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":25039,"byte_end":25046,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3206},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":39814,"byte_end":39818,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Coin","qualname":"::coins::Coin","value":"Coin { denom, amount }","parent":null,"children":[{"krate":0,"index":3207},{"krate":0,"index":3208}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3207},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":39829,"byte_end":39834,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"denom","qualname":"::coins::Coin::denom","value":"std::string::String","parent":{"krate":0,"index":3206},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3208},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":39852,"byte_end":39858,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"name":"amount","qualname":"::coins::Coin::amount","value":"math::uint128::Uint128","parent":{"krate":0,"index":3206},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":39895,"byte_end":39898,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"new","qualname":"<Coin>::new","value":"pub fn new<impl Into<String>: Into<String>>(u128, impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":180},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":41069,"byte_end":41074,"line_start":49,"line_end":49,"column_start":8,"column_end":13},"name":"coins","qualname":"::coins::coins","value":"pub fn coins<impl Into<String>: Into<String>>(u128, impl Into<String>)\n-> Vec<Coin>","parent":null,"children":[],"decl_id":null,"docs":" A shortcut constructor for a set of one denomination of coins","sig":null,"attributes":[{"value":"/ A shortcut constructor for a set of one denomination of coins","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":40544,"byte_end":40609,"line_start":32,"line_end":32,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":40610,"byte_end":40613,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":40614,"byte_end":40628,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":40629,"byte_end":40632,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":40633,"byte_end":40640,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{coins, BankMsg, CosmosMsg, Response, SubMsg};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":40641,"byte_end":40711,"line_start":37,"line_end":37,"column_start":1,"column_end":71}},{"value":"/ # use cosmwasm_std::testing::{mock_env, mock_info};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":40712,"byte_end":40767,"line_start":38,"line_end":38,"column_start":1,"column_end":56}},{"value":"/ # let env = mock_env();","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":40768,"byte_end":40795,"line_start":39,"line_end":39,"column_start":1,"column_end":28}},{"value":"/ # let info = mock_info(\"sender\", &[]);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":40796,"byte_end":40838,"line_start":40,"line_end":40,"column_start":1,"column_end":43}},{"value":"/ let tip = coins(123, \"ucosm\");","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":40839,"byte_end":40873,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":40874,"byte_end":40877,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let mut response: Response = Default::default();","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":40878,"byte_end":40930,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ response.messages = vec![SubMsg::new(BankMsg::Send {","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":40931,"byte_end":40987,"line_start":44,"line_end":44,"column_start":1,"column_end":57}},{"value":"/   to_address: info.sender.into(),","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":40988,"byte_end":41025,"line_start":45,"line_end":45,"column_start":1,"column_end":38}},{"value":"/   amount: tip,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":41026,"byte_end":41044,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ })];","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":41045,"byte_end":41053,"line_start":47,"line_end":47,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":41054,"byte_end":41061,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":182},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":41710,"byte_end":41714,"line_start":73,"line_end":73,"column_start":8,"column_end":12},"name":"coin","qualname":"::coins::coin","value":"pub fn coin<impl Into<String>: Into<String>>(u128, impl Into<String>) -> Coin","parent":null,"children":[],"decl_id":null,"docs":" A shorthand constructor for Coin","sig":null,"attributes":[{"value":"/ A shorthand constructor for Coin","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":41163,"byte_end":41199,"line_start":53,"line_end":53,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":41200,"byte_end":41203,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":41204,"byte_end":41218,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":41219,"byte_end":41222,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":41223,"byte_end":41230,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{coin, BankMsg, CosmosMsg, Response, SubMsg};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":41231,"byte_end":41300,"line_start":58,"line_end":58,"column_start":1,"column_end":70}},{"value":"/ # use cosmwasm_std::testing::{mock_env, mock_info};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":41301,"byte_end":41356,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/ # let env = mock_env();","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":41357,"byte_end":41384,"line_start":60,"line_end":60,"column_start":1,"column_end":28}},{"value":"/ # let info = mock_info(\"sender\", &[]);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":41385,"byte_end":41427,"line_start":61,"line_end":61,"column_start":1,"column_end":43}},{"value":"/ let tip = vec![","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":41428,"byte_end":41447,"line_start":62,"line_end":62,"column_start":1,"column_end":20}},{"value":"/     coin(123, \"ucosm\"),","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":41448,"byte_end":41475,"line_start":63,"line_end":63,"column_start":1,"column_end":28}},{"value":"/     coin(24, \"ustake\"),","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":41476,"byte_end":41503,"line_start":64,"line_end":64,"column_start":1,"column_end":28}},{"value":"/ ];","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":41504,"byte_end":41510,"line_start":65,"line_end":65,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":41511,"byte_end":41514,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ let mut response: Response = Default::default();","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":41515,"byte_end":41567,"line_start":67,"line_end":67,"column_start":1,"column_end":53}},{"value":"/ response.messages = vec![SubMsg::new(BankMsg::Send {","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":41568,"byte_end":41624,"line_start":68,"line_end":68,"column_start":1,"column_end":57}},{"value":"/     to_address: info.sender.into(),","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":41625,"byte_end":41664,"line_start":69,"line_end":69,"column_start":1,"column_end":40}},{"value":"/     amount: tip,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":41665,"byte_end":41685,"line_start":70,"line_end":70,"column_start":1,"column_end":21}},{"value":"/ })];","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":41686,"byte_end":41694,"line_start":71,"line_end":71,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":41695,"byte_end":41702,"line_start":72,"line_end":72,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":184},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":41885,"byte_end":41894,"line_start":78,"line_end":78,"column_start":8,"column_end":17},"name":"has_coins","qualname":"::coins::has_coins","value":"pub fn has_coins(&[Coin], &Coin) -> bool","parent":null,"children":[],"decl_id":null,"docs":" has_coins returns true if the list of coins has at least the required amount\n","sig":null,"attributes":[{"value":"/ has_coins returns true if the list of coins has at least the required amount","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":41797,"byte_end":41877,"line_start":77,"line_end":77,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":215},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/deps.rs","byte_start":44961,"byte_end":44970,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"OwnedDeps","qualname":"::deps::OwnedDeps","value":"OwnedDeps { storage, api, querier, custom_query_type }","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223}],"decl_id":null,"docs":" Holds all external dependencies of the contract.\n Designed to allow easy dependency injection at runtime.\n This cannot be copied or cloned since it would behave differently\n for mock storages and a bridge storage in the VM.\n","sig":null,"attributes":[{"value":"/ Holds all external dependencies of the contract.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/deps.rs","byte_start":44713,"byte_end":44765,"line_start":8,"line_end":8,"column_start":1,"column_end":53}},{"value":"/ Designed to allow easy dependency injection at runtime.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/deps.rs","byte_start":44766,"byte_end":44825,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"/ This cannot be copied or cloned since it would behave differently","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/deps.rs","byte_start":44826,"byte_end":44895,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ for mock storages and a bridge storage in the VM.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/deps.rs","byte_start":44896,"byte_end":44949,"line_start":11,"line_end":11,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":220},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/deps.rs","byte_start":45037,"byte_end":45044,"line_start":13,"line_end":13,"column_start":9,"column_end":16},"name":"storage","qualname":"::deps::OwnedDeps::storage","value":"S","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":221},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/deps.rs","byte_start":45057,"byte_end":45060,"line_start":14,"line_end":14,"column_start":9,"column_end":12},"name":"api","qualname":"::deps::OwnedDeps::api","value":"A","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":222},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/deps.rs","byte_start":45073,"byte_end":45080,"line_start":15,"line_end":15,"column_start":9,"column_end":16},"name":"querier","qualname":"::deps::OwnedDeps::querier","value":"Q","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":223},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/deps.rs","byte_start":45093,"byte_end":45110,"line_start":16,"line_end":16,"column_start":9,"column_end":26},"name":"custom_query_type","qualname":"::deps::OwnedDeps::custom_query_type","value":"std::marker::PhantomData<C>","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":224},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/deps.rs","byte_start":45142,"byte_end":45149,"line_start":19,"line_end":19,"column_start":12,"column_end":19},"name":"DepsMut","qualname":"::deps::DepsMut","value":"DepsMut { storage, api, querier }","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":227},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/deps.rs","byte_start":45188,"byte_end":45195,"line_start":20,"line_end":20,"column_start":9,"column_end":16},"name":"storage","qualname":"::deps::DepsMut::storage","value":"&'a mut (dyn traits::Storage + 'a)","parent":{"krate":0,"index":224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":228},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/deps.rs","byte_start":45226,"byte_end":45229,"line_start":21,"line_end":21,"column_start":9,"column_end":12},"name":"api","qualname":"::deps::DepsMut::api","value":"&'a (dyn traits::Api + 'a)","parent":{"krate":0,"index":224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":229},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/deps.rs","byte_start":45252,"byte_end":45259,"line_start":22,"line_end":22,"column_start":9,"column_end":16},"name":"querier","qualname":"::deps::DepsMut::querier","value":"traits::QuerierWrapper<'a, C>","parent":{"krate":0,"index":224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3272},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/deps.rs","byte_start":45315,"byte_end":45319,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"Deps","qualname":"::deps::Deps","value":"Deps { storage, api, querier }","parent":null,"children":[{"krate":0,"index":3275},{"krate":0,"index":3276},{"krate":0,"index":3277}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3275},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/deps.rs","byte_start":45358,"byte_end":45365,"line_start":27,"line_end":27,"column_start":9,"column_end":16},"name":"storage","qualname":"::deps::Deps::storage","value":"&'a (dyn traits::Storage + 'a)","parent":{"krate":0,"index":3272},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3276},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/deps.rs","byte_start":45392,"byte_end":45395,"line_start":28,"line_end":28,"column_start":9,"column_end":12},"name":"api","qualname":"::deps::Deps::api","value":"&'a (dyn traits::Api + 'a)","parent":{"krate":0,"index":3272},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3277},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/deps.rs","byte_start":45418,"byte_end":45425,"line_start":29,"line_end":29,"column_start":9,"column_end":16},"name":"querier","qualname":"::deps::Deps::querier","value":"traits::QuerierWrapper<'a, C>","parent":{"krate":0,"index":3272},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/deps.rs","byte_start":45886,"byte_end":45892,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<OwnedDeps<S, A, Q, C>>::as_ref","value":"pub fn as_ref(&Self) -> Deps<, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/deps.rs","byte_start":46084,"byte_end":46090,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<OwnedDeps<S, A, Q, C>>::as_mut","value":"pub fn as_mut(&mut Self) -> DepsMut<, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/deps.rs","byte_start":46340,"byte_end":46346,"line_start":57,"line_end":57,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<DepsMut>::as_ref","value":"pub fn as_ref(&Self) -> Deps<, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/deps.rs","byte_start":46514,"byte_end":46520,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"name":"branch","qualname":"<DepsMut>::branch","value":"pub fn branch(&mut Self) -> DepsMut<, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3295},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","byte_start":48904,"byte_end":48921,"line_start":11,"line_end":11,"column_start":5,"column_end":22},"name":"InvalidHashFormat","qualname":"::errors::recover_pubkey_error::RecoverPubkeyError::InvalidHashFormat","value":"RecoverPubkeyError::InvalidHashFormat","parent":{"krate":0,"index":3282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid hash format\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","byte_start":48868,"byte_end":48899,"line_start":10,"line_end":10,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3297},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","byte_start":48968,"byte_end":48990,"line_start":13,"line_end":13,"column_start":5,"column_end":27},"name":"InvalidSignatureFormat","qualname":"::errors::recover_pubkey_error::RecoverPubkeyError::InvalidSignatureFormat","value":"RecoverPubkeyError::InvalidSignatureFormat","parent":{"krate":0,"index":3282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid signature format\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","byte_start":48927,"byte_end":48963,"line_start":12,"line_end":12,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3299},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","byte_start":49067,"byte_end":49087,"line_start":15,"line_end":15,"column_start":5,"column_end":25},"name":"InvalidRecoveryParam","qualname":"::errors::recover_pubkey_error::RecoverPubkeyError::InvalidRecoveryParam","value":"RecoverPubkeyError::InvalidRecoveryParam","parent":{"krate":0,"index":3282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid recovery parameter. Supported values: 0 and 1.\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","byte_start":48996,"byte_end":49062,"line_start":14,"line_end":14,"column_start":5,"column_end":71}}]},{"kind":"StructVariant","id":{"krate":0,"index":3301},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","byte_start":49137,"byte_end":49147,"line_start":17,"line_end":17,"column_start":5,"column_end":15},"name":"UnknownErr","qualname":"::errors::recover_pubkey_error::RecoverPubkeyError::UnknownErr","value":"RecoverPubkeyError::UnknownErr { error_code }","parent":{"krate":0,"index":3282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Unknown error: {error_code}\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","byte_start":49093,"byte_end":49132,"line_start":16,"line_end":16,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":3282},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","byte_start":48843,"byte_end":48861,"line_start":9,"line_end":9,"column_start":10,"column_end":28},"name":"RecoverPubkeyError","qualname":"::errors::recover_pubkey_error::RecoverPubkeyError","value":"pub enum RecoverPubkeyError {\n    InvalidHashFormat,\n    InvalidSignatureFormat,\n    InvalidRecoveryParam,\n    UnknownErr {\n        error_code: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":3295},{"krate":0,"index":3297},{"krate":0,"index":3299},{"krate":0,"index":3301}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","byte_start":49291,"byte_end":49302,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"unknown_err","qualname":"<RecoverPubkeyError>::unknown_err","value":"pub fn unknown_err(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3322},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":52217,"byte_end":52232,"line_start":26,"line_end":26,"column_start":5,"column_end":20},"name":"VerificationErr","qualname":"::errors::std_error::StdError::VerificationErr","value":"StdError::VerificationErr { source }","parent":{"krate":0,"index":3303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Verification error: {source}\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":52172,"byte_end":52212,"line_start":25,"line_end":25,"column_start":5,"column_end":45}}]},{"kind":"StructVariant","id":{"krate":0,"index":3324},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":52397,"byte_end":52413,"line_start":32,"line_end":32,"column_start":5,"column_end":21},"name":"RecoverPubkeyErr","qualname":"::errors::std_error::StdError::RecoverPubkeyErr","value":"StdError::RecoverPubkeyErr { source }","parent":{"krate":0,"index":3303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Recover pubkey error: {source}\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":52350,"byte_end":52392,"line_start":31,"line_end":31,"column_start":5,"column_end":47}}]},{"kind":"StructVariant","id":{"krate":0,"index":3326},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":52628,"byte_end":52638,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"name":"GenericErr","qualname":"::errors::std_error::StdError::GenericErr","value":"StdError::GenericErr { msg }","parent":{"krate":0,"index":3303},"children":[],"decl_id":null,"docs":" Whenever there is no specific error type available\n","sig":null,"attributes":[{"value":"/ Whenever there is no specific error type available","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":52532,"byte_end":52586,"line_start":37,"line_end":37,"column_start":5,"column_end":59}},{"value":"error(\"Generic error: {msg}\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":52591,"byte_end":52623,"line_start":38,"line_end":38,"column_start":5,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":3328},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":52787,"byte_end":52800,"line_start":45,"line_end":45,"column_start":5,"column_end":18},"name":"InvalidBase64","qualname":"::errors::std_error::StdError::InvalidBase64","value":"StdError::InvalidBase64 { msg }","parent":{"krate":0,"index":3303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid Base64 string: {msg}\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":52742,"byte_end":52782,"line_start":44,"line_end":44,"column_start":5,"column_end":45}}]},{"kind":"StructVariant","id":{"krate":0,"index":3330},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":52975,"byte_end":52990,"line_start":51,"line_end":51,"column_start":5,"column_end":20},"name":"InvalidDataSize","qualname":"::errors::std_error::StdError::InvalidDataSize","value":"StdError::InvalidDataSize { expected, actual }","parent":{"krate":0,"index":3303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid data size: expected={expected} actual={actual}\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":52904,"byte_end":52970,"line_start":50,"line_end":50,"column_start":5,"column_end":71}}]},{"kind":"StructVariant","id":{"krate":0,"index":3333},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":53292,"byte_end":53303,"line_start":59,"line_end":59,"column_start":5,"column_end":16},"name":"InvalidUtf8","qualname":"::errors::std_error::StdError::InvalidUtf8","value":"StdError::InvalidUtf8 { msg }","parent":{"krate":0,"index":3303},"children":[],"decl_id":null,"docs":" Whenever UTF-8 bytes cannot be decoded into a unicode string, e.g. in String::from_utf8 or str::from_utf8.\n","sig":null,"attributes":[{"value":"/ Whenever UTF-8 bytes cannot be decoded into a unicode string, e.g. in String::from_utf8 or str::from_utf8.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":53117,"byte_end":53227,"line_start":57,"line_end":57,"column_start":5,"column_end":115}},{"value":"error(\"Cannot decode UTF8 bytes into string: {msg}\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":53232,"byte_end":53287,"line_start":58,"line_end":58,"column_start":5,"column_end":60}}]},{"kind":"StructVariant","id":{"krate":0,"index":3335},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":53440,"byte_end":53448,"line_start":65,"line_end":65,"column_start":5,"column_end":13},"name":"NotFound","qualname":"::errors::std_error::StdError::NotFound","value":"StdError::NotFound { kind }","parent":{"krate":0,"index":3303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"{kind} not found\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":53407,"byte_end":53435,"line_start":64,"line_end":64,"column_start":5,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":3337},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":53614,"byte_end":53622,"line_start":71,"line_end":71,"column_start":5,"column_end":13},"name":"ParseErr","qualname":"::errors::std_error::StdError::ParseErr","value":"StdError::ParseErr { target_type, msg }","parent":{"krate":0,"index":3303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Error parsing into type {target_type}: {msg}\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":53553,"byte_end":53609,"line_start":70,"line_end":70,"column_start":5,"column_end":61}}]},{"kind":"StructVariant","id":{"krate":0,"index":3340},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":53862,"byte_end":53874,"line_start":79,"line_end":79,"column_start":5,"column_end":17},"name":"SerializeErr","qualname":"::errors::std_error::StdError::SerializeErr","value":"StdError::SerializeErr { source_type, msg }","parent":{"krate":0,"index":3303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Error serializing type {source_type}: {msg}\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":53802,"byte_end":53857,"line_start":78,"line_end":78,"column_start":5,"column_end":60}}]},{"kind":"StructVariant","id":{"krate":0,"index":3343},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":54089,"byte_end":54097,"line_start":87,"line_end":87,"column_start":5,"column_end":13},"name":"Overflow","qualname":"::errors::std_error::StdError::Overflow","value":"StdError::Overflow { source }","parent":{"krate":0,"index":3303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Overflow: {source}\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":54054,"byte_end":54084,"line_start":86,"line_end":86,"column_start":5,"column_end":35}}]},{"kind":"StructVariant","id":{"krate":0,"index":3345},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":54252,"byte_end":54264,"line_start":93,"line_end":93,"column_start":5,"column_end":17},"name":"DivideByZero","qualname":"::errors::std_error::StdError::DivideByZero","value":"StdError::DivideByZero { source }","parent":{"krate":0,"index":3303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Divide by zero: {source}\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":54211,"byte_end":54247,"line_start":92,"line_end":92,"column_start":5,"column_end":41}}]},{"kind":"StructVariant","id":{"krate":0,"index":3347},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":54417,"byte_end":54435,"line_start":99,"line_end":99,"column_start":5,"column_end":23},"name":"ConversionOverflow","qualname":"::errors::std_error::StdError::ConversionOverflow","value":"StdError::ConversionOverflow { source }","parent":{"krate":0,"index":3303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Conversion error: \")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":54382,"byte_end":54412,"line_start":98,"line_end":98,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":3303},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":52157,"byte_end":52165,"line_start":24,"line_end":24,"column_start":10,"column_end":18},"name":"StdError","qualname":"::errors::std_error::StdError","value":"pub enum StdError {\n    VerificationErr {\n        source: VerificationError,\n    },\n    RecoverPubkeyErr {\n        source: RecoverPubkeyError,\n    },\n    GenericErr {\n        msg: String,\n    },\n    InvalidBase64 {\n        msg: String,\n    },\n    InvalidDataSize {\n        expected: u64,\n        actual: u64,\n    },\n    InvalidUtf8 {\n        msg: String,\n    },\n    NotFound {\n        kind: String,\n    },\n    ParseErr {\n        target_type: String,\n        msg: String,\n    },\n    SerializeErr {\n        source_type: String,\n        msg: String,\n    },\n    Overflow {\n        source: OverflowError,\n    },\n    DivideByZero {\n        source: DivideByZeroError,\n    },\n    ConversionOverflow {\n        source: ConversionOverflowError,\n    },\n}","parent":null,"children":[{"krate":0,"index":3322},{"krate":0,"index":3324},{"krate":0,"index":3326},{"krate":0,"index":3328},{"krate":0,"index":3330},{"krate":0,"index":3333},{"krate":0,"index":3335},{"krate":0,"index":3337},{"krate":0,"index":3340},{"krate":0,"index":3343},{"krate":0,"index":3345},{"krate":0,"index":3347}],"decl_id":null,"docs":" Structured error type for init, execute and query.","sig":null,"attributes":[{"value":"/ Structured error type for init, execute and query.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":51376,"byte_end":51430,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":51431,"byte_end":51434,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This can be serialized and passed over the Wasm/VM boundary, which allows us to use structured","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":51435,"byte_end":51533,"line_start":10,"line_end":10,"column_start":1,"column_end":99}},{"value":"/ error types in e.g. integration tests. In that process backtraces are stripped off.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":51534,"byte_end":51621,"line_start":11,"line_end":11,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":51622,"byte_end":51625,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The prefix \"Std\" means \"the standard error within the standard library\". This is not the only","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":51626,"byte_end":51723,"line_start":13,"line_end":13,"column_start":1,"column_end":98}},{"value":"/ result/error type in cosmwasm-std.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":51724,"byte_end":51762,"line_start":14,"line_end":14,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":51763,"byte_end":51766,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ When new cases are added, they should describe the problem rather than what was attempted (e.g.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":51767,"byte_end":51866,"line_start":16,"line_end":16,"column_start":1,"column_end":100}},{"value":"/ InvalidBase64 is preferred over Base64DecodingErr). In the long run this allows us to get rid of","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":51867,"byte_end":51967,"line_start":17,"line_end":17,"column_start":1,"column_end":101}},{"value":"/ the duplication in \"StdError::FooErr\".","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":51968,"byte_end":52010,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":52011,"byte_end":52014,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Checklist for adding a new error:","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":52015,"byte_end":52052,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/ - Add enum case","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":52053,"byte_end":52072,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/ - Add creator function in std_error_helpers.rs","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":52073,"byte_end":52123,"line_start":22,"line_end":22,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":54601,"byte_end":54617,"line_start":108,"line_end":108,"column_start":12,"column_end":28},"name":"verification_err","qualname":"<StdError>::verification_err","value":"pub fn verification_err(VerificationError) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":54827,"byte_end":54845,"line_start":116,"line_end":116,"column_start":12,"column_end":30},"name":"recover_pubkey_err","qualname":"<StdError>::recover_pubkey_err","value":"pub fn recover_pubkey_err(RecoverPubkeyError) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":55057,"byte_end":55068,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"generic_err","qualname":"<StdError>::generic_err","value":"pub fn generic_err<impl Into<String>: Into<String>>(impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":55279,"byte_end":55293,"line_start":132,"line_end":132,"column_start":12,"column_end":26},"name":"invalid_base64","qualname":"<StdError>::invalid_base64","value":"pub fn invalid_base64<impl ToString: ToString>(impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":55508,"byte_end":55525,"line_start":140,"line_end":140,"column_start":12,"column_end":29},"name":"invalid_data_size","qualname":"<StdError>::invalid_data_size","value":"pub fn invalid_data_size(usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":55889,"byte_end":55901,"line_start":150,"line_end":150,"column_start":12,"column_end":24},"name":"invalid_utf8","qualname":"<StdError>::invalid_utf8","value":"pub fn invalid_utf8<impl ToString: ToString>(impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":56114,"byte_end":56123,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"name":"not_found","qualname":"<StdError>::not_found","value":"pub fn not_found<impl Into<String>: Into<String>>(impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":56335,"byte_end":56344,"line_start":166,"line_end":166,"column_start":12,"column_end":21},"name":"parse_err","qualname":"<StdError>::parse_err","value":"pub fn parse_err<impl Into<String>: Into<String>,\n                 impl ToString: ToString>(impl Into<String>, impl ToString)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":56621,"byte_end":56634,"line_start":175,"line_end":175,"column_start":12,"column_end":25},"name":"serialize_err","qualname":"<StdError>::serialize_err","value":"pub fn serialize_err<impl Into<String>: Into<String>,\n                     impl ToString: ToString>(impl Into<String>,\n                                              impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":56915,"byte_end":56923,"line_start":184,"line_end":184,"column_start":12,"column_end":20},"name":"overflow","qualname":"<StdError>::overflow","value":"pub fn overflow(OverflowError) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":57122,"byte_end":57136,"line_start":192,"line_end":192,"column_start":12,"column_end":26},"name":"divide_by_zero","qualname":"<StdError>::divide_by_zero","value":"pub fn divide_by_zero(DivideByZeroError) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":310},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":64912,"byte_end":64921,"line_start":447,"line_end":447,"column_start":10,"column_end":19},"name":"StdResult","qualname":"::errors::std_error::StdResult","value":"core::result::Result<T, StdError>","parent":null,"children":[],"decl_id":null,"docs":" The return type for init, execute and query. Since the error type cannot be serialized to JSON,\n this is only available within the contract and its unit tests.","sig":null,"attributes":[{"value":"/ The return type for init, execute and query. Since the error type cannot be serialized to JSON,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":64594,"byte_end":64693,"line_start":442,"line_end":442,"column_start":1,"column_end":100}},{"value":"/ this is only available within the contract and its unit tests.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":64694,"byte_end":64760,"line_start":443,"line_end":443,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":64761,"byte_end":64764,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ The prefix \"Std\" means \"the standard result within the standard library\". This is not the only","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":64765,"byte_end":64863,"line_start":445,"line_end":445,"column_start":1,"column_end":99}},{"value":"/ result/error type in cosmwasm-std.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":64864,"byte_end":64902,"line_start":446,"line_end":446,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3350},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":65035,"byte_end":65038,"line_start":451,"line_end":451,"column_start":5,"column_end":8},"name":"Add","qualname":"::errors::std_error::OverflowOperation::Add","value":"OverflowOperation::Add","parent":{"krate":0,"index":3349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3352},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":65044,"byte_end":65047,"line_start":452,"line_end":452,"column_start":5,"column_end":8},"name":"Sub","qualname":"::errors::std_error::OverflowOperation::Sub","value":"OverflowOperation::Sub","parent":{"krate":0,"index":3349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3354},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":65053,"byte_end":65056,"line_start":453,"line_end":453,"column_start":5,"column_end":8},"name":"Mul","qualname":"::errors::std_error::OverflowOperation::Mul","value":"OverflowOperation::Mul","parent":{"krate":0,"index":3349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3356},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":65062,"byte_end":65065,"line_start":454,"line_end":454,"column_start":5,"column_end":8},"name":"Pow","qualname":"::errors::std_error::OverflowOperation::Pow","value":"OverflowOperation::Pow","parent":{"krate":0,"index":3349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3358},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":65071,"byte_end":65074,"line_start":455,"line_end":455,"column_start":5,"column_end":8},"name":"Shr","qualname":"::errors::std_error::OverflowOperation::Shr","value":"OverflowOperation::Shr","parent":{"krate":0,"index":3349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3360},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":65080,"byte_end":65083,"line_start":456,"line_end":456,"column_start":5,"column_end":8},"name":"Shl","qualname":"::errors::std_error::OverflowOperation::Shl","value":"OverflowOperation::Shl","parent":{"krate":0,"index":3349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3349},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":65011,"byte_end":65028,"line_start":450,"line_end":450,"column_start":10,"column_end":27},"name":"OverflowOperation","qualname":"::errors::std_error::OverflowOperation","value":"pub enum OverflowOperation { Add, Sub, Mul, Pow, Shr, Shl, }","parent":null,"children":[{"krate":0,"index":3350},{"krate":0,"index":3352},{"krate":0,"index":3354},{"krate":0,"index":3356},{"krate":0,"index":3358},{"krate":0,"index":3360}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3390},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":65342,"byte_end":65355,"line_start":467,"line_end":467,"column_start":12,"column_end":25},"name":"OverflowError","qualname":"::errors::std_error::OverflowError","value":"OverflowError { operation, operand1, operand2 }","parent":null,"children":[{"krate":0,"index":3391},{"krate":0,"index":3392},{"krate":0,"index":3393}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Cannot {operation} with {operand1} and {operand2}\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":65269,"byte_end":65330,"line_start":466,"line_end":466,"column_start":1,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":3391},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":65366,"byte_end":65375,"line_start":468,"line_end":468,"column_start":9,"column_end":18},"name":"operation","qualname":"::errors::std_error::OverflowError::operation","value":"errors::std_error::OverflowOperation","parent":{"krate":0,"index":3390},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3392},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":65404,"byte_end":65412,"line_start":469,"line_end":469,"column_start":9,"column_end":17},"name":"operand1","qualname":"::errors::std_error::OverflowError::operand1","value":"std::string::String","parent":{"krate":0,"index":3390},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3393},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":65430,"byte_end":65438,"line_start":470,"line_end":470,"column_start":9,"column_end":17},"name":"operand2","qualname":"::errors::std_error::OverflowError::operand2","value":"std::string::String","parent":{"krate":0,"index":3390},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":65483,"byte_end":65486,"line_start":474,"line_end":474,"column_start":12,"column_end":15},"name":"new","qualname":"<OverflowError>::new","value":"pub fn new<impl ToString: ToString,\n           impl ToString: ToString>(OverflowOperation, impl ToString,\n                                    impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3413},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":66112,"byte_end":66135,"line_start":495,"line_end":495,"column_start":12,"column_end":35},"name":"ConversionOverflowError","qualname":"::errors::std_error::ConversionOverflowError","value":"ConversionOverflowError { source_type, target_type, value }","parent":null,"children":[{"krate":0,"index":3414},{"krate":0,"index":3415},{"krate":0,"index":3416}],"decl_id":null,"docs":" The error returned by [`TryFrom`] conversions that overflow, for example\n when converting from [`Uint256`] to [`Uint128`].","sig":null,"attributes":[{"value":"/ The error returned by [`TryFrom`] conversions that overflow, for example","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":65753,"byte_end":65829,"line_start":487,"line_end":487,"column_start":1,"column_end":77}},{"value":"/ when converting from [`Uint256`] to [`Uint128`].","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":65830,"byte_end":65882,"line_start":488,"line_end":488,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":65883,"byte_end":65886,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ [`TryFrom`]: std::convert::TryFrom","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":65887,"byte_end":65925,"line_start":490,"line_end":490,"column_start":1,"column_end":39}},{"value":"/ [`Uint256`]: crate::Uint256","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":65926,"byte_end":65957,"line_start":491,"line_end":491,"column_start":1,"column_end":32}},{"value":"/ [`Uint128`]: crate::Uint128","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":65958,"byte_end":65989,"line_start":492,"line_end":492,"column_start":1,"column_end":32}},{"value":"error(\"Error converting {source_type} to {target_type} for {value}\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":66029,"byte_end":66100,"line_start":494,"line_end":494,"column_start":1,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":3414},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":66146,"byte_end":66157,"line_start":496,"line_end":496,"column_start":9,"column_end":20},"name":"source_type","qualname":"::errors::std_error::ConversionOverflowError::source_type","value":"&'static str","parent":{"krate":0,"index":3413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3415},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":66181,"byte_end":66192,"line_start":497,"line_end":497,"column_start":9,"column_end":20},"name":"target_type","qualname":"::errors::std_error::ConversionOverflowError::target_type","value":"&'static str","parent":{"krate":0,"index":3413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3416},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":66216,"byte_end":66221,"line_start":498,"line_end":498,"column_start":9,"column_end":14},"name":"value","qualname":"::errors::std_error::ConversionOverflowError::value","value":"std::string::String","parent":{"krate":0,"index":3413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":66276,"byte_end":66279,"line_start":502,"line_end":502,"column_start":12,"column_end":15},"name":"new","qualname":"<ConversionOverflowError>::new","value":"pub fn new<impl Into<String>: Into<String>>(&'static str, &'static str,\n                                            impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3436},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":66612,"byte_end":66629,"line_start":517,"line_end":517,"column_start":12,"column_end":29},"name":"DivideByZeroError","qualname":"::errors::std_error::DivideByZeroError","value":"DivideByZeroError { operand }","parent":null,"children":[{"krate":0,"index":3437}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Cannot devide {operand} by zero\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":66557,"byte_end":66600,"line_start":516,"line_end":516,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3437},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":66640,"byte_end":66647,"line_start":518,"line_end":518,"column_start":9,"column_end":16},"name":"operand","qualname":"::errors::std_error::DivideByZeroError::operand","value":"std::string::String","parent":{"krate":0,"index":3436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":66696,"byte_end":66699,"line_start":522,"line_end":522,"column_start":12,"column_end":15},"name":"new","qualname":"<DivideByZeroError>::new","value":"pub fn new<impl ToString: ToString>(impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3674},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/system_error.rs","byte_start":75439,"byte_end":75453,"line_start":19,"line_end":19,"column_start":5,"column_end":19},"name":"InvalidRequest","qualname":"::errors::system_error::SystemError::InvalidRequest","value":"SystemError::InvalidRequest { error, request }","parent":{"krate":0,"index":3673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3677},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/system_error.rs","byte_start":75515,"byte_end":75530,"line_start":23,"line_end":23,"column_start":5,"column_end":20},"name":"InvalidResponse","qualname":"::errors::system_error::SystemError::InvalidResponse","value":"SystemError::InvalidResponse { error, response }","parent":{"krate":0,"index":3673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3680},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/system_error.rs","byte_start":75593,"byte_end":75607,"line_start":27,"line_end":27,"column_start":5,"column_end":19},"name":"NoSuchContract","qualname":"::errors::system_error::SystemError::NoSuchContract","value":"SystemError::NoSuchContract { addr }","parent":{"krate":0,"index":3673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3682},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/system_error.rs","byte_start":75695,"byte_end":75702,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::errors::system_error::SystemError::Unknown","value":"SystemError::Unknown {  }","parent":{"krate":0,"index":3673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3683},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/system_error.rs","byte_start":75711,"byte_end":75729,"line_start":32,"line_end":32,"column_start":5,"column_end":23},"name":"UnsupportedRequest","qualname":"::errors::system_error::SystemError::UnsupportedRequest","value":"SystemError::UnsupportedRequest { kind }","parent":{"krate":0,"index":3673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3673},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/system_error.rs","byte_start":75421,"byte_end":75432,"line_start":18,"line_end":18,"column_start":10,"column_end":21},"name":"SystemError","qualname":"::errors::system_error::SystemError","value":"pub enum SystemError {\n    InvalidRequest {\n        error: String,\n        request: Binary,\n    },\n    InvalidResponse {\n        error: String,\n        response: Binary,\n    },\n    NoSuchContract {\n        addr: String,\n    },\n    Unknown {\n    },\n    UnsupportedRequest {\n        kind: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":3674},{"krate":0,"index":3677},{"krate":0,"index":3680},{"krate":0,"index":3682},{"krate":0,"index":3683}],"decl_id":null,"docs":" SystemError is used for errors inside the VM and is API friendly (i.e. serializable).","sig":null,"attributes":[{"value":"/ SystemError is used for errors inside the VM and is API friendly (i.e. serializable).","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/system_error.rs","byte_start":74694,"byte_end":74783,"line_start":6,"line_end":6,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/system_error.rs","byte_start":74784,"byte_end":74787,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is used on return values for Querier as a nested result: Result<StdResult<T>, SystemError>","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/system_error.rs","byte_start":74788,"byte_end":74887,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ The first wrap (SystemError) will trigger if the contract address doesn't exist,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/system_error.rs","byte_start":74888,"byte_end":74972,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"/ the QueryRequest is malformated, etc. The second wrap will be an error message from","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/system_error.rs","byte_start":74973,"byte_end":75060,"line_start":10,"line_end":10,"column_start":1,"column_end":88}},{"value":"/ the contract itself.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/system_error.rs","byte_start":75061,"byte_end":75085,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/system_error.rs","byte_start":75086,"byte_end":75089,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Such errors are only created by the VM. The error type is defined in the standard library, to ensure","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/system_error.rs","byte_start":75090,"byte_end":75194,"line_start":13,"line_end":13,"column_start":1,"column_end":105}},{"value":"/ the contract understands the error format without creating a dependency on cosmwasm-vm.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/system_error.rs","byte_start":75195,"byte_end":75286,"line_start":14,"line_end":14,"column_start":1,"column_end":92}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/system_error.rs","byte_start":75358,"byte_end":75393,"line_start":16,"line_end":16,"column_start":1,"column_end":36}},{"value":"non_exhaustive","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/system_error.rs","byte_start":75394,"byte_end":75411,"line_start":17,"line_end":17,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3698},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/verification_error.rs","byte_start":76982,"byte_end":76990,"line_start":12,"line_end":12,"column_start":5,"column_end":13},"name":"BatchErr","qualname":"::errors::verification_error::VerificationError::BatchErr","value":"VerificationError::BatchErr","parent":{"krate":0,"index":3685},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Batch error\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/verification_error.rs","byte_start":76954,"byte_end":76977,"line_start":11,"line_end":11,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3700},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/verification_error.rs","byte_start":77026,"byte_end":77036,"line_start":14,"line_end":14,"column_start":5,"column_end":15},"name":"GenericErr","qualname":"::errors::verification_error::VerificationError::GenericErr","value":"VerificationError::GenericErr","parent":{"krate":0,"index":3685},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Generic error\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/verification_error.rs","byte_start":76996,"byte_end":77021,"line_start":13,"line_end":13,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3702},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/verification_error.rs","byte_start":77078,"byte_end":77095,"line_start":16,"line_end":16,"column_start":5,"column_end":22},"name":"InvalidHashFormat","qualname":"::errors::verification_error::VerificationError::InvalidHashFormat","value":"VerificationError::InvalidHashFormat","parent":{"krate":0,"index":3685},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid hash format\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/verification_error.rs","byte_start":77042,"byte_end":77073,"line_start":15,"line_end":15,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3704},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/verification_error.rs","byte_start":77142,"byte_end":77164,"line_start":18,"line_end":18,"column_start":5,"column_end":27},"name":"InvalidSignatureFormat","qualname":"::errors::verification_error::VerificationError::InvalidSignatureFormat","value":"VerificationError::InvalidSignatureFormat","parent":{"krate":0,"index":3685},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid signature format\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/verification_error.rs","byte_start":77101,"byte_end":77137,"line_start":17,"line_end":17,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3706},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/verification_error.rs","byte_start":77212,"byte_end":77231,"line_start":20,"line_end":20,"column_start":5,"column_end":24},"name":"InvalidPubkeyFormat","qualname":"::errors::verification_error::VerificationError::InvalidPubkeyFormat","value":"VerificationError::InvalidPubkeyFormat","parent":{"krate":0,"index":3685},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid public key format\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/verification_error.rs","byte_start":77170,"byte_end":77207,"line_start":19,"line_end":19,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3708},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/verification_error.rs","byte_start":77308,"byte_end":77328,"line_start":22,"line_end":22,"column_start":5,"column_end":25},"name":"InvalidRecoveryParam","qualname":"::errors::verification_error::VerificationError::InvalidRecoveryParam","value":"VerificationError::InvalidRecoveryParam","parent":{"krate":0,"index":3685},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid recovery parameter. Supported values: 0 and 1.\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/verification_error.rs","byte_start":77237,"byte_end":77303,"line_start":21,"line_end":21,"column_start":5,"column_end":71}}]},{"kind":"StructVariant","id":{"krate":0,"index":3710},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/verification_error.rs","byte_start":77378,"byte_end":77388,"line_start":24,"line_end":24,"column_start":5,"column_end":15},"name":"UnknownErr","qualname":"::errors::verification_error::VerificationError::UnknownErr","value":"VerificationError::UnknownErr { error_code }","parent":{"krate":0,"index":3685},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Unknown error: {error_code}\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/verification_error.rs","byte_start":77334,"byte_end":77373,"line_start":23,"line_end":23,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":3685},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/verification_error.rs","byte_start":76930,"byte_end":76947,"line_start":10,"line_end":10,"column_start":10,"column_end":27},"name":"VerificationError","qualname":"::errors::verification_error::VerificationError","value":"pub enum VerificationError {\n    BatchErr,\n    GenericErr,\n    InvalidHashFormat,\n    InvalidSignatureFormat,\n    InvalidPubkeyFormat,\n    InvalidRecoveryParam,\n    UnknownErr {\n        error_code: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":3698},{"krate":0,"index":3700},{"krate":0,"index":3702},{"krate":0,"index":3704},{"krate":0,"index":3706},{"krate":0,"index":3708},{"krate":0,"index":3710}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/verification_error.rs","byte_start":77531,"byte_end":77542,"line_start":32,"line_end":32,"column_start":12,"column_end":23},"name":"unknown_err","qualname":"<VerificationError>::unknown_err","value":"pub fn unknown_err(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":398},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/iterator.rs","byte_start":110126,"byte_end":110132,"line_start":8,"line_end":8,"column_start":10,"column_end":16},"name":"Record","qualname":"::iterator::Record","value":"(Vec<u8>, V)","parent":null,"children":[],"decl_id":null,"docs":" A record of a key-value storage that is created through an iterator API.\n The first element (key) is always raw binary data. The second element\n (value) is binary by default but can be changed to a custom type. This\n allows contracts to reuse the type when deserializing database records.\n","sig":null,"attributes":[{"value":"/ A record of a key-value storage that is created through an iterator API.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/iterator.rs","byte_start":109815,"byte_end":109891,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ The first element (key) is always raw binary data. The second element","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/iterator.rs","byte_start":109892,"byte_end":109965,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ (value) is binary by default but can be changed to a custom type. This","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/iterator.rs","byte_start":109966,"byte_end":110040,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ allows contracts to reuse the type when deserializing database records.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/iterator.rs","byte_start":110041,"byte_end":110116,"line_start":7,"line_end":7,"column_start":1,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":400},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/iterator.rs","byte_start":110239,"byte_end":110243,"line_start":11,"line_end":11,"column_start":10,"column_end":14},"name":"Pair","qualname":"::iterator::Pair","value":"Record<V>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"Renamed to Record, please use this instead\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/iterator.rs","byte_start":110163,"byte_end":110229,"line_start":10,"line_end":10,"column_start":1,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3713},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/iterator.rs","byte_start":110408,"byte_end":110417,"line_start":16,"line_end":16,"column_start":5,"column_end":14},"name":"Ascending","qualname":"::iterator::Order::Ascending","value":"Order::Ascending","parent":{"krate":0,"index":3712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3716},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/iterator.rs","byte_start":110427,"byte_end":110437,"line_start":17,"line_end":17,"column_start":5,"column_end":15},"name":"Descending","qualname":"::iterator::Order::Descending","value":"Order::Descending","parent":{"krate":0,"index":3712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3712},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/iterator.rs","byte_start":110396,"byte_end":110401,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Order","qualname":"::iterator::Order","value":"pub enum Order { Ascending = , Descending = , }","parent":null,"children":[{"krate":0,"index":3713},{"krate":0,"index":3716}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3722},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":113614,"byte_end":113621,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"name":"Decimal","qualname":"::math::decimal::Decimal","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0","sig":null,"attributes":[{"value":"/ A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":113279,"byte_end":113384,"line_start":18,"line_end":18,"column_start":1,"column_end":106}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":113385,"byte_end":113388,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":113389,"byte_end":113519,"line_start":20,"line_end":20,"column_start":1,"column_end":131}}]},{"kind":"Struct","id":{"krate":0,"index":3755},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":113743,"byte_end":113763,"line_start":26,"line_end":26,"column_start":12,"column_end":32},"name":"DecimalRangeExceeded","qualname":"::math::decimal::DecimalRangeExceeded","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Decimal range exceeded\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":113697,"byte_end":113731,"line_start":25,"line_end":25,"column_start":1,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":499},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":114120,"byte_end":114123,"line_start":34,"line_end":34,"column_start":15,"column_end":18},"name":"MAX","qualname":"::math::decimal::Decimal::MAX","value":"Self","parent":{"krate":0,"index":495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":114199,"byte_end":114202,"line_start":37,"line_end":37,"column_start":18,"column_end":21},"name":"one","qualname":"<Decimal>::one","value":"pub const fn one() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 1.0 Decimal\n","sig":null,"attributes":[{"value":"/ Create a 1.0 Decimal","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":114157,"byte_end":114181,"line_start":36,"line_end":36,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":114310,"byte_end":114314,"line_start":42,"line_end":42,"column_start":18,"column_end":22},"name":"zero","qualname":"<Decimal>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 0.0 Decimal\n","sig":null,"attributes":[{"value":"/ Create a 0.0 Decimal","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":114268,"byte_end":114292,"line_start":41,"line_end":41,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":114410,"byte_end":114417,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"percent","qualname":"<Decimal>::percent","value":"pub fn percent(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert x% into Decimal\n","sig":null,"attributes":[{"value":"/ Convert x% into Decimal","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":114371,"byte_end":114398,"line_start":46,"line_end":46,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":114564,"byte_end":114572,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"permille","qualname":"<Decimal>::permille","value":"pub fn permille(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert permille (x/1000) into Decimal\n","sig":null,"attributes":[{"value":"/ Convert permille (x/1000) into Decimal","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":114510,"byte_end":114552,"line_start":51,"line_end":51,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":115513,"byte_end":115525,"line_start":77,"line_end":77,"column_start":12,"column_end":24},"name":"from_atomics","qualname":"<Decimal>::from_atomics","value":"pub fn from_atomics<impl Into<Uint128>: Into<Uint128>>(impl Into<Uint128>,\n                                                       u32)\n-> Result<Self, DecimalRangeExceeded>","parent":null,"children":[],"decl_id":null,"docs":" Creates a decimal from a number of atomic units and the number\n of decimal places. The inputs will be converted internally to form\n a decimal with 18 decimal places. So the input 123 and 2 will create\n the decimal 1.23.","sig":null,"attributes":[{"value":"/ Creates a decimal from a number of atomic units and the number","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":114664,"byte_end":114730,"line_start":56,"line_end":56,"column_start":5,"column_end":71}},{"value":"/ of decimal places. The inputs will be converted internally to form","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":114735,"byte_end":114805,"line_start":57,"line_end":57,"column_start":5,"column_end":75}},{"value":"/ a decimal with 18 decimal places. So the input 123 and 2 will create","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":114810,"byte_end":114882,"line_start":58,"line_end":58,"column_start":5,"column_end":77}},{"value":"/ the decimal 1.23.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":114887,"byte_end":114908,"line_start":59,"line_end":59,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":114913,"byte_end":114916,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Using 18 decimal places is slightly more efficient than other values","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":114921,"byte_end":114993,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ as no internal conversion is necessary.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":114998,"byte_end":115041,"line_start":62,"line_end":62,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":115046,"byte_end":115049,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":115054,"byte_end":115069,"line_start":64,"line_end":64,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":115074,"byte_end":115077,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":115082,"byte_end":115089,"line_start":66,"line_end":66,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Decimal, Uint128};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":115094,"byte_end":115137,"line_start":67,"line_end":67,"column_start":5,"column_end":48}},{"value":"/ let a = Decimal::from_atomics(Uint128::new(1234), 3).unwrap();","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":115142,"byte_end":115208,"line_start":68,"line_end":68,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(a.to_string(), \"1.234\");","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":115213,"byte_end":115252,"line_start":69,"line_end":69,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":115257,"byte_end":115260,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ let a = Decimal::from_atomics(1234u128, 0).unwrap();","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":115265,"byte_end":115321,"line_start":71,"line_end":71,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(a.to_string(), \"1234\");","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":115326,"byte_end":115364,"line_start":72,"line_end":72,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":115369,"byte_end":115372,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ let a = Decimal::from_atomics(1u64, 18).unwrap();","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":115377,"byte_end":115430,"line_start":74,"line_end":74,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(a.to_string(), \"0.000000000000000001\");","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":115435,"byte_end":115489,"line_start":75,"line_end":75,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":115494,"byte_end":115501,"line_start":76,"line_end":76,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":117037,"byte_end":117047,"line_start":109,"line_end":109,"column_start":12,"column_end":22},"name":"from_ratio","qualname":"<Decimal>::from_ratio","value":"pub fn from_ratio<impl Into<Uint128>: Into<Uint128>,\n                  impl Into<Uint128>: Into<Uint128>>(impl Into<Uint128>,\n                                                     impl Into<Uint128>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the ratio (numerator / denominator) as a Decimal\n","sig":null,"attributes":[{"value":"/ Returns the ratio (numerator / denominator) as a Decimal","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":116965,"byte_end":117025,"line_start":108,"line_end":108,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":117508,"byte_end":117515,"line_start":122,"line_end":122,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Decimal>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":118301,"byte_end":118308,"line_start":144,"line_end":144,"column_start":12,"column_end":19},"name":"atomics","qualname":"<Decimal>::atomics","value":"pub fn atomics(&Self) -> Uint128","parent":null,"children":[],"decl_id":null,"docs":" A decimal is an integer of atomic units plus a number that specifies the\n position of the decimal dot. So any decimal can be expressed as two numbers.","sig":null,"attributes":[{"value":"/ A decimal is an integer of atomic units plus a number that specifies the","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":117569,"byte_end":117645,"line_start":126,"line_end":126,"column_start":5,"column_end":81}},{"value":"/ position of the decimal dot. So any decimal can be expressed as two numbers.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":117650,"byte_end":117730,"line_start":127,"line_end":127,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":117735,"byte_end":117738,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":117743,"byte_end":117758,"line_start":129,"line_end":129,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":117763,"byte_end":117766,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":117771,"byte_end":117778,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Decimal, Uint128};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":117783,"byte_end":117826,"line_start":132,"line_end":132,"column_start":5,"column_end":48}},{"value":"/ # use std::str::FromStr;","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":117831,"byte_end":117859,"line_start":133,"line_end":133,"column_start":5,"column_end":33}},{"value":"/ // Value with whole and fractional part","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":117864,"byte_end":117907,"line_start":134,"line_end":134,"column_start":5,"column_end":48}},{"value":"/ let a = Decimal::from_str(\"1.234\").unwrap();","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":117912,"byte_end":117960,"line_start":135,"line_end":135,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(a.decimal_places(), 18);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":117965,"byte_end":118004,"line_start":136,"line_end":136,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(a.atomics(), Uint128::new(1234000000000000000));","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":118009,"byte_end":118072,"line_start":137,"line_end":137,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":118077,"byte_end":118080,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ // Smallest possible value","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":118085,"byte_end":118115,"line_start":139,"line_end":139,"column_start":5,"column_end":35}},{"value":"/ let b = Decimal::from_str(\"0.000000000000000001\").unwrap();","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":118120,"byte_end":118183,"line_start":140,"line_end":140,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(b.decimal_places(), 18);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":118188,"byte_end":118227,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(b.atomics(), Uint128::new(1));","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":118232,"byte_end":118277,"line_start":142,"line_end":142,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":118282,"byte_end":118289,"line_start":143,"line_end":143,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":118545,"byte_end":118559,"line_start":152,"line_end":152,"column_start":12,"column_end":26},"name":"decimal_places","qualname":"<Decimal>::decimal_places","value":"pub fn decimal_places(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The number of decimal places. This is a constant value for now\n but this could potentially change as the type evolves.","sig":null,"attributes":[{"value":"/ The number of decimal places. This is a constant value for now","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":118355,"byte_end":118421,"line_start":148,"line_end":148,"column_start":5,"column_end":71}},{"value":"/ but this could potentially change as the type evolves.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":118426,"byte_end":118484,"line_start":149,"line_end":149,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":118489,"byte_end":118492,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ See also [`Decimal::atomics()`].","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":118497,"byte_end":118533,"line_start":151,"line_end":151,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":118729,"byte_end":118740,"line_start":157,"line_end":157,"column_start":12,"column_end":23},"name":"checked_mul","qualname":"<Decimal>::checked_mul","value":"pub fn checked_mul(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies one `Decimal` by another, returning an `OverflowError` if an overflow occurred.\n","sig":null,"attributes":[{"value":"/ Multiplies one `Decimal` by another, returning an `OverflowError` if an overflow occurred.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":118623,"byte_end":118717,"line_start":156,"line_end":156,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":119382,"byte_end":119393,"line_start":171,"line_end":171,"column_start":12,"column_end":23},"name":"checked_pow","qualname":"<Decimal>::checked_pow","value":"pub fn checked_pow(Self, u32) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":" Raises a value to the power of `exp`, returning an `OverflowError` if an overflow occurred.\n","sig":null,"attributes":[{"value":"/ Raises a value to the power of `exp`, returning an `OverflowError` if an overflow occurred.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":119275,"byte_end":119370,"line_start":170,"line_end":170,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":120459,"byte_end":120463,"line_start":206,"line_end":206,"column_start":12,"column_end":16},"name":"sqrt","qualname":"<Decimal>::sqrt","value":"pub fn sqrt(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the approximate square root as a Decimal.","sig":null,"attributes":[{"value":"/ Returns the approximate square root as a Decimal.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":120343,"byte_end":120396,"line_start":203,"line_end":203,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":120401,"byte_end":120404,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ This should not overflow or panic.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":120409,"byte_end":120447,"line_start":205,"line_end":205,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":3781},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":163813,"byte_end":163823,"line_start":24,"line_end":24,"column_start":12,"column_end":22},"name":"Decimal256","qualname":"::math::decimal256::Decimal256","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed-point decimal value with 18 fractional digits, i.e. Decimal256(1_000_000_000_000_000_000) == 1.0","sig":null,"attributes":[{"value":"/ A fixed-point decimal value with 18 fractional digits, i.e. Decimal256(1_000_000_000_000_000_000) == 1.0","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":163428,"byte_end":163536,"line_start":18,"line_end":18,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":163537,"byte_end":163540,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The greatest possible value that can be represented is","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":163541,"byte_end":163599,"line_start":20,"line_end":20,"column_start":1,"column_end":59}},{"value":"/ 115792089237316195423570985008687907853269984665640564039457.584007913129639935","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":163600,"byte_end":163683,"line_start":21,"line_end":21,"column_start":1,"column_end":84}},{"value":"/ (which is (2^256 - 1) / 10^18)","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":163684,"byte_end":163718,"line_start":22,"line_end":22,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3814},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":163948,"byte_end":163971,"line_start":28,"line_end":28,"column_start":12,"column_end":35},"name":"Decimal256RangeExceeded","qualname":"::math::decimal256::Decimal256RangeExceeded","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Decimal256 range exceeded\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":163899,"byte_end":163936,"line_start":27,"line_end":27,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":671},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":164515,"byte_end":164518,"line_start":43,"line_end":43,"column_start":15,"column_end":18},"name":"MAX","qualname":"::math::decimal256::Decimal256::MAX","value":"Self","parent":{"krate":0,"index":667},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":164597,"byte_end":164600,"line_start":46,"line_end":46,"column_start":18,"column_end":21},"name":"one","qualname":"<Decimal256>::one","value":"pub const fn one() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 1.0 Decimal256\n","sig":null,"attributes":[{"value":"/ Create a 1.0 Decimal256","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":164552,"byte_end":164579,"line_start":45,"line_end":45,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":164708,"byte_end":164712,"line_start":51,"line_end":51,"column_start":18,"column_end":22},"name":"zero","qualname":"<Decimal256>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 0.0 Decimal256\n","sig":null,"attributes":[{"value":"/ Create a 0.0 Decimal256","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":164663,"byte_end":164690,"line_start":50,"line_end":50,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":164808,"byte_end":164815,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"percent","qualname":"<Decimal256>::percent","value":"pub fn percent(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert x% into Decimal256\n","sig":null,"attributes":[{"value":"/ Convert x% into Decimal256","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":164766,"byte_end":164796,"line_start":55,"line_end":55,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":164977,"byte_end":164985,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"permille","qualname":"<Decimal256>::permille","value":"pub fn permille(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert permille (x/1000) into Decimal256\n","sig":null,"attributes":[{"value":"/ Convert permille (x/1000) into Decimal256","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":164920,"byte_end":164965,"line_start":60,"line_end":60,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":166056,"byte_end":166068,"line_start":89,"line_end":89,"column_start":12,"column_end":24},"name":"from_atomics","qualname":"<Decimal256>::from_atomics","value":"pub fn from_atomics<impl Into<Uint256>: Into<Uint256>>(impl Into<Uint256>,\n                                                       u32)\n-> Result<Self, Decimal256RangeExceeded>","parent":null,"children":[],"decl_id":null,"docs":" Creates a decimal from a number of atomic units and the number\n of decimal places. The inputs will be converted internally to form\n a decimal with 18 decimal places. So the input 123 and 2 will create\n the decimal 1.23.","sig":null,"attributes":[{"value":"/ Creates a decimal from a number of atomic units and the number","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":165089,"byte_end":165155,"line_start":65,"line_end":65,"column_start":5,"column_end":71}},{"value":"/ of decimal places. The inputs will be converted internally to form","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":165160,"byte_end":165230,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ a decimal with 18 decimal places. So the input 123 and 2 will create","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":165235,"byte_end":165307,"line_start":67,"line_end":67,"column_start":5,"column_end":77}},{"value":"/ the decimal 1.23.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":165312,"byte_end":165333,"line_start":68,"line_end":68,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":165338,"byte_end":165341,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Using 18 decimal places is slightly more efficient than other values","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":165346,"byte_end":165418,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ as no internal conversion is necessary.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":165423,"byte_end":165466,"line_start":71,"line_end":71,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":165471,"byte_end":165474,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":165479,"byte_end":165494,"line_start":73,"line_end":73,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":165499,"byte_end":165502,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":165507,"byte_end":165514,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Decimal256, Uint256};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":165519,"byte_end":165565,"line_start":76,"line_end":76,"column_start":5,"column_end":51}},{"value":"/ let a = Decimal256::from_atomics(1234u64, 3).unwrap();","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":165570,"byte_end":165628,"line_start":77,"line_end":77,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(a.to_string(), \"1.234\");","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":165633,"byte_end":165672,"line_start":78,"line_end":78,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":165677,"byte_end":165680,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ let a = Decimal256::from_atomics(1234u128, 0).unwrap();","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":165685,"byte_end":165744,"line_start":80,"line_end":80,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(a.to_string(), \"1234\");","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":165749,"byte_end":165787,"line_start":81,"line_end":81,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":165792,"byte_end":165795,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let a = Decimal256::from_atomics(1u64, 18).unwrap();","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":165800,"byte_end":165856,"line_start":83,"line_end":83,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(a.to_string(), \"0.000000000000000001\");","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":165861,"byte_end":165915,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":165920,"byte_end":165923,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ let a = Decimal256::from_atomics(Uint256::MAX, 18).unwrap();","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":165928,"byte_end":165992,"line_start":86,"line_end":86,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(a, Decimal256::MAX);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":165997,"byte_end":166032,"line_start":87,"line_end":87,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":166037,"byte_end":166044,"line_start":88,"line_end":88,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":167602,"byte_end":167612,"line_start":121,"line_end":121,"column_start":12,"column_end":22},"name":"from_ratio","qualname":"<Decimal256>::from_ratio","value":"pub fn from_ratio<impl Into<Uint256>: Into<Uint256>,\n                  impl Into<Uint256>: Into<Uint256>>(impl Into<Uint256>,\n                                                     impl Into<Uint256>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the ratio (numerator / denominator) as a Decimal256\n","sig":null,"attributes":[{"value":"/ Returns the ratio (numerator / denominator) as a Decimal256","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":167527,"byte_end":167590,"line_start":120,"line_end":120,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":168070,"byte_end":168077,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Decimal256>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":168882,"byte_end":168889,"line_start":156,"line_end":156,"column_start":12,"column_end":19},"name":"atomics","qualname":"<Decimal256>::atomics","value":"pub fn atomics(&Self) -> Uint256","parent":null,"children":[],"decl_id":null,"docs":" A decimal is an integer of atomic units plus a number that specifies the\n position of the decimal dot. So any decimal can be expressed as two numbers.","sig":null,"attributes":[{"value":"/ A decimal is an integer of atomic units plus a number that specifies the","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":168131,"byte_end":168207,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/ position of the decimal dot. So any decimal can be expressed as two numbers.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":168212,"byte_end":168292,"line_start":139,"line_end":139,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":168297,"byte_end":168300,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":168305,"byte_end":168320,"line_start":141,"line_end":141,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":168325,"byte_end":168328,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":168333,"byte_end":168340,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Decimal256, Uint256};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":168345,"byte_end":168391,"line_start":144,"line_end":144,"column_start":5,"column_end":51}},{"value":"/ # use std::str::FromStr;","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":168396,"byte_end":168424,"line_start":145,"line_end":145,"column_start":5,"column_end":33}},{"value":"/ // Value with whole and fractional part","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":168429,"byte_end":168472,"line_start":146,"line_end":146,"column_start":5,"column_end":48}},{"value":"/ let a = Decimal256::from_str(\"1.234\").unwrap();","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":168477,"byte_end":168528,"line_start":147,"line_end":147,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(a.decimal_places(), 18);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":168533,"byte_end":168572,"line_start":148,"line_end":148,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(a.atomics(), Uint256::from(1234000000000000000u128));","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":168577,"byte_end":168645,"line_start":149,"line_end":149,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":168650,"byte_end":168653,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ // Smallest possible value","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":168658,"byte_end":168688,"line_start":151,"line_end":151,"column_start":5,"column_end":35}},{"value":"/ let b = Decimal256::from_str(\"0.000000000000000001\").unwrap();","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":168693,"byte_end":168759,"line_start":152,"line_end":152,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(b.decimal_places(), 18);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":168764,"byte_end":168803,"line_start":153,"line_end":153,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(b.atomics(), Uint256::from(1u128));","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":168808,"byte_end":168858,"line_start":154,"line_end":154,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":168863,"byte_end":168870,"line_start":155,"line_end":155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":169129,"byte_end":169143,"line_start":164,"line_end":164,"column_start":12,"column_end":26},"name":"decimal_places","qualname":"<Decimal256>::decimal_places","value":"pub fn decimal_places(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The number of decimal places. This is a constant value for now\n but this could potentially change as the type evolves.","sig":null,"attributes":[{"value":"/ The number of decimal places. This is a constant value for now","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":168936,"byte_end":169002,"line_start":160,"line_end":160,"column_start":5,"column_end":71}},{"value":"/ but this could potentially change as the type evolves.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":169007,"byte_end":169065,"line_start":161,"line_end":161,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":169070,"byte_end":169073,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ See also [`Decimal256::atomics()`].","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":169078,"byte_end":169117,"line_start":163,"line_end":163,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":169316,"byte_end":169327,"line_start":169,"line_end":169,"column_start":12,"column_end":23},"name":"checked_mul","qualname":"<Decimal256>::checked_mul","value":"pub fn checked_mul(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies one `Decimal256` by another, returning an `OverflowError` if an overflow occurred.\n","sig":null,"attributes":[{"value":"/ Multiplies one `Decimal256` by another, returning an `OverflowError` if an overflow occurred.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":169207,"byte_end":169304,"line_start":168,"line_end":168,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":169969,"byte_end":169980,"line_start":183,"line_end":183,"column_start":12,"column_end":23},"name":"checked_pow","qualname":"<Decimal256>::checked_pow","value":"pub fn checked_pow(Self, u32) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":" Raises a value to the power of `exp`, returning an `OverflowError` if an overflow occurred.\n","sig":null,"attributes":[{"value":"/ Raises a value to the power of `exp`, returning an `OverflowError` if an overflow occurred.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":169862,"byte_end":169957,"line_start":182,"line_end":182,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":171061,"byte_end":171065,"line_start":218,"line_end":218,"column_start":12,"column_end":16},"name":"sqrt","qualname":"<Decimal256>::sqrt","value":"pub fn sqrt(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the approximate square root as a Decimal256.","sig":null,"attributes":[{"value":"/ Returns the approximate square root as a Decimal256.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":170942,"byte_end":170998,"line_start":215,"line_end":215,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":171003,"byte_end":171006,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ This should not overflow or panic.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":171011,"byte_end":171049,"line_start":217,"line_end":217,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":752},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/fraction.rs","byte_start":217270,"byte_end":217278,"line_start":4,"line_end":4,"column_start":11,"column_end":19},"name":"Fraction","qualname":"::math::fraction::Fraction","value":"Fraction<T>: Sized","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756}],"decl_id":null,"docs":" A fraction `p`/`q` with integers `p` and `q`.","sig":null,"attributes":[{"value":"/ A fraction `p`/`q` with integers `p` and `q`.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/fraction.rs","byte_start":217139,"byte_end":217188,"line_start":1,"line_end":1,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/fraction.rs","byte_start":217189,"byte_end":217192,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `p` is called the numerator and `q` is called the denominator.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/fraction.rs","byte_start":217193,"byte_end":217259,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/fraction.rs","byte_start":217332,"byte_end":217341,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"numerator","qualname":"::math::fraction::Fraction::numerator","value":"pub fn numerator(&Self) -> T","parent":{"krate":0,"index":752},"children":[],"decl_id":null,"docs":" Returns the numerator `p`\n","sig":null,"attributes":[{"value":"/ Returns the numerator `p`","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/fraction.rs","byte_start":217295,"byte_end":217324,"line_start":5,"line_end":5,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/fraction.rs","byte_start":217398,"byte_end":217409,"line_start":8,"line_end":8,"column_start":8,"column_end":19},"name":"denominator","qualname":"::math::fraction::Fraction::denominator","value":"pub fn denominator(&Self) -> T","parent":{"krate":0,"index":752},"children":[],"decl_id":null,"docs":" Returns the denominator `q`\n","sig":null,"attributes":[{"value":"/ Returns the denominator `q`","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/fraction.rs","byte_start":217359,"byte_end":217390,"line_start":7,"line_end":7,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/fraction.rs","byte_start":217550,"byte_end":217553,"line_start":13,"line_end":13,"column_start":8,"column_end":11},"name":"inv","qualname":"::math::fraction::Fraction::inv","value":"pub fn inv(&Self) -> Option<Self>","parent":{"krate":0,"index":752},"children":[],"decl_id":null,"docs":" Returns the multiplicative inverse `q/p` for fraction `p/q`.","sig":null,"attributes":[{"value":"/ Returns the multiplicative inverse `q/p` for fraction `p/q`.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/fraction.rs","byte_start":217428,"byte_end":217492,"line_start":10,"line_end":10,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/fraction.rs","byte_start":217497,"byte_end":217500,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ If `p` is zero, None is returned.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/fraction.rs","byte_start":217505,"byte_end":217542,"line_start":12,"line_end":12,"column_start":5,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":778},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/isqrt.rs","byte_start":217772,"byte_end":217777,"line_start":7,"line_end":7,"column_start":11,"column_end":16},"name":"Isqrt","qualname":"::math::isqrt::Isqrt","value":"Isqrt","parent":null,"children":[{"krate":0,"index":779}],"decl_id":null,"docs":" A trait for calculating the\n [integer square root](https://en.wikipedia.org/wiki/Integer_square_root).\n","sig":null,"attributes":[{"value":"/ A trait for calculating the","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/isqrt.rs","byte_start":217652,"byte_end":217683,"line_start":5,"line_end":5,"column_start":1,"column_end":32}},{"value":"/ [integer square root](https://en.wikipedia.org/wiki/Integer_square_root).","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/isqrt.rs","byte_start":217684,"byte_end":217761,"line_start":6,"line_end":6,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/isqrt.rs","byte_start":217873,"byte_end":217878,"line_start":9,"line_end":9,"column_start":8,"column_end":13},"name":"isqrt","qualname":"::math::isqrt::Isqrt::isqrt","value":"pub fn isqrt(Self) -> Self","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" The [integer square root](https://en.wikipedia.org/wiki/Integer_square_root).\n","sig":null,"attributes":[{"value":"/ The [integer square root](https://en.wikipedia.org/wiki/Integer_square_root).","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/isqrt.rs","byte_start":217784,"byte_end":217865,"line_start":8,"line_end":8,"column_start":5,"column_end":86}}]},{"kind":"Trait","id":{"krate":0,"index":783},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/isqrt.rs","byte_start":218613,"byte_end":218621,"line_start":42,"line_end":42,"column_start":11,"column_end":19},"name":"Unsigned","qualname":"::math::isqrt::Unsigned","value":"Unsigned","parent":null,"children":[],"decl_id":null,"docs":" Marker trait for types that represent unsigned integers.\n","sig":null,"attributes":[{"value":"/ Marker trait for types that represent unsigned integers.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/isqrt.rs","byte_start":218542,"byte_end":218602,"line_start":41,"line_end":41,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3840},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":221558,"byte_end":221565,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"Uint128","qualname":"::math::uint128::Uint128","value":"","parent":null,"children":[],"decl_id":null,"docs":" A thin wrapper around u128 that is using strings for JSON encoding/decoding,\n such that the full u128 range can be used for clients that convert JSON numbers to floats,\n like JavaScript and jq.","sig":null,"attributes":[{"value":"/ A thin wrapper around u128 that is using strings for JSON encoding/decoding,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":220905,"byte_end":220985,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ such that the full u128 range can be used for clients that convert JSON numbers to floats,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":220986,"byte_end":221080,"line_start":15,"line_end":15,"column_start":1,"column_end":95}},{"value":"/ like JavaScript and jq.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":221081,"byte_end":221108,"line_start":16,"line_end":16,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":221109,"byte_end":221112,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":221113,"byte_end":221127,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":221128,"byte_end":221131,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Use `from` to create instances of this and `u128` to get the value out:","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":221132,"byte_end":221207,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":221208,"byte_end":221211,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":221212,"byte_end":221219,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::Uint128;","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":221220,"byte_end":221252,"line_start":23,"line_end":23,"column_start":1,"column_end":33}},{"value":"/ let a = Uint128::from(123u128);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":221253,"byte_end":221288,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(a.u128(), 123);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":221289,"byte_end":221319,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":221320,"byte_end":221323,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let b = Uint128::from(42u64);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":221324,"byte_end":221357,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(b.u128(), 42);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":221358,"byte_end":221387,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":221388,"byte_end":221391,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let c = Uint128::from(70u32);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":221392,"byte_end":221425,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(c.u128(), 70);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":221426,"byte_end":221455,"line_start":31,"line_end":31,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":221456,"byte_end":221463,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":896},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":221632,"byte_end":221635,"line_start":37,"line_end":37,"column_start":15,"column_end":18},"name":"MAX","qualname":"::math::uint128::Uint128::MAX","value":"Self","parent":{"krate":0,"index":895},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":221808,"byte_end":221811,"line_start":42,"line_end":42,"column_start":18,"column_end":21},"name":"new","qualname":"<Uint128>::new","value":"pub const fn new(u128) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint128(value).","sig":null,"attributes":[{"value":"/ Creates a Uint128(value).","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":221666,"byte_end":221695,"line_start":39,"line_end":39,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":221700,"byte_end":221703,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ This method is less flexible than `from` but can be called in a const context.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":221708,"byte_end":221790,"line_start":41,"line_end":41,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":221911,"byte_end":221915,"line_start":47,"line_end":47,"column_start":18,"column_end":22},"name":"zero","qualname":"<Uint128>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint128(0)\n","sig":null,"attributes":[{"value":"/ Creates a Uint128(0)","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":221869,"byte_end":221893,"line_start":46,"line_end":46,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":222015,"byte_end":222019,"line_start":52,"line_end":52,"column_start":18,"column_end":22},"name":"u128","qualname":"<Uint128>::u128","value":"pub const fn u128(&Self) -> u128","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the internal data\n","sig":null,"attributes":[{"value":"/ Returns a copy of the internal data","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":221958,"byte_end":221997,"line_start":51,"line_end":51,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":222134,"byte_end":222145,"line_start":57,"line_end":57,"column_start":18,"column_end":29},"name":"to_be_bytes","qualname":"<Uint128>::to_be_bytes","value":"pub const fn to_be_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the number as big endian bytes.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the number as big endian bytes.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":222063,"byte_end":222116,"line_start":56,"line_end":56,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":222280,"byte_end":222291,"line_start":62,"line_end":62,"column_start":18,"column_end":29},"name":"to_le_bytes","qualname":"<Uint128>::to_le_bytes","value":"pub const fn to_le_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the number as little endian bytes.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the number as little endian bytes.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":222206,"byte_end":222262,"line_start":61,"line_end":61,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":222359,"byte_end":222366,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Uint128>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":222422,"byte_end":222425,"line_start":70,"line_end":70,"column_start":12,"column_end":15},"name":"pow","qualname":"<Uint128>::pow","value":"pub fn pow(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":222501,"byte_end":222512,"line_start":74,"line_end":74,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Uint128>::checked_add","value":"pub fn checked_add(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":222739,"byte_end":222750,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Uint128>::checked_sub","value":"pub fn checked_sub(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":222977,"byte_end":222988,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"checked_mul","qualname":"<Uint128>::checked_mul","value":"pub fn checked_mul(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":223215,"byte_end":223226,"line_start":95,"line_end":95,"column_start":12,"column_end":23},"name":"checked_pow","qualname":"<Uint128>::checked_pow","value":"pub fn checked_pow(Self, u32) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":223444,"byte_end":223455,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"checked_div","qualname":"<Uint128>::checked_div","value":"pub fn checked_div(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":223659,"byte_end":223677,"line_start":109,"line_end":109,"column_start":12,"column_end":30},"name":"checked_div_euclid","qualname":"<Uint128>::checked_div_euclid","value":"pub fn checked_div_euclid(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":223888,"byte_end":223899,"line_start":116,"line_end":116,"column_start":12,"column_end":23},"name":"checked_rem","qualname":"<Uint128>::checked_rem","value":"pub fn checked_rem(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":224103,"byte_end":224115,"line_start":123,"line_end":123,"column_start":12,"column_end":24},"name":"wrapping_add","qualname":"<Uint128>::wrapping_add","value":"pub fn wrapping_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":224206,"byte_end":224218,"line_start":127,"line_end":127,"column_start":12,"column_end":24},"name":"wrapping_sub","qualname":"<Uint128>::wrapping_sub","value":"pub fn wrapping_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":224309,"byte_end":224321,"line_start":131,"line_end":131,"column_start":12,"column_end":24},"name":"wrapping_mul","qualname":"<Uint128>::wrapping_mul","value":"pub fn wrapping_mul(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":224412,"byte_end":224424,"line_start":135,"line_end":135,"column_start":12,"column_end":24},"name":"wrapping_pow","qualname":"<Uint128>::wrapping_pow","value":"pub fn wrapping_pow(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":224512,"byte_end":224526,"line_start":139,"line_end":139,"column_start":12,"column_end":26},"name":"saturating_add","qualname":"<Uint128>::saturating_add","value":"pub fn saturating_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":224619,"byte_end":224633,"line_start":143,"line_end":143,"column_start":12,"column_end":26},"name":"saturating_sub","qualname":"<Uint128>::saturating_sub","value":"pub fn saturating_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":224726,"byte_end":224740,"line_start":147,"line_end":147,"column_start":12,"column_end":26},"name":"saturating_mul","qualname":"<Uint128>::saturating_mul","value":"pub fn saturating_mul(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":224833,"byte_end":224847,"line_start":151,"line_end":151,"column_start":12,"column_end":26},"name":"saturating_pow","qualname":"<Uint128>::saturating_pow","value":"pub fn saturating_pow(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":230379,"byte_end":230393,"line_start":402,"line_end":402,"column_start":12,"column_end":26},"name":"multiply_ratio","qualname":"<Uint128>::multiply_ratio","value":"pub fn multiply_ratio<A: Into<u128>, B: Into<u128>>(&Self, A, B) -> Uint128","parent":null,"children":[],"decl_id":null,"docs":" Returns `self * numerator / denominator`\n","sig":null,"attributes":[{"value":"/ Returns `self * numerator / denominator`","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":230323,"byte_end":230367,"line_start":401,"line_end":401,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":231191,"byte_end":231199,"line_start":429,"line_end":429,"column_start":12,"column_end":20},"name":"full_mul","qualname":"<Uint128>::full_mul","value":"pub fn full_mul<impl Into<u128>: Into<u128>>(Self, impl Into<u128>) -> Uint256","parent":null,"children":[],"decl_id":null,"docs":" Multiplies two u128 values without overflow, producing an\n [`Uint256`].","sig":null,"attributes":[{"value":"/ Multiplies two u128 values without overflow, producing an","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":230843,"byte_end":230904,"line_start":417,"line_end":417,"column_start":5,"column_end":66}},{"value":"/ [`Uint256`].","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":230909,"byte_end":230925,"line_start":418,"line_end":418,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":230930,"byte_end":230933,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":230938,"byte_end":230952,"line_start":420,"line_end":420,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":230957,"byte_end":230960,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":230965,"byte_end":230972,"line_start":422,"line_end":422,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::Uint128;","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":230977,"byte_end":231007,"line_start":423,"line_end":423,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":231012,"byte_end":231015,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ let a = Uint128::MAX;","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":231020,"byte_end":231045,"line_start":425,"line_end":425,"column_start":5,"column_end":30}},{"value":"/ let result = a.full_mul(2u32);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":231050,"byte_end":231084,"line_start":426,"line_end":426,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(result.to_string(), \"680564733841876926926749214863536422910\");","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":231089,"byte_end":231167,"line_start":427,"line_end":427,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":231172,"byte_end":231179,"line_start":428,"line_end":428,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4161},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":246163,"byte_end":246167,"line_start":22,"line_end":22,"column_start":20,"column_end":24},"name":"U256","qualname":"::math::uint256::uints::U256","value":"","parent":null,"children":[],"decl_id":null,"docs":" Little-endian large integer type\n","sig":null,"attributes":[{"value":"/ Little-endian large integer type","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/uint-0.9.1/src/uint.rs","byte_start":14359763,"byte_end":14359799,"line_start":567,"line_end":567,"column_start":3,"column_end":39}},{"value":"repr(C)","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/uint-0.9.1/src/uint.rs","byte_start":14359802,"byte_end":14359812,"line_start":568,"line_end":568,"column_start":3,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":4447},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":247076,"byte_end":247083,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"Uint256","qualname":"::math::uint256::Uint256","value":"","parent":null,"children":[],"decl_id":null,"docs":" An implementation of u256 that is using strings for JSON encoding/decoding,\n such that the full u256 range can be used for clients that convert JSON numbers to floats,\n like JavaScript and jq.","sig":null,"attributes":[{"value":"/ An implementation of u256 that is using strings for JSON encoding/decoding,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":246313,"byte_end":246392,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ such that the full u256 range can be used for clients that convert JSON numbers to floats,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":246393,"byte_end":246487,"line_start":31,"line_end":31,"column_start":1,"column_end":95}},{"value":"/ like JavaScript and jq.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":246488,"byte_end":246515,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":246516,"byte_end":246519,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":246520,"byte_end":246534,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":246535,"byte_end":246538,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Use `from` to create instances out of primitive uint types or `new` to provide big","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":246539,"byte_end":246625,"line_start":36,"line_end":36,"column_start":1,"column_end":87}},{"value":"/ endian bytes:","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":246626,"byte_end":246643,"line_start":37,"line_end":37,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":246644,"byte_end":246647,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":246648,"byte_end":246655,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::Uint256;","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":246656,"byte_end":246688,"line_start":40,"line_end":40,"column_start":1,"column_end":33}},{"value":"/ let a = Uint256::from(258u128);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":246689,"byte_end":246724,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/ let b = Uint256::new([","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":246725,"byte_end":246751,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":246752,"byte_end":246799,"line_start":43,"line_end":43,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":246800,"byte_end":246847,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":246848,"byte_end":246895,"line_start":45,"line_end":45,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 2u8,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":246896,"byte_end":246943,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/ ]);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":246944,"byte_end":246951,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(a, b);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":246952,"byte_end":246973,"line_start":48,"line_end":48,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":246974,"byte_end":246981,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":1143},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":247150,"byte_end":247153,"line_start":54,"line_end":54,"column_start":15,"column_end":18},"name":"MAX","qualname":"::math::uint256::Uint256::MAX","value":"Uint256","parent":{"krate":0,"index":1142},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1144},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":247424,"byte_end":247427,"line_start":60,"line_end":60,"column_start":18,"column_end":21},"name":"new","qualname":"<Uint256>::new","value":"pub const fn new([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint256(value) from a big endian representation. It's just an alias for\n [`Uint256::from_be_bytes`].","sig":null,"attributes":[{"value":"/ Creates a Uint256(value) from a big endian representation. It's just an alias for","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":247190,"byte_end":247275,"line_start":56,"line_end":56,"column_start":5,"column_end":90}},{"value":"/ [`Uint256::from_be_bytes`].","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":247280,"byte_end":247311,"line_start":57,"line_end":57,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":247316,"byte_end":247319,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This method is less flexible than `from` but can be called in a const context.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":247324,"byte_end":247406,"line_start":59,"line_end":59,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":247543,"byte_end":247547,"line_start":65,"line_end":65,"column_start":18,"column_end":22},"name":"zero","qualname":"<Uint256>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint256(0)\n","sig":null,"attributes":[{"value":"/ Creates a Uint256(0)","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":247501,"byte_end":247525,"line_start":64,"line_end":64,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1147},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":247614,"byte_end":247627,"line_start":69,"line_end":69,"column_start":18,"column_end":31},"name":"from_be_bytes","qualname":"<Uint256>::from_be_bytes","value":"pub const fn from_be_bytes([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":248317,"byte_end":248330,"line_start":87,"line_end":87,"column_start":18,"column_end":31},"name":"from_le_bytes","qualname":"<Uint256>::from_le_bytes","value":"pub const fn from_le_bytes([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":249152,"byte_end":249164,"line_start":107,"line_end":107,"column_start":18,"column_end":30},"name":"from_uint128","qualname":"<Uint256>::from_uint128","value":"pub const fn from_uint128(Uint128) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A conversion from `Uint128` that, unlike the one provided by the `From` trait,\n can be used in a `const` context.\n","sig":null,"attributes":[{"value":"/ A conversion from `Uint128` that, unlike the one provided by the `From` trait,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":249010,"byte_end":249092,"line_start":105,"line_end":105,"column_start":5,"column_end":87}},{"value":"/ can be used in a `const` context.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":249097,"byte_end":249134,"line_start":106,"line_end":106,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1154},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":249602,"byte_end":249613,"line_start":118,"line_end":118,"column_start":18,"column_end":29},"name":"to_be_bytes","qualname":"<Uint256>::to_be_bytes","value":"pub const fn to_be_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the number as big endian bytes.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the number as big endian bytes.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":249531,"byte_end":249584,"line_start":117,"line_end":117,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":250848,"byte_end":250859,"line_start":164,"line_end":164,"column_start":18,"column_end":29},"name":"to_le_bytes","qualname":"<Uint256>::to_le_bytes","value":"pub const fn to_le_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the number as little endian bytes.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the number as little endian bytes.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":250774,"byte_end":250830,"line_start":163,"line_end":163,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":252027,"byte_end":252034,"line_start":209,"line_end":209,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Uint256>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":252095,"byte_end":252098,"line_start":213,"line_end":213,"column_start":12,"column_end":15},"name":"pow","qualname":"<Uint256>::pow","value":"pub fn pow(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":252203,"byte_end":252214,"line_start":218,"line_end":218,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Uint256>::checked_add","value":"pub fn checked_add(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1162},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":252441,"byte_end":252452,"line_start":225,"line_end":225,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Uint256>::checked_sub","value":"pub fn checked_sub(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":252679,"byte_end":252690,"line_start":232,"line_end":232,"column_start":12,"column_end":23},"name":"checked_mul","qualname":"<Uint256>::checked_mul","value":"pub fn checked_mul(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":252917,"byte_end":252928,"line_start":239,"line_end":239,"column_start":12,"column_end":23},"name":"checked_pow","qualname":"<Uint256>::checked_pow","value":"pub fn checked_pow(Self, u32) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":253153,"byte_end":253164,"line_start":246,"line_end":246,"column_start":12,"column_end":23},"name":"checked_div","qualname":"<Uint256>::checked_div","value":"pub fn checked_div(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":253368,"byte_end":253379,"line_start":253,"line_end":253,"column_start":12,"column_end":23},"name":"checked_rem","qualname":"<Uint256>::checked_rem","value":"pub fn checked_rem(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":253583,"byte_end":253594,"line_start":260,"line_end":260,"column_start":12,"column_end":23},"name":"checked_shr","qualname":"<Uint256>::checked_shr","value":"pub fn checked_shr(Self, u32) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":253818,"byte_end":253829,"line_start":268,"line_end":268,"column_start":12,"column_end":23},"name":"checked_shl","qualname":"<Uint256>::checked_shl","value":"pub fn checked_shl(Self, u32) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1174},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":254053,"byte_end":254067,"line_start":276,"line_end":276,"column_start":12,"column_end":26},"name":"saturating_add","qualname":"<Uint256>::saturating_add","value":"pub fn saturating_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1175},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":254160,"byte_end":254174,"line_start":280,"line_end":280,"column_start":12,"column_end":26},"name":"saturating_sub","qualname":"<Uint256>::saturating_sub","value":"pub fn saturating_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":254267,"byte_end":254281,"line_start":284,"line_end":284,"column_start":12,"column_end":26},"name":"saturating_mul","qualname":"<Uint256>::saturating_mul","value":"pub fn saturating_mul(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":260331,"byte_end":260345,"line_start":560,"line_end":560,"column_start":12,"column_end":26},"name":"multiply_ratio","qualname":"<Uint256>::multiply_ratio","value":"pub fn multiply_ratio<A: Into<Uint256>, B: Into<Uint256>>(&Self, A, B)\n-> Uint256","parent":null,"children":[],"decl_id":null,"docs":" Returns `self * numerator / denominator`\n","sig":null,"attributes":[{"value":"/ Returns `self * numerator / denominator`","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":260275,"byte_end":260319,"line_start":559,"line_end":559,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1269},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":261234,"byte_end":261242,"line_start":590,"line_end":590,"column_start":12,"column_end":20},"name":"full_mul","qualname":"<Uint256>::full_mul","value":"pub fn full_mul<impl Into<Uint256>: Into<Uint256>>(Self, impl Into<Uint256>)\n-> Uint512","parent":null,"children":[],"decl_id":null,"docs":" Multiplies two u256 values without overflow, producing an\n [`Uint512`].","sig":null,"attributes":[{"value":"/ Multiplies two u256 values without overflow, producing an","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":260812,"byte_end":260873,"line_start":575,"line_end":575,"column_start":5,"column_end":66}},{"value":"/ [`Uint512`].","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":260878,"byte_end":260894,"line_start":576,"line_end":576,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":260899,"byte_end":260902,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":260907,"byte_end":260921,"line_start":578,"line_end":578,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":260926,"byte_end":260929,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":260934,"byte_end":260941,"line_start":580,"line_end":580,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::Uint256;","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":260946,"byte_end":260976,"line_start":581,"line_end":581,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":260981,"byte_end":260984,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ let a = Uint256::MAX;","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":260989,"byte_end":261014,"line_start":583,"line_end":583,"column_start":5,"column_end":30}},{"value":"/ let result = a.full_mul(2u32);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":261019,"byte_end":261053,"line_start":584,"line_end":584,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":261058,"byte_end":261073,"line_start":585,"line_end":585,"column_start":5,"column_end":20}},{"value":"/     result.to_string(),","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":261078,"byte_end":261105,"line_start":586,"line_end":586,"column_start":5,"column_end":32}},{"value":"/     \"231584178474632390847141970017375815706539969331281128078915168015826259279870\",","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":261110,"byte_end":261199,"line_start":587,"line_end":587,"column_start":5,"column_end":94}},{"value":"/ );","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":261204,"byte_end":261210,"line_start":588,"line_end":588,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":261215,"byte_end":261222,"line_start":589,"line_end":589,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4768},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":293989,"byte_end":293993,"line_start":21,"line_end":21,"column_start":20,"column_end":24},"name":"U512","qualname":"::math::uint512::uints::U512","value":"","parent":null,"children":[],"decl_id":null,"docs":" Little-endian large integer type\n","sig":null,"attributes":[{"value":"/ Little-endian large integer type","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/uint-0.9.1/src/uint.rs","byte_start":14359763,"byte_end":14359799,"line_start":567,"line_end":567,"column_start":3,"column_end":39}},{"value":"repr(C)","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/uint-0.9.1/src/uint.rs","byte_start":14359802,"byte_end":14359812,"line_start":568,"line_end":568,"column_start":3,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":5054},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":295094,"byte_end":295101,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"Uint512","qualname":"::math::uint512::Uint512","value":"","parent":null,"children":[],"decl_id":null,"docs":" An implementation of u512 that is using strings for JSON encoding/decoding,\n such that the full u512 range can be used for clients that convert JSON numbers to floats,\n like JavaScript and jq.","sig":null,"attributes":[{"value":"/ An implementation of u512 that is using strings for JSON encoding/decoding,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":294139,"byte_end":294218,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ such that the full u512 range can be used for clients that convert JSON numbers to floats,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":294219,"byte_end":294313,"line_start":30,"line_end":30,"column_start":1,"column_end":95}},{"value":"/ like JavaScript and jq.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":294314,"byte_end":294341,"line_start":31,"line_end":31,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":294342,"byte_end":294345,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":294346,"byte_end":294360,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":294361,"byte_end":294364,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Use `from` to create instances out of primitive uint types or `new` to provide big","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":294365,"byte_end":294451,"line_start":35,"line_end":35,"column_start":1,"column_end":87}},{"value":"/ endian bytes:","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":294452,"byte_end":294469,"line_start":36,"line_end":36,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":294470,"byte_end":294473,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":294474,"byte_end":294481,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::Uint512;","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":294482,"byte_end":294514,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/ let a = Uint512::from(258u128);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":294515,"byte_end":294550,"line_start":40,"line_end":40,"column_start":1,"column_end":36}},{"value":"/ let b = Uint512::new([","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":294551,"byte_end":294577,"line_start":41,"line_end":41,"column_start":1,"column_end":27}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":294578,"byte_end":294625,"line_start":42,"line_end":42,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":294626,"byte_end":294673,"line_start":43,"line_end":43,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":294674,"byte_end":294721,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":294722,"byte_end":294769,"line_start":45,"line_end":45,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":294770,"byte_end":294817,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":294818,"byte_end":294865,"line_start":47,"line_end":47,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":294866,"byte_end":294913,"line_start":48,"line_end":48,"column_start":1,"column_end":48}},{"value":"/     0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 2u8,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":294914,"byte_end":294961,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/ ]);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":294962,"byte_end":294969,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(a, b);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":294970,"byte_end":294991,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":294992,"byte_end":294999,"line_start":52,"line_end":52,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":1399},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":295168,"byte_end":295171,"line_start":57,"line_end":57,"column_start":15,"column_end":18},"name":"MAX","qualname":"::math::uint512::Uint512::MAX","value":"Uint512","parent":{"krate":0,"index":1398},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":295332,"byte_end":295335,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"new","qualname":"<Uint512>::new","value":"pub fn new([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint512(value) from a big endian representation. It's just an alias for\n `from_big_endian`.\n","sig":null,"attributes":[{"value":"/ Creates a Uint512(value) from a big endian representation. It's just an alias for","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":295208,"byte_end":295293,"line_start":59,"line_end":59,"column_start":5,"column_end":90}},{"value":"/ `from_big_endian`.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":295298,"byte_end":295320,"line_start":60,"line_end":60,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1402},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":295451,"byte_end":295455,"line_start":66,"line_end":66,"column_start":18,"column_end":22},"name":"zero","qualname":"<Uint512>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint512(0)\n","sig":null,"attributes":[{"value":"/ Creates a Uint512(0)","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":295409,"byte_end":295433,"line_start":65,"line_end":65,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1403},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":295522,"byte_end":295535,"line_start":70,"line_end":70,"column_start":18,"column_end":31},"name":"from_be_bytes","qualname":"<Uint512>::from_be_bytes","value":"pub const fn from_be_bytes([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1406},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":296805,"byte_end":296818,"line_start":100,"line_end":100,"column_start":18,"column_end":31},"name":"from_le_bytes","qualname":"<Uint512>::from_le_bytes","value":"pub const fn from_le_bytes([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1409},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":298217,"byte_end":298229,"line_start":132,"line_end":132,"column_start":18,"column_end":30},"name":"from_uint256","qualname":"<Uint512>::from_uint256","value":"pub const fn from_uint256(Uint256) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A conversion from `Uint256` that, unlike the one provided by the `From` trait,\n can be used in a `const` context.\n","sig":null,"attributes":[{"value":"/ A conversion from `Uint256` that, unlike the one provided by the `From` trait,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":298075,"byte_end":298157,"line_start":130,"line_end":130,"column_start":5,"column_end":87}},{"value":"/ can be used in a `const` context.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":298162,"byte_end":298199,"line_start":131,"line_end":131,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":298926,"byte_end":298937,"line_start":145,"line_end":145,"column_start":18,"column_end":29},"name":"to_be_bytes","qualname":"<Uint512>::to_be_bytes","value":"pub const fn to_be_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the number as big endian bytes.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the number as big endian bytes.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":298855,"byte_end":298908,"line_start":144,"line_end":144,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1412},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":301136,"byte_end":301147,"line_start":227,"line_end":227,"column_start":18,"column_end":29},"name":"to_le_bytes","qualname":"<Uint512>::to_le_bytes","value":"pub const fn to_le_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the number as little endian bytes.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the number as little endian bytes.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":301062,"byte_end":301118,"line_start":226,"line_end":226,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1414},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":303279,"byte_end":303286,"line_start":308,"line_end":308,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Uint512>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1415},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":303347,"byte_end":303350,"line_start":312,"line_end":312,"column_start":12,"column_end":15},"name":"pow","qualname":"<Uint512>::pow","value":"pub fn pow(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1416},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":303455,"byte_end":303466,"line_start":317,"line_end":317,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Uint512>::checked_add","value":"pub fn checked_add(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1418},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":303693,"byte_end":303704,"line_start":324,"line_end":324,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Uint512>::checked_sub","value":"pub fn checked_sub(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1420},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":303931,"byte_end":303942,"line_start":331,"line_end":331,"column_start":12,"column_end":23},"name":"checked_mul","qualname":"<Uint512>::checked_mul","value":"pub fn checked_mul(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1422},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":304169,"byte_end":304180,"line_start":338,"line_end":338,"column_start":12,"column_end":23},"name":"checked_pow","qualname":"<Uint512>::checked_pow","value":"pub fn checked_pow(Self, u32) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":304405,"byte_end":304416,"line_start":345,"line_end":345,"column_start":12,"column_end":23},"name":"checked_div","qualname":"<Uint512>::checked_div","value":"pub fn checked_div(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1426},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":304620,"byte_end":304631,"line_start":352,"line_end":352,"column_start":12,"column_end":23},"name":"checked_rem","qualname":"<Uint512>::checked_rem","value":"pub fn checked_rem(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1428},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":304835,"byte_end":304846,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"name":"checked_shr","qualname":"<Uint512>::checked_shr","value":"pub fn checked_shr(Self, u32) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1429},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":305070,"byte_end":305084,"line_start":367,"line_end":367,"column_start":12,"column_end":26},"name":"saturating_add","qualname":"<Uint512>::saturating_add","value":"pub fn saturating_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1430},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":305177,"byte_end":305191,"line_start":371,"line_end":371,"column_start":12,"column_end":26},"name":"saturating_sub","qualname":"<Uint512>::saturating_sub","value":"pub fn saturating_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1431},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":305284,"byte_end":305298,"line_start":375,"line_end":375,"column_start":12,"column_end":26},"name":"saturating_mul","qualname":"<Uint512>::saturating_mul","value":"pub fn saturating_mul(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5115},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":332481,"byte_end":332487,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"Uint64","qualname":"::math::uint64::Uint64","value":"","parent":null,"children":[],"decl_id":null,"docs":" A thin wrapper around u64 that is using strings for JSON encoding/decoding,\n such that the full u64 range can be used for clients that convert JSON numbers to floats,\n like JavaScript and jq.","sig":null,"attributes":[{"value":"/ A thin wrapper around u64 that is using strings for JSON encoding/decoding,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":331907,"byte_end":331986,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ such that the full u64 range can be used for clients that convert JSON numbers to floats,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":331987,"byte_end":332080,"line_start":14,"line_end":14,"column_start":1,"column_end":94}},{"value":"/ like JavaScript and jq.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":332081,"byte_end":332108,"line_start":15,"line_end":15,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":332109,"byte_end":332112,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":332113,"byte_end":332127,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":332128,"byte_end":332131,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Use `from` to create instances of this and `u64` to get the value out:","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":332132,"byte_end":332206,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":332207,"byte_end":332210,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":332211,"byte_end":332218,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::Uint64;","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":332219,"byte_end":332250,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"/ let a = Uint64::from(42u64);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":332251,"byte_end":332283,"line_start":23,"line_end":23,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.u64(), 42);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":332284,"byte_end":332312,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":332313,"byte_end":332316,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let b = Uint64::from(70u32);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":332317,"byte_end":332349,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(b.u64(), 70);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":332350,"byte_end":332378,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":332379,"byte_end":332386,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":1631},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":332552,"byte_end":332555,"line_start":33,"line_end":33,"column_start":15,"column_end":18},"name":"MAX","qualname":"::math::uint64::Uint64::MAX","value":"Self","parent":{"krate":0,"index":1630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1632},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":332726,"byte_end":332729,"line_start":38,"line_end":38,"column_start":18,"column_end":21},"name":"new","qualname":"<Uint64>::new","value":"pub const fn new(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint64(value).","sig":null,"attributes":[{"value":"/ Creates a Uint64(value).","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":332585,"byte_end":332613,"line_start":35,"line_end":35,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":332618,"byte_end":332621,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This method is less flexible than `from` but can be called in a const context.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":332626,"byte_end":332708,"line_start":37,"line_end":37,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1633},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":332826,"byte_end":332830,"line_start":43,"line_end":43,"column_start":18,"column_end":22},"name":"zero","qualname":"<Uint64>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Uint64(0)\n","sig":null,"attributes":[{"value":"/ Creates a Uint64(0)","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":332785,"byte_end":332808,"line_start":42,"line_end":42,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1634},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":332929,"byte_end":332932,"line_start":48,"line_end":48,"column_start":18,"column_end":21},"name":"u64","qualname":"<Uint64>::u64","value":"pub const fn u64(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the internal data\n","sig":null,"attributes":[{"value":"/ Returns a copy of the internal data","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":332872,"byte_end":332911,"line_start":47,"line_end":47,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1635},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":333046,"byte_end":333057,"line_start":53,"line_end":53,"column_start":18,"column_end":29},"name":"to_be_bytes","qualname":"<Uint64>::to_be_bytes","value":"pub const fn to_be_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the number as big endian bytes.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the number as big endian bytes.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":332975,"byte_end":333028,"line_start":52,"line_end":52,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1637},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":333191,"byte_end":333202,"line_start":58,"line_end":58,"column_start":18,"column_end":29},"name":"to_le_bytes","qualname":"<Uint64>::to_le_bytes","value":"pub const fn to_le_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the number as little endian bytes.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the number as little endian bytes.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":333117,"byte_end":333173,"line_start":57,"line_end":57,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1639},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":333269,"byte_end":333276,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Uint64>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1640},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":333332,"byte_end":333335,"line_start":66,"line_end":66,"column_start":12,"column_end":15},"name":"pow","qualname":"<Uint64>::pow","value":"pub fn pow(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1641},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":333411,"byte_end":333422,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Uint64>::checked_add","value":"pub fn checked_add(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1643},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":333649,"byte_end":333660,"line_start":77,"line_end":77,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Uint64>::checked_sub","value":"pub fn checked_sub(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1645},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":333887,"byte_end":333898,"line_start":84,"line_end":84,"column_start":12,"column_end":23},"name":"checked_mul","qualname":"<Uint64>::checked_mul","value":"pub fn checked_mul(Self, Self) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1647},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":334125,"byte_end":334136,"line_start":91,"line_end":91,"column_start":12,"column_end":23},"name":"checked_pow","qualname":"<Uint64>::checked_pow","value":"pub fn checked_pow(Self, u32) -> Result<Self, OverflowError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1649},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":334354,"byte_end":334365,"line_start":98,"line_end":98,"column_start":12,"column_end":23},"name":"checked_div","qualname":"<Uint64>::checked_div","value":"pub fn checked_div(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1651},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":334569,"byte_end":334587,"line_start":105,"line_end":105,"column_start":12,"column_end":30},"name":"checked_div_euclid","qualname":"<Uint64>::checked_div_euclid","value":"pub fn checked_div_euclid(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1653},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":334798,"byte_end":334809,"line_start":112,"line_end":112,"column_start":12,"column_end":23},"name":"checked_rem","qualname":"<Uint64>::checked_rem","value":"pub fn checked_rem(Self, Self) -> Result<Self, DivideByZeroError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1655},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":335013,"byte_end":335025,"line_start":119,"line_end":119,"column_start":12,"column_end":24},"name":"wrapping_add","qualname":"<Uint64>::wrapping_add","value":"pub fn wrapping_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1656},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":335116,"byte_end":335128,"line_start":123,"line_end":123,"column_start":12,"column_end":24},"name":"wrapping_sub","qualname":"<Uint64>::wrapping_sub","value":"pub fn wrapping_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1657},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":335219,"byte_end":335231,"line_start":127,"line_end":127,"column_start":12,"column_end":24},"name":"wrapping_mul","qualname":"<Uint64>::wrapping_mul","value":"pub fn wrapping_mul(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1658},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":335322,"byte_end":335334,"line_start":131,"line_end":131,"column_start":12,"column_end":24},"name":"wrapping_pow","qualname":"<Uint64>::wrapping_pow","value":"pub fn wrapping_pow(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1659},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":335422,"byte_end":335436,"line_start":135,"line_end":135,"column_start":12,"column_end":26},"name":"saturating_add","qualname":"<Uint64>::saturating_add","value":"pub fn saturating_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1660},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":335529,"byte_end":335543,"line_start":139,"line_end":139,"column_start":12,"column_end":26},"name":"saturating_sub","qualname":"<Uint64>::saturating_sub","value":"pub fn saturating_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1661},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":335636,"byte_end":335650,"line_start":143,"line_end":143,"column_start":12,"column_end":26},"name":"saturating_mul","qualname":"<Uint64>::saturating_mul","value":"pub fn saturating_mul(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1662},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":335743,"byte_end":335757,"line_start":147,"line_end":147,"column_start":12,"column_end":26},"name":"saturating_pow","qualname":"<Uint64>::saturating_pow","value":"pub fn saturating_pow(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1732},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":340559,"byte_end":340573,"line_start":356,"line_end":356,"column_start":12,"column_end":26},"name":"multiply_ratio","qualname":"<Uint64>::multiply_ratio","value":"pub fn multiply_ratio<A: Into<u64>, B: Into<u64>>(&Self, A, B) -> Uint64","parent":null,"children":[],"decl_id":null,"docs":" Returns `self * numerator / denominator`\n","sig":null,"attributes":[{"value":"/ Returns `self * numerator / denominator`","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":340503,"byte_end":340547,"line_start":355,"line_end":355,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1735},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":341346,"byte_end":341354,"line_start":384,"line_end":384,"column_start":12,"column_end":20},"name":"full_mul","qualname":"<Uint64>::full_mul","value":"pub fn full_mul<impl Into<u64>: Into<u64>>(Self, impl Into<u64>) -> Uint128","parent":null,"children":[],"decl_id":null,"docs":" Multiplies two `Uint64`/`u64` values without overflow, producing an\n [`Uint128`].","sig":null,"attributes":[{"value":"/ Multiplies two `Uint64`/`u64` values without overflow, producing an","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":341009,"byte_end":341080,"line_start":372,"line_end":372,"column_start":5,"column_end":76}},{"value":"/ [`Uint128`].","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":341085,"byte_end":341101,"line_start":373,"line_end":373,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":341106,"byte_end":341109,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":341114,"byte_end":341128,"line_start":375,"line_end":375,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":341133,"byte_end":341136,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":341141,"byte_end":341148,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::Uint64;","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":341153,"byte_end":341182,"line_start":378,"line_end":378,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":341187,"byte_end":341190,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ let a = Uint64::MAX;","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":341195,"byte_end":341219,"line_start":380,"line_end":380,"column_start":5,"column_end":29}},{"value":"/ let result = a.full_mul(2u32);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":341224,"byte_end":341258,"line_start":381,"line_end":381,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(result.to_string(), \"36893488147419103230\");","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":341263,"byte_end":341322,"line_start":382,"line_end":382,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":341327,"byte_end":341334,"line_start":383,"line_end":383,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":5304},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/bank.rs","byte_start":357973,"byte_end":357980,"line_start":12,"line_end":12,"column_start":5,"column_end":12},"name":"Balance","qualname":"::query::bank::BankQuery::Balance","value":"BankQuery::Balance { address, denom }","parent":{"krate":0,"index":5303},"children":[],"decl_id":null,"docs":" This calls into the native bank module for one denomination\n Return value is BalanceResponse\n","sig":null,"attributes":[{"value":"/ This calls into the native bank module for one denomination","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/bank.rs","byte_start":357865,"byte_end":357928,"line_start":10,"line_end":10,"column_start":5,"column_end":68}},{"value":"/ Return value is BalanceResponse","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/bank.rs","byte_start":357933,"byte_end":357968,"line_start":11,"line_end":11,"column_start":5,"column_end":40}}]},{"kind":"StructVariant","id":{"krate":0,"index":5307},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/bank.rs","byte_start":358233,"byte_end":358244,"line_start":16,"line_end":16,"column_start":5,"column_end":16},"name":"AllBalances","qualname":"::query::bank::BankQuery::AllBalances","value":"BankQuery::AllBalances { address }","parent":{"krate":0,"index":5303},"children":[],"decl_id":null,"docs":" This calls into the native bank module for all denominations.\n Note that this may be much more expensive than Balance and should be avoided if possible.\n Return value is AllBalanceResponse.\n","sig":null,"attributes":[{"value":"/ This calls into the native bank module for all denominations.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/bank.rs","byte_start":358021,"byte_end":358086,"line_start":13,"line_end":13,"column_start":5,"column_end":70}},{"value":"/ Note that this may be much more expensive than Balance and should be avoided if possible.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/bank.rs","byte_start":358091,"byte_end":358184,"line_start":14,"line_end":14,"column_start":5,"column_end":98}},{"value":"/ Return value is AllBalanceResponse.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/bank.rs","byte_start":358189,"byte_end":358228,"line_start":15,"line_end":15,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":5303},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/bank.rs","byte_start":357849,"byte_end":357858,"line_start":9,"line_end":9,"column_start":10,"column_end":19},"name":"BankQuery","qualname":"::query::bank::BankQuery","value":"pub enum BankQuery {\n    Balance {\n        address: String,\n        denom: String,\n    },\n    AllBalances {\n        address: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":5304},{"krate":0,"index":5307}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/bank.rs","byte_start":357715,"byte_end":357732,"line_start":6,"line_end":6,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/bank.rs","byte_start":357804,"byte_end":357839,"line_start":8,"line_end":8,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5368},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/bank.rs","byte_start":358387,"byte_end":358402,"line_start":21,"line_end":21,"column_start":12,"column_end":27},"name":"BalanceResponse","qualname":"::query::bank::BalanceResponse","value":"BalanceResponse { amount }","parent":null,"children":[{"krate":0,"index":5369}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/bank.rs","byte_start":358340,"byte_end":358375,"line_start":20,"line_end":20,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":5369},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/bank.rs","byte_start":358519,"byte_end":358525,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"name":"amount","qualname":"::query::bank::BalanceResponse::amount","value":"coins::Coin","parent":{"krate":0,"index":5368},"children":[],"decl_id":null,"docs":" Always returns a Coin with the requested denom.\n This may be of 0 amount if no such funds.\n","sig":null,"attributes":[{"value":"/ Always returns a Coin with the requested denom.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/bank.rs","byte_start":358409,"byte_end":358460,"line_start":22,"line_end":22,"column_start":5,"column_end":56}},{"value":"/ This may be of 0 amount if no such funds.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/bank.rs","byte_start":358465,"byte_end":358510,"line_start":23,"line_end":23,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":5429},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/bank.rs","byte_start":358654,"byte_end":358672,"line_start":29,"line_end":29,"column_start":12,"column_end":30},"name":"AllBalanceResponse","qualname":"::query::bank::AllBalanceResponse","value":"AllBalanceResponse { amount }","parent":null,"children":[{"krate":0,"index":5430}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/bank.rs","byte_start":358607,"byte_end":358642,"line_start":28,"line_end":28,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":5430},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/bank.rs","byte_start":358740,"byte_end":358746,"line_start":31,"line_end":31,"column_start":9,"column_end":15},"name":"amount","qualname":"::query::bank::AllBalanceResponse::amount","value":"std::vec::Vec<coins::Coin>","parent":{"krate":0,"index":5429},"children":[],"decl_id":null,"docs":" Returns all non-zero coins held by this account.\n","sig":null,"attributes":[{"value":"/ Returns all non-zero coins held by this account.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/bank.rs","byte_start":358679,"byte_end":358731,"line_start":30,"line_end":30,"column_start":5,"column_end":57}}]},{"kind":"StructVariant","id":{"krate":0,"index":5663},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":360677,"byte_end":360688,"line_start":13,"line_end":13,"column_start":5,"column_end":16},"name":"BondedDenom","qualname":"::query::staking::StakingQuery::BondedDenom","value":"StakingQuery::BondedDenom {  }","parent":{"krate":0,"index":5662},"children":[],"decl_id":null,"docs":" Returns the denomination that can be bonded (if there are multiple native tokens on the chain)\n","sig":null,"attributes":[{"value":"/ Returns the denomination that can be bonded (if there are multiple native tokens on the chain)","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":360574,"byte_end":360672,"line_start":12,"line_end":12,"column_start":5,"column_end":103}}]},{"kind":"StructVariant","id":{"krate":0,"index":5664},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":360765,"byte_end":360779,"line_start":15,"line_end":15,"column_start":5,"column_end":19},"name":"AllDelegations","qualname":"::query::staking::StakingQuery::AllDelegations","value":"StakingQuery::AllDelegations { delegator }","parent":{"krate":0,"index":5662},"children":[],"decl_id":null,"docs":" AllDelegations will return all delegations by the delegator\n","sig":null,"attributes":[{"value":"/ AllDelegations will return all delegations by the delegator","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":360697,"byte_end":360760,"line_start":14,"line_end":14,"column_start":5,"column_end":68}}]},{"kind":"StructVariant","id":{"krate":0,"index":5666},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":360929,"byte_end":360939,"line_start":18,"line_end":18,"column_start":5,"column_end":15},"name":"Delegation","qualname":"::query::staking::StakingQuery::Delegation","value":"StakingQuery::Delegation { delegator, validator }","parent":{"krate":0,"index":5662},"children":[],"decl_id":null,"docs":" Delegation will return more detailed info on a particular\n delegation, defined by delegator/validator pair\n","sig":null,"attributes":[{"value":"/ Delegation will return more detailed info on a particular","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":360807,"byte_end":360868,"line_start":16,"line_end":16,"column_start":5,"column_end":66}},{"value":"/ delegation, defined by delegator/validator pair","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":360873,"byte_end":360924,"line_start":17,"line_end":17,"column_start":5,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":5669},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":361145,"byte_end":361158,"line_start":25,"line_end":25,"column_start":5,"column_end":18},"name":"AllValidators","qualname":"::query::staking::StakingQuery::AllValidators","value":"StakingQuery::AllValidators {  }","parent":{"krate":0,"index":5662},"children":[],"decl_id":null,"docs":" Returns all validators in the currently active validator set.","sig":null,"attributes":[{"value":"/ Returns all validators in the currently active validator set.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":361007,"byte_end":361072,"line_start":22,"line_end":22,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":361077,"byte_end":361080,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ The query response type is `AllValidatorsResponse`.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":361085,"byte_end":361140,"line_start":24,"line_end":24,"column_start":5,"column_end":60}}]},{"kind":"StructVariant","id":{"krate":0,"index":5670},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":361372,"byte_end":361381,"line_start":30,"line_end":30,"column_start":5,"column_end":14},"name":"Validator","qualname":"::query::staking::StakingQuery::Validator","value":"StakingQuery::Validator { address }","parent":{"krate":0,"index":5662},"children":[],"decl_id":null,"docs":" Returns the validator at the given address. Returns None if the validator is\n not part of the currently active validator set.","sig":null,"attributes":[{"value":"/ Returns the validator at the given address. Returns None if the validator is","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":361167,"byte_end":361247,"line_start":26,"line_end":26,"column_start":5,"column_end":85}},{"value":"/ not part of the currently active validator set.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":361252,"byte_end":361303,"line_start":27,"line_end":27,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":361308,"byte_end":361311,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ The query response type is `ValidatorResponse`.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":361316,"byte_end":361367,"line_start":29,"line_end":29,"column_start":5,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":5662},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":360555,"byte_end":360567,"line_start":11,"line_end":11,"column_start":10,"column_end":22},"name":"StakingQuery","qualname":"::query::staking::StakingQuery","value":"pub enum StakingQuery {\n    BondedDenom {\n    },\n    AllDelegations {\n        delegator: String,\n    },\n    Delegation {\n        delegator: String,\n        validator: String,\n    },\n    AllValidators {\n    },\n    Validator {\n        address: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":5663},{"krate":0,"index":5664},{"krate":0,"index":5666},{"krate":0,"index":5669},{"krate":0,"index":5670}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":360421,"byte_end":360438,"line_start":8,"line_end":8,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":360510,"byte_end":360545,"line_start":10,"line_end":10,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5731},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":361692,"byte_end":361711,"line_start":39,"line_end":39,"column_start":12,"column_end":31},"name":"BondedDenomResponse","qualname":"::query::staking::BondedDenomResponse","value":"BondedDenomResponse { denom }","parent":null,"children":[{"krate":0,"index":5732}],"decl_id":null,"docs":" BondedDenomResponse is data format returned from StakingRequest::BondedDenom query\n","sig":null,"attributes":[{"value":"/ BondedDenomResponse is data format returned from StakingRequest::BondedDenom query","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":361487,"byte_end":361573,"line_start":36,"line_end":36,"column_start":1,"column_end":87}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":361645,"byte_end":361680,"line_start":38,"line_end":38,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":5732},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":361722,"byte_end":361727,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"name":"denom","qualname":"::query::staking::BondedDenomResponse::denom","value":"std::string::String","parent":{"krate":0,"index":5731},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5792},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":361948,"byte_end":361970,"line_start":46,"line_end":46,"column_start":12,"column_end":34},"name":"AllDelegationsResponse","qualname":"::query::staking::AllDelegationsResponse","value":"AllDelegationsResponse { delegations }","parent":null,"children":[{"krate":0,"index":5793}],"decl_id":null,"docs":" DelegationsResponse is data format returned from StakingRequest::AllDelegations query\n","sig":null,"attributes":[{"value":"/ DelegationsResponse is data format returned from StakingRequest::AllDelegations query","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":361740,"byte_end":361829,"line_start":43,"line_end":43,"column_start":1,"column_end":90}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":361901,"byte_end":361936,"line_start":45,"line_end":45,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":5793},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":361981,"byte_end":361992,"line_start":47,"line_end":47,"column_start":9,"column_end":20},"name":"delegations","qualname":"::query::staking::AllDelegationsResponse::delegations","value":"std::vec::Vec<query::staking::Delegation>","parent":{"krate":0,"index":5792},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5794},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":362208,"byte_end":362218,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"name":"Delegation","qualname":"::query::staking::Delegation","value":"Delegation { delegator, validator, amount }","parent":null,"children":[{"krate":0,"index":5795},{"krate":0,"index":5796},{"krate":0,"index":5797}],"decl_id":null,"docs":" Delegation is basic (cheap to query) data about a delegation.","sig":null,"attributes":[{"value":"/ Delegation is basic (cheap to query) data about a delegation.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":362014,"byte_end":362079,"line_start":50,"line_end":50,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":362080,"byte_end":362083,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Instances are created in the querier.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":362084,"byte_end":362125,"line_start":52,"line_end":52,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":5795},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":362229,"byte_end":362238,"line_start":55,"line_end":55,"column_start":9,"column_end":18},"name":"delegator","qualname":"::query::staking::Delegation::delegator","value":"addresses::Addr","parent":{"krate":0,"index":5794},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5796},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":362307,"byte_end":362316,"line_start":57,"line_end":57,"column_start":9,"column_end":18},"name":"validator","qualname":"::query::staking::Delegation::validator","value":"std::string::String","parent":{"krate":0,"index":5794},"children":[],"decl_id":null,"docs":" A validator address (e.g. cosmosvaloper1...)\n","sig":null,"attributes":[{"value":"/ A validator address (e.g. cosmosvaloper1...)","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":362250,"byte_end":362298,"line_start":56,"line_end":56,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":5797},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":362384,"byte_end":362390,"line_start":59,"line_end":59,"column_start":9,"column_end":15},"name":"amount","qualname":"::query::staking::Delegation::amount","value":"coins::Coin","parent":{"krate":0,"index":5794},"children":[],"decl_id":null,"docs":" How much we have locked in the delegation\n","sig":null,"attributes":[{"value":"/ How much we have locked in the delegation","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":362330,"byte_end":362375,"line_start":58,"line_end":58,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":5922},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":363169,"byte_end":363183,"line_start":84,"line_end":84,"column_start":12,"column_end":26},"name":"FullDelegation","qualname":"::query::staking::FullDelegation","value":"FullDelegation { delegator, validator, amount, can_redelegate, accumulated_rewards }","parent":null,"children":[{"krate":0,"index":5923},{"krate":0,"index":5924},{"krate":0,"index":5925},{"krate":0,"index":5926},{"krate":0,"index":5927}],"decl_id":null,"docs":" FullDelegation is all the info on the delegation, some (like accumulated_reward and can_redelegate)\n is expensive to query.","sig":null,"attributes":[{"value":"/ FullDelegation is all the info on the delegation, some (like accumulated_reward and can_redelegate)","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":362910,"byte_end":363013,"line_start":79,"line_end":79,"column_start":1,"column_end":104}},{"value":"/ is expensive to query.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":363014,"byte_end":363040,"line_start":80,"line_end":80,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":363041,"byte_end":363044,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ Instances are created in the querier.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":363045,"byte_end":363086,"line_start":82,"line_end":82,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":5923},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":363194,"byte_end":363203,"line_start":85,"line_end":85,"column_start":9,"column_end":18},"name":"delegator","qualname":"::query::staking::FullDelegation::delegator","value":"addresses::Addr","parent":{"krate":0,"index":5922},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5924},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":363272,"byte_end":363281,"line_start":87,"line_end":87,"column_start":9,"column_end":18},"name":"validator","qualname":"::query::staking::FullDelegation::validator","value":"std::string::String","parent":{"krate":0,"index":5922},"children":[],"decl_id":null,"docs":" A validator address (e.g. cosmosvaloper1...)\n","sig":null,"attributes":[{"value":"/ A validator address (e.g. cosmosvaloper1...)","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":363215,"byte_end":363263,"line_start":86,"line_end":86,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":5925},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":363349,"byte_end":363355,"line_start":89,"line_end":89,"column_start":9,"column_end":15},"name":"amount","qualname":"::query::staking::FullDelegation::amount","value":"coins::Coin","parent":{"krate":0,"index":5922},"children":[],"decl_id":null,"docs":" How much we have locked in the delegation\n","sig":null,"attributes":[{"value":"/ How much we have locked in the delegation","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":363295,"byte_end":363340,"line_start":88,"line_end":88,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":5926},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":363570,"byte_end":363584,"line_start":93,"line_end":93,"column_start":9,"column_end":23},"name":"can_redelegate","qualname":"::query::staking::FullDelegation::can_redelegate","value":"coins::Coin","parent":{"krate":0,"index":5922},"children":[],"decl_id":null,"docs":" can_redelegate captures how much can be immediately redelegated.\n 0 is no redelegation and can_redelegate == amount is redelegate all\n but there are many places between the two\n","sig":null,"attributes":[{"value":"/ can_redelegate captures how much can be immediately redelegated.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":363367,"byte_end":363435,"line_start":90,"line_end":90,"column_start":5,"column_end":73}},{"value":"/ 0 is no redelegation and can_redelegate == amount is redelegate all","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":363440,"byte_end":363511,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ but there are many places between the two","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":363516,"byte_end":363561,"line_start":92,"line_end":92,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":5927},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":363643,"byte_end":363662,"line_start":95,"line_end":95,"column_start":9,"column_end":28},"name":"accumulated_rewards","qualname":"::query::staking::FullDelegation::accumulated_rewards","value":"std::vec::Vec<coins::Coin>","parent":{"krate":0,"index":5922},"children":[],"decl_id":null,"docs":" How much we can currently withdraw\n","sig":null,"attributes":[{"value":"/ How much we can currently withdraw","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":363596,"byte_end":363634,"line_start":94,"line_end":94,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":5995},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":363830,"byte_end":363851,"line_start":100,"line_end":100,"column_start":12,"column_end":33},"name":"AllValidatorsResponse","qualname":"::query::staking::AllValidatorsResponse","value":"AllValidatorsResponse { validators }","parent":null,"children":[{"krate":0,"index":5996}],"decl_id":null,"docs":" The data format returned from StakingRequest::AllValidators query\n","sig":null,"attributes":[{"value":"/ The data format returned from StakingRequest::AllValidators query","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":363678,"byte_end":363747,"line_start":98,"line_end":98,"column_start":1,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":5996},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":363862,"byte_end":363872,"line_start":101,"line_end":101,"column_start":9,"column_end":19},"name":"validators","qualname":"::query::staking::AllValidatorsResponse::validators","value":"std::vec::Vec<query::staking::Validator>","parent":{"krate":0,"index":5995},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6056},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":364041,"byte_end":364058,"line_start":106,"line_end":106,"column_start":12,"column_end":29},"name":"ValidatorResponse","qualname":"::query::staking::ValidatorResponse","value":"ValidatorResponse { validator }","parent":null,"children":[{"krate":0,"index":6057}],"decl_id":null,"docs":" The data format returned from StakingRequest::Validator query\n","sig":null,"attributes":[{"value":"/ The data format returned from StakingRequest::Validator query","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":363893,"byte_end":363958,"line_start":104,"line_end":104,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":6057},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":364069,"byte_end":364078,"line_start":107,"line_end":107,"column_start":9,"column_end":18},"name":"validator","qualname":"::query::staking::ValidatorResponse::validator","value":"std::option::Option<query::staking::Validator>","parent":{"krate":0,"index":6056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6117},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":364226,"byte_end":364235,"line_start":112,"line_end":112,"column_start":12,"column_end":21},"name":"Validator","qualname":"::query::staking::Validator","value":"Validator { address, commission, max_commission, max_change_rate }","parent":null,"children":[{"krate":0,"index":6118},{"krate":0,"index":6119},{"krate":0,"index":6120},{"krate":0,"index":6121}],"decl_id":null,"docs":" Instances are created in the querier.\n","sig":null,"attributes":[{"value":"/ Instances are created in the querier.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":364102,"byte_end":364143,"line_start":110,"line_end":110,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":6118},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":364299,"byte_end":364306,"line_start":114,"line_end":114,"column_start":9,"column_end":16},"name":"address","qualname":"::query::staking::Validator::address","value":"std::string::String","parent":{"krate":0,"index":6117},"children":[],"decl_id":null,"docs":" A validator address (e.g. cosmosvaloper1...)\n","sig":null,"attributes":[{"value":"/ A validator address (e.g. cosmosvaloper1...)","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":364242,"byte_end":364290,"line_start":113,"line_end":113,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":6119},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":364324,"byte_end":364334,"line_start":115,"line_end":115,"column_start":9,"column_end":19},"name":"commission","qualname":"::query::staking::Validator::commission","value":"math::decimal::Decimal","parent":{"krate":0,"index":6117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6120},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":364353,"byte_end":364367,"line_start":116,"line_end":116,"column_start":9,"column_end":23},"name":"max_commission","qualname":"::query::staking::Validator::max_commission","value":"math::decimal::Decimal","parent":{"krate":0,"index":6117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6121},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":364441,"byte_end":364456,"line_start":118,"line_end":118,"column_start":9,"column_end":24},"name":"max_change_rate","qualname":"::query::staking::Validator::max_change_rate","value":"math::decimal::Decimal","parent":{"krate":0,"index":6117},"children":[],"decl_id":null,"docs":" TODO: what units are these (in terms of time)?\n","sig":null,"attributes":[{"value":"/ TODO: what units are these (in terms of time)?","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":364382,"byte_end":364432,"line_start":117,"line_end":117,"column_start":5,"column_end":55}}]},{"kind":"StructVariant","id":{"krate":0,"index":6353},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/wasm.rs","byte_start":365231,"byte_end":365236,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"Smart","qualname":"::query::wasm::WasmQuery::Smart","value":"WasmQuery::Smart { contract_addr, msg }","parent":{"krate":0,"index":6352},"children":[],"decl_id":null,"docs":" this queries the public API of another contract at a known address (with known ABI)\n return value is whatever the contract returns (caller should know)\n","sig":null,"attributes":[{"value":"/ this queries the public API of another contract at a known address (with known ABI)","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/wasm.rs","byte_start":365064,"byte_end":365151,"line_start":10,"line_end":10,"column_start":5,"column_end":92}},{"value":"/ return value is whatever the contract returns (caller should know)","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/wasm.rs","byte_start":365156,"byte_end":365226,"line_start":11,"line_end":11,"column_start":5,"column_end":75}}]},{"kind":"StructVariant","id":{"krate":0,"index":6356},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/wasm.rs","byte_start":365512,"byte_end":365515,"line_start":19,"line_end":19,"column_start":5,"column_end":8},"name":"Raw","qualname":"::query::wasm::WasmQuery::Raw","value":"WasmQuery::Raw { contract_addr, key }","parent":{"krate":0,"index":6352},"children":[],"decl_id":null,"docs":" this queries the raw kv-store of the contract.\n returns the raw, unparsed data stored at that key, which may be an empty vector if not present\n","sig":null,"attributes":[{"value":"/ this queries the raw kv-store of the contract.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/wasm.rs","byte_start":365354,"byte_end":365404,"line_start":17,"line_end":17,"column_start":5,"column_end":55}},{"value":"/ returns the raw, unparsed data stored at that key, which may be an empty vector if not present","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/wasm.rs","byte_start":365409,"byte_end":365507,"line_start":18,"line_end":18,"column_start":5,"column_end":103}}]},{"kind":"StructVariant","id":{"krate":0,"index":6359},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/wasm.rs","byte_start":365728,"byte_end":365740,"line_start":25,"line_end":25,"column_start":5,"column_end":17},"name":"ContractInfo","qualname":"::query::wasm::WasmQuery::ContractInfo","value":"WasmQuery::ContractInfo { contract_addr }","parent":{"krate":0,"index":6352},"children":[],"decl_id":null,"docs":" returns a ContractInfoResponse with metadata on the contract from the runtime\n","sig":null,"attributes":[{"value":"/ returns a ContractInfoResponse with metadata on the contract from the runtime","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/wasm.rs","byte_start":365642,"byte_end":365723,"line_start":24,"line_end":24,"column_start":5,"column_end":86}}]},{"kind":"Enum","id":{"krate":0,"index":6352},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/wasm.rs","byte_start":365048,"byte_end":365057,"line_start":9,"line_end":9,"column_start":10,"column_end":19},"name":"WasmQuery","qualname":"::query::wasm::WasmQuery","value":"pub enum WasmQuery {\n    Smart {\n        contract_addr: String,\n        msg: Binary,\n    },\n    Raw {\n        contract_addr: String,\n        key: Binary,\n    },\n    ContractInfo {\n        contract_addr: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":6353},{"krate":0,"index":6356},{"krate":0,"index":6359}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/wasm.rs","byte_start":364914,"byte_end":364931,"line_start":6,"line_end":6,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/wasm.rs","byte_start":365003,"byte_end":365038,"line_start":8,"line_end":8,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":6361},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/wasm.rs","byte_start":365871,"byte_end":365891,"line_start":30,"line_end":30,"column_start":12,"column_end":32},"name":"ContractInfoResponse","qualname":"::query::wasm::ContractInfoResponse","value":"ContractInfoResponse { code_id, creator, admin, pinned, ibc_port }","parent":null,"children":[{"krate":0,"index":6362},{"krate":0,"index":6363},{"krate":0,"index":6364},{"krate":0,"index":6365},{"krate":0,"index":6366}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/wasm.rs","byte_start":365771,"byte_end":365788,"line_start":28,"line_end":28,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":6362},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/wasm.rs","byte_start":365902,"byte_end":365909,"line_start":31,"line_end":31,"column_start":9,"column_end":16},"name":"code_id","qualname":"::query::wasm::ContractInfoResponse::code_id","value":"u64","parent":{"krate":0,"index":6361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6363},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/wasm.rs","byte_start":365972,"byte_end":365979,"line_start":33,"line_end":33,"column_start":9,"column_end":16},"name":"creator","qualname":"::query::wasm::ContractInfoResponse::creator","value":"std::string::String","parent":{"krate":0,"index":6361},"children":[],"decl_id":null,"docs":" address that instantiated this contract\n","sig":null,"attributes":[{"value":"/ address that instantiated this contract","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/wasm.rs","byte_start":365920,"byte_end":365963,"line_start":32,"line_end":32,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":6364},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/wasm.rs","byte_start":366043,"byte_end":366048,"line_start":35,"line_end":35,"column_start":9,"column_end":14},"name":"admin","qualname":"::query::wasm::ContractInfoResponse::admin","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6361},"children":[],"decl_id":null,"docs":" admin who can run migrations (if any)\n","sig":null,"attributes":[{"value":"/ admin who can run migrations (if any)","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/wasm.rs","byte_start":365993,"byte_end":366034,"line_start":34,"line_end":34,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":6365},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/wasm.rs","byte_start":366162,"byte_end":366168,"line_start":37,"line_end":37,"column_start":9,"column_end":15},"name":"pinned","qualname":"::query::wasm::ContractInfoResponse::pinned","value":"bool","parent":{"krate":0,"index":6361},"children":[],"decl_id":null,"docs":" if set, the contract is pinned to the cache, and thus uses less gas when called\n","sig":null,"attributes":[{"value":"/ if set, the contract is pinned to the cache, and thus uses less gas when called","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/wasm.rs","byte_start":366070,"byte_end":366153,"line_start":36,"line_end":36,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":6366},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/wasm.rs","byte_start":366235,"byte_end":366243,"line_start":39,"line_end":39,"column_start":9,"column_end":17},"name":"ibc_port","qualname":"::query::wasm::ContractInfoResponse::ibc_port","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6361},"children":[],"decl_id":null,"docs":" set if this contract has bound an IBC port\n","sig":null,"attributes":[{"value":"/ set if this contract has bound an IBC port","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/wasm.rs","byte_start":366180,"byte_end":366226,"line_start":38,"line_end":38,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1854},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/wasm.rs","byte_start":366372,"byte_end":366375,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<ContractInfoResponse>::new","value":"pub fn new<impl Into<String>: Into<String>>(u64, impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convenience constructor for tests / mocks\n","sig":null,"attributes":[{"value":"/ Convenience constructor for tests / mocks","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/wasm.rs","byte_start":366296,"byte_end":366341,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6506},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":355233,"byte_end":355237,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Bank","qualname":"::query::QueryRequest::Bank","value":"QueryRequest::Bank(BankQuery)","parent":{"krate":0,"index":6504},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6509},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":355254,"byte_end":355260,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"Custom","qualname":"::query::QueryRequest::Custom","value":"QueryRequest::Custom(C)","parent":{"krate":0,"index":6504},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6512},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":355301,"byte_end":355308,"line_start":33,"line_end":33,"column_start":5,"column_end":12},"name":"Staking","qualname":"::query::QueryRequest::Staking","value":"QueryRequest::Staking(StakingQuery)","parent":{"krate":0,"index":6504},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"staking\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":355269,"byte_end":355296,"line_start":32,"line_end":32,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6515},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":356056,"byte_end":356060,"line_start":47,"line_end":47,"column_start":5,"column_end":9},"name":"Wasm","qualname":"::query::QueryRequest::Wasm","value":"QueryRequest::Wasm(WasmQuery)","parent":{"krate":0,"index":6504},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6504},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":355211,"byte_end":355223,"line_start":29,"line_end":29,"column_start":10,"column_end":22},"name":"QueryRequest","qualname":"::query::QueryRequest","value":"pub enum QueryRequest<C> {\n    Bank(BankQuery),\n    Custom(C),\n    Staking(StakingQuery),\n    Wasm(WasmQuery),\n}","parent":null,"children":[{"krate":0,"index":6506},{"krate":0,"index":6509},{"krate":0,"index":6512},{"krate":0,"index":6515}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":355077,"byte_end":355094,"line_start":26,"line_end":26,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":355166,"byte_end":355201,"line_start":28,"line_end":28,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":1901},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":356676,"byte_end":356687,"line_start":69,"line_end":69,"column_start":11,"column_end":22},"name":"CustomQuery","qualname":"::query::CustomQuery","value":"CustomQuery: Serialize + Clone","parent":null,"children":[],"decl_id":null,"docs":" A trait that is required to avoid conflicts with other query types like BankQuery and WasmQuery\n in generic implementations.\n You need to implement it in your custom query type.","sig":null,"attributes":[{"value":"/ A trait that is required to avoid conflicts with other query types like BankQuery and WasmQuery","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":356076,"byte_end":356175,"line_start":50,"line_end":50,"column_start":1,"column_end":100}},{"value":"/ in generic implementations.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":356176,"byte_end":356207,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/ You need to implement it in your custom query type.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":356208,"byte_end":356263,"line_start":52,"line_end":52,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":356264,"byte_end":356267,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":356268,"byte_end":356282,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":356283,"byte_end":356286,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":356287,"byte_end":356294,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::CustomQuery;","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":356295,"byte_end":356331,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ # use schemars::JsonSchema;","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":356332,"byte_end":356363,"line_start":58,"line_end":58,"column_start":1,"column_end":32}},{"value":"/ # use serde::{Deserialize, Serialize};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":356364,"byte_end":356406,"line_start":59,"line_end":59,"column_start":1,"column_end":43}},{"value":"/ #[derive(Serialize, Deserialize, Clone, Debug, PartialEq, JsonSchema)]","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":356407,"byte_end":356481,"line_start":60,"line_end":60,"column_start":1,"column_end":75}},{"value":"/ #[serde(rename_all = \"snake_case\")]","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":356482,"byte_end":356521,"line_start":61,"line_end":61,"column_start":1,"column_end":40}},{"value":"/ pub enum MyCustomQuery {","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":356522,"byte_end":356550,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/     Ping {},","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":356551,"byte_end":356567,"line_start":63,"line_end":63,"column_start":1,"column_end":17}},{"value":"/     Capitalized { text: String },","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":356568,"byte_end":356605,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":356606,"byte_end":356611,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":356612,"byte_end":356615,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ impl CustomQuery for MyCustomQuery {}","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":356616,"byte_end":356657,"line_start":67,"line_end":67,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":356658,"byte_end":356665,"line_start":68,"line_end":68,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6586},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":368717,"byte_end":368719,"line_start":35,"line_end":35,"column_start":5,"column_end":7},"name":"Ok","qualname":"::results::contract_result::ContractResult::Ok","value":"ContractResult::Ok(S)","parent":{"krate":0,"index":6584},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6589},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":368937,"byte_end":368940,"line_start":39,"line_end":39,"column_start":5,"column_end":8},"name":"Err","qualname":"::results::contract_result::ContractResult::Err","value":"ContractResult::Err(String)","parent":{"krate":0,"index":6584},"children":[],"decl_id":null,"docs":" An error type that every custom error created by contract developers can be converted to.\n This could potientially have more structure, but String is the easiest.\n","sig":null,"attributes":[{"value":"/ An error type that every custom error created by contract developers can be converted to.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":368728,"byte_end":368821,"line_start":36,"line_end":36,"column_start":5,"column_end":98}},{"value":"/ This could potientially have more structure, but String is the easiest.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":368826,"byte_end":368901,"line_start":37,"line_end":37,"column_start":5,"column_end":80}},{"value":"serde(rename = \"error\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":368906,"byte_end":368932,"line_start":38,"line_end":38,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":6584},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":368693,"byte_end":368707,"line_start":34,"line_end":34,"column_start":10,"column_end":24},"name":"ContractResult","qualname":"::results::contract_result::ContractResult","value":"pub enum ContractResult<S> { Ok(S), Err(String), }","parent":null,"children":[{"krate":0,"index":6586},{"krate":0,"index":6589}],"decl_id":null,"docs":" This is the final result type that is created and serialized in a contract for\n every init/execute/migrate call. The VM then deserializes this type to distinguish\n between successful and failed executions.","sig":null,"attributes":[{"value":"/ This is the final result type that is created and serialized in a contract for","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":367435,"byte_end":367517,"line_start":5,"line_end":5,"column_start":1,"column_end":83}},{"value":"/ every init/execute/migrate call. The VM then deserializes this type to distinguish","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":367518,"byte_end":367604,"line_start":6,"line_end":6,"column_start":1,"column_end":87}},{"value":"/ between successful and failed executions.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":367605,"byte_end":367650,"line_start":7,"line_end":7,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":367651,"byte_end":367654,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ We use a custom type here instead of Rust's Result because we want to be able to","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":367655,"byte_end":367739,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"/ define the serialization, which is a public interface. Every language that compiles","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":367740,"byte_end":367827,"line_start":10,"line_end":10,"column_start":1,"column_end":88}},{"value":"/ to Wasm and runs in the ComsWasm VM needs to create the same JSON representation.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":367828,"byte_end":367913,"line_start":11,"line_end":11,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":367914,"byte_end":367917,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":367918,"byte_end":367932,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":367933,"byte_end":367936,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Success:","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":367937,"byte_end":367949,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":367950,"byte_end":367953,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":367954,"byte_end":367961,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{to_vec, ContractResult, Response};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":367962,"byte_end":368021,"line_start":18,"line_end":18,"column_start":1,"column_end":60}},{"value":"/ let response: Response = Response::default();","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":368022,"byte_end":368071,"line_start":19,"line_end":19,"column_start":1,"column_end":50}},{"value":"/ let result: ContractResult<Response> = ContractResult::Ok(response);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":368072,"byte_end":368144,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(to_vec(&result).unwrap(), br#\"{\"ok\":{\"messages\":[],\"attributes\":[],\"events\":[],\"data\":null}}\"#);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":368145,"byte_end":368256,"line_start":21,"line_end":21,"column_start":1,"column_end":112}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":368257,"byte_end":368264,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":368265,"byte_end":368268,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Failure:","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":368269,"byte_end":368281,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":368282,"byte_end":368285,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":368286,"byte_end":368293,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{to_vec, ContractResult, Response};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":368294,"byte_end":368353,"line_start":27,"line_end":27,"column_start":1,"column_end":60}},{"value":"/ let error_msg = String::from(\"Something went wrong\");","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":368354,"byte_end":368411,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/ let result: ContractResult<Response> = ContractResult::Err(error_msg);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":368412,"byte_end":368486,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(to_vec(&result).unwrap(), br#\"{\"error\":\"Something went wrong\"}\"#);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":368487,"byte_end":368568,"line_start":30,"line_end":30,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":368569,"byte_end":368576,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":368648,"byte_end":368683,"line_start":33,"line_end":33,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1932},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":369242,"byte_end":369253,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"into_result","qualname":"<ContractResult<S>>::into_result","value":"pub fn into_result(Self) -> Result<S, String>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `ContractResult<S>` to a `Result<S, String>` as a convenient way\n to access the full Result API.\n","sig":null,"attributes":[{"value":"/ Converts a `ContractResult<S>` to a `Result<S, String>` as a convenient way","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":369112,"byte_end":369191,"line_start":45,"line_end":45,"column_start":5,"column_end":84}},{"value":"/ to access the full Result API.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":369196,"byte_end":369230,"line_start":46,"line_end":46,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1933},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":369341,"byte_end":369347,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<ContractResult<S>>::unwrap","value":"pub fn unwrap(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1934},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":369415,"byte_end":369420,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"is_ok","qualname":"<ContractResult<S>>::is_ok","value":"pub fn is_ok(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1935},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":369502,"byte_end":369508,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"is_err","qualname":"<ContractResult<S>>::is_err","value":"pub fn is_err(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1938},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":369633,"byte_end":369643,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"unwrap_err","qualname":"<ContractResult<S>>::unwrap_err","value":"pub fn unwrap_err(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1975},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":374171,"byte_end":374180,"line_start":16,"line_end":16,"column_start":11,"column_end":20},"name":"CustomMsg","qualname":"::results::cosmos_msg::CustomMsg","value":"CustomMsg: Serialize + Clone + fmt::Debug + PartialEq + JsonSchema","parent":null,"children":[],"decl_id":null,"docs":" Like CustomQuery for better type clarity.\n Also makes it shorter to use as a trait bound.\n","sig":null,"attributes":[{"value":"/ Like CustomQuery for better type clarity.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":374064,"byte_end":374109,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/ Also makes it shorter to use as a trait bound.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":374110,"byte_end":374160,"line_start":15,"line_end":15,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6666},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":374534,"byte_end":374538,"line_start":25,"line_end":25,"column_start":5,"column_end":9},"name":"Bank","qualname":"::results::cosmos_msg::CosmosMsg::Bank","value":"CosmosMsg::Bank(BankMsg)","parent":{"krate":0,"index":6664},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6669},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":374685,"byte_end":374691,"line_start":28,"line_end":28,"column_start":5,"column_end":11},"name":"Custom","qualname":"::results::cosmos_msg::CosmosMsg::Custom","value":"CosmosMsg::Custom(T)","parent":{"krate":0,"index":6664},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6672},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":374732,"byte_end":374739,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"Staking","qualname":"::results::cosmos_msg::CosmosMsg::Staking","value":"CosmosMsg::Staking(StakingMsg)","parent":{"krate":0,"index":6664},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"staking\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":374700,"byte_end":374727,"line_start":29,"line_end":29,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6675},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":374789,"byte_end":374801,"line_start":32,"line_end":32,"column_start":5,"column_end":17},"name":"Distribution","qualname":"::results::cosmos_msg::CosmosMsg::Distribution","value":"CosmosMsg::Distribution(DistributionMsg)","parent":{"krate":0,"index":6664},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"staking\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":374757,"byte_end":374784,"line_start":31,"line_end":31,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6678},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":375317,"byte_end":375321,"line_start":42,"line_end":42,"column_start":5,"column_end":9},"name":"Wasm","qualname":"::results::cosmos_msg::CosmosMsg::Wasm","value":"CosmosMsg::Wasm(WasmMsg)","parent":{"krate":0,"index":6664},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6664},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":374507,"byte_end":374516,"line_start":24,"line_end":24,"column_start":10,"column_end":19},"name":"CosmosMsg","qualname":"::results::cosmos_msg::CosmosMsg","value":"pub enum CosmosMsg<T = Empty> {\n    Bank(BankMsg),\n    Custom(T),\n    Staking(StakingMsg),\n    Distribution(DistributionMsg),\n    Wasm(WasmMsg),\n}","parent":null,"children":[{"krate":0,"index":6666},{"krate":0,"index":6669},{"krate":0,"index":6672},{"krate":0,"index":6675},{"krate":0,"index":6678}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"non_exhaustive","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":374271,"byte_end":374288,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":374360,"byte_end":374395,"line_start":22,"line_end":22,"column_start":1,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":6809},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":375969,"byte_end":375973,"line_start":58,"line_end":58,"column_start":5,"column_end":9},"name":"Send","qualname":"::results::cosmos_msg::BankMsg::Send","value":"BankMsg::Send { to_address, amount }","parent":{"krate":0,"index":6808},"children":[],"decl_id":null,"docs":" Sends native tokens from the contract to the given address.","sig":null,"attributes":[{"value":"/ Sends native tokens from the contract to the given address.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":375672,"byte_end":375735,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":375740,"byte_end":375743,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This is translated to a [MsgSend](https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/bank/v1beta1/tx.proto#L19-L28).","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":375748,"byte_end":375880,"line_start":56,"line_end":56,"column_start":5,"column_end":137}},{"value":"/ `from_address` is automatically filled with the current contract's address.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":375885,"byte_end":375964,"line_start":57,"line_end":57,"column_start":5,"column_end":84}}]},{"kind":"StructVariant","id":{"krate":0,"index":6812},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":376304,"byte_end":376308,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Burn","qualname":"::results::cosmos_msg::BankMsg::Burn","value":"BankMsg::Burn { amount }","parent":{"krate":0,"index":6808},"children":[],"decl_id":null,"docs":" This will burn the given coins from the contract's account.\n There is no Cosmos SDK message that performs this, but it can be done by calling the bank keeper.\n Important if a contract controls significant token supply that must be retired.\n","sig":null,"attributes":[{"value":"/ This will burn the given coins from the contract's account.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":376042,"byte_end":376105,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ There is no Cosmos SDK message that performs this, but it can be done by calling the bank keeper.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":376110,"byte_end":376211,"line_start":63,"line_end":63,"column_start":5,"column_end":106}},{"value":"/ Important if a contract controls significant token supply that must be retired.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":376216,"byte_end":376299,"line_start":64,"line_end":64,"column_start":5,"column_end":88}}]},{"kind":"Enum","id":{"krate":0,"index":6808},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":375658,"byte_end":375665,"line_start":53,"line_end":53,"column_start":10,"column_end":17},"name":"BankMsg","qualname":"::results::cosmos_msg::BankMsg","value":"pub enum BankMsg {\n    Send {\n        to_address: String,\n        amount: Vec<Coin>,\n    },\n    Burn {\n        amount: Vec<Coin>,\n    },\n}","parent":null,"children":[{"krate":0,"index":6809},{"krate":0,"index":6812}],"decl_id":null,"docs":" The message types of the bank module.","sig":null,"attributes":[{"value":"/ The message types of the bank module.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":375385,"byte_end":375426,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":375427,"byte_end":375430,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ See https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/bank/v1beta1/tx.proto","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":375431,"byte_end":375523,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"non_exhaustive","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":375524,"byte_end":375541,"line_start":50,"line_end":50,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":375613,"byte_end":375648,"line_start":52,"line_end":52,"column_start":1,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":6984},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":376892,"byte_end":376900,"line_start":78,"line_end":78,"column_start":5,"column_end":13},"name":"Delegate","qualname":"::results::cosmos_msg::StakingMsg::Delegate","value":"StakingMsg::Delegate { validator, amount }","parent":{"krate":0,"index":6983},"children":[],"decl_id":null,"docs":" This is translated to a [MsgDelegate](https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/staking/v1beta1/tx.proto#L81-L90).\n `delegator_address` is automatically filled with the current contract's address.\n","sig":null,"attributes":[{"value":"/ This is translated to a [MsgDelegate](https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/staking/v1beta1/tx.proto#L81-L90).","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":376659,"byte_end":376798,"line_start":76,"line_end":76,"column_start":5,"column_end":144}},{"value":"/ `delegator_address` is automatically filled with the current contract's address.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":376803,"byte_end":376887,"line_start":77,"line_end":77,"column_start":5,"column_end":89}}]},{"kind":"StructVariant","id":{"krate":0,"index":6987},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":377179,"byte_end":377189,"line_start":81,"line_end":81,"column_start":5,"column_end":15},"name":"Undelegate","qualname":"::results::cosmos_msg::StakingMsg::Undelegate","value":"StakingMsg::Undelegate { validator, amount }","parent":{"krate":0,"index":6983},"children":[],"decl_id":null,"docs":" This is translated to a [MsgUndelegate](https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/staking/v1beta1/tx.proto#L112-L121).\n `delegator_address` is automatically filled with the current contract's address.\n","sig":null,"attributes":[{"value":"/ This is translated to a [MsgUndelegate](https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/staking/v1beta1/tx.proto#L112-L121).","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":376942,"byte_end":377085,"line_start":79,"line_end":79,"column_start":5,"column_end":148}},{"value":"/ `delegator_address` is automatically filled with the current contract's address.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":377090,"byte_end":377174,"line_start":80,"line_end":80,"column_start":5,"column_end":89}}]},{"kind":"StructVariant","id":{"krate":0,"index":6990},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":377472,"byte_end":377482,"line_start":84,"line_end":84,"column_start":5,"column_end":15},"name":"Redelegate","qualname":"::results::cosmos_msg::StakingMsg::Redelegate","value":"StakingMsg::Redelegate { src_validator, dst_validator, amount }","parent":{"krate":0,"index":6983},"children":[],"decl_id":null,"docs":" This is translated to a [MsgBeginRedelegate](https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/staking/v1beta1/tx.proto#L95-L105).\n `delegator_address` is automatically filled with the current contract's address.\n","sig":null,"attributes":[{"value":"/ This is translated to a [MsgBeginRedelegate](https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/staking/v1beta1/tx.proto#L95-L105).","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":377231,"byte_end":377378,"line_start":82,"line_end":82,"column_start":5,"column_end":152}},{"value":"/ `delegator_address` is automatically filled with the current contract's address.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":377383,"byte_end":377467,"line_start":83,"line_end":83,"column_start":5,"column_end":89}}]},{"kind":"Enum","id":{"krate":0,"index":6983},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":376642,"byte_end":376652,"line_start":75,"line_end":75,"column_start":10,"column_end":20},"name":"StakingMsg","qualname":"::results::cosmos_msg::StakingMsg","value":"pub enum StakingMsg {\n    Delegate {\n        validator: String,\n        amount: Coin,\n    },\n    Undelegate {\n        validator: String,\n        amount: Coin,\n    },\n    Redelegate {\n        src_validator: String,\n        dst_validator: String,\n        amount: Coin,\n    },\n}","parent":null,"children":[{"krate":0,"index":6984},{"krate":0,"index":6987},{"krate":0,"index":6990}],"decl_id":null,"docs":" The message types of the staking module.","sig":null,"attributes":[{"value":"/ The message types of the staking module.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":376335,"byte_end":376379,"line_start":68,"line_end":68,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":376380,"byte_end":376383,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ See https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/staking/v1beta1/tx.proto","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":376384,"byte_end":376479,"line_start":70,"line_end":70,"column_start":1,"column_end":96}},{"value":"cfg(feature = \"staking\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":376480,"byte_end":376507,"line_start":71,"line_end":71,"column_start":1,"column_end":28}},{"value":"non_exhaustive","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":376508,"byte_end":376525,"line_start":72,"line_end":72,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":376597,"byte_end":376632,"line_start":74,"line_end":74,"column_start":1,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":7120},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":378166,"byte_end":378184,"line_start":101,"line_end":101,"column_start":5,"column_end":23},"name":"SetWithdrawAddress","qualname":"::results::cosmos_msg::DistributionMsg::SetWithdrawAddress","value":"DistributionMsg::SetWithdrawAddress { address }","parent":{"krate":0,"index":7119},"children":[],"decl_id":null,"docs":" This is translated to a [MsgSetWithdrawAddress](https://github.com/cosmos/cosmos-sdk/blob/v0.42.4/proto/cosmos/distribution/v1beta1/tx.proto#L29-L37).\n `delegator_address` is automatically filled with the current contract's address.\n","sig":null,"attributes":[{"value":"/ This is translated to a [MsgSetWithdrawAddress](https://github.com/cosmos/cosmos-sdk/blob/v0.42.4/proto/cosmos/distribution/v1beta1/tx.proto#L29-L37).","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":377918,"byte_end":378072,"line_start":99,"line_end":99,"column_start":5,"column_end":159}},{"value":"/ `delegator_address` is automatically filled with the current contract's address.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":378077,"byte_end":378161,"line_start":100,"line_end":100,"column_start":5,"column_end":89}}]},{"kind":"StructVariant","id":{"krate":0,"index":7122},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":378512,"byte_end":378535,"line_start":107,"line_end":107,"column_start":5,"column_end":28},"name":"WithdrawDelegatorReward","qualname":"::results::cosmos_msg::DistributionMsg::WithdrawDelegatorReward","value":"DistributionMsg::WithdrawDelegatorReward { validator }","parent":{"krate":0,"index":7119},"children":[],"decl_id":null,"docs":" This is translated to a [[MsgWithdrawDelegatorReward](https://github.com/cosmos/cosmos-sdk/blob/v0.42.4/proto/cosmos/distribution/v1beta1/tx.proto#L42-L50).\n `delegator_address` is automatically filled with the current contract's address.\n","sig":null,"attributes":[{"value":"/ This is translated to a [[MsgWithdrawDelegatorReward](https://github.com/cosmos/cosmos-sdk/blob/v0.42.4/proto/cosmos/distribution/v1beta1/tx.proto#L42-L50).","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":378258,"byte_end":378418,"line_start":105,"line_end":105,"column_start":5,"column_end":165}},{"value":"/ `delegator_address` is automatically filled with the current contract's address.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":378423,"byte_end":378507,"line_start":106,"line_end":106,"column_start":5,"column_end":89}}]},{"kind":"Enum","id":{"krate":0,"index":7119},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":377896,"byte_end":377911,"line_start":98,"line_end":98,"column_start":10,"column_end":25},"name":"DistributionMsg","qualname":"::results::cosmos_msg::DistributionMsg","value":"pub enum DistributionMsg {\n    SetWithdrawAddress {\n        address: String,\n    },\n    WithdrawDelegatorReward {\n        validator: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":7120},{"krate":0,"index":7122}],"decl_id":null,"docs":" The message types of the distribution module.","sig":null,"attributes":[{"value":"/ The message types of the distribution module.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":377579,"byte_end":377628,"line_start":91,"line_end":91,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":377629,"byte_end":377632,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ See https://github.com/cosmos/cosmos-sdk/blob/v0.42.4/proto/cosmos/distribution/v1beta1/tx.proto","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":377633,"byte_end":377733,"line_start":93,"line_end":93,"column_start":1,"column_end":101}},{"value":"cfg(feature = \"staking\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":377734,"byte_end":377761,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"non_exhaustive","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":377762,"byte_end":377779,"line_start":95,"line_end":95,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":377851,"byte_end":377886,"line_start":97,"line_end":97,"column_start":1,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":7376},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":379201,"byte_end":379208,"line_start":124,"line_end":124,"column_start":5,"column_end":12},"name":"Execute","qualname":"::results::cosmos_msg::WasmMsg::Execute","value":"WasmMsg::Execute { contract_addr, msg, funds }","parent":{"krate":0,"index":7375},"children":[],"decl_id":null,"docs":" Dispatches a call to another contract at a known address (with known ABI).","sig":null,"attributes":[{"value":"/ Dispatches a call to another contract at a known address (with known ABI).","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":378891,"byte_end":378969,"line_start":120,"line_end":120,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":378974,"byte_end":378977,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This is translated to a [MsgExecuteContract](https://github.com/CosmWasm/wasmd/blob/v0.14.0/x/wasm/internal/types/tx.proto#L68-L78).","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":378982,"byte_end":379118,"line_start":122,"line_end":122,"column_start":5,"column_end":141}},{"value":"/ `sender` is automatically filled with the current contract's address.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":379123,"byte_end":379196,"line_start":123,"line_end":123,"column_start":5,"column_end":78}}]},{"kind":"StructVariant","id":{"krate":0,"index":7380},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":379681,"byte_end":379692,"line_start":134,"line_end":134,"column_start":5,"column_end":16},"name":"Instantiate","qualname":"::results::cosmos_msg::WasmMsg::Instantiate","value":"WasmMsg::Instantiate { admin, code_id, msg, funds, label }","parent":{"krate":0,"index":7375},"children":[],"decl_id":null,"docs":" Instantiates a new contracts from previously uploaded Wasm code.","sig":null,"attributes":[{"value":"/ Instantiates a new contracts from previously uploaded Wasm code.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":379370,"byte_end":379438,"line_start":130,"line_end":130,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":379443,"byte_end":379446,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This is translated to a [MsgInstantiateContract](https://github.com/CosmWasm/wasmd/blob/v0.16.0-alpha1/x/wasm/internal/types/tx.proto#L47-L61).","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":379451,"byte_end":379598,"line_start":132,"line_end":132,"column_start":5,"column_end":152}},{"value":"/ `sender` is automatically filled with the current contract's address.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":379603,"byte_end":379676,"line_start":133,"line_end":133,"column_start":5,"column_end":78}}]},{"kind":"StructVariant","id":{"krate":0,"index":7386},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":380400,"byte_end":380407,"line_start":150,"line_end":150,"column_start":5,"column_end":12},"name":"Migrate","qualname":"::results::cosmos_msg::WasmMsg::Migrate","value":"WasmMsg::Migrate { contract_addr, new_code_id, msg }","parent":{"krate":0,"index":7375},"children":[],"decl_id":null,"docs":" Migrates a given contracts to use new wasm code. Passes a MigrateMsg to allow us to\n customize behavior.","sig":null,"attributes":[{"value":"/ Migrates a given contracts to use new wasm code. Passes a MigrateMsg to allow us to","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":379955,"byte_end":380042,"line_start":143,"line_end":143,"column_start":5,"column_end":92}},{"value":"/ customize behavior.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":380047,"byte_end":380070,"line_start":144,"line_end":144,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":380075,"byte_end":380078,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Only the contract admin (as defined in wasmd), if any, is able to make this call.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":380083,"byte_end":380168,"line_start":146,"line_end":146,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":380173,"byte_end":380176,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ This is translated to a [MsgMigrateContract](https://github.com/CosmWasm/wasmd/blob/v0.14.0/x/wasm/internal/types/tx.proto#L86-L96).","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":380181,"byte_end":380317,"line_start":148,"line_end":148,"column_start":5,"column_end":141}},{"value":"/ `sender` is automatically filled with the current contract's address.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":380322,"byte_end":380395,"line_start":149,"line_end":149,"column_start":5,"column_end":78}}]},{"kind":"StructVariant","id":{"krate":0,"index":7390},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":380801,"byte_end":380812,"line_start":159,"line_end":159,"column_start":5,"column_end":16},"name":"UpdateAdmin","qualname":"::results::cosmos_msg::WasmMsg::UpdateAdmin","value":"WasmMsg::UpdateAdmin { contract_addr, admin }","parent":{"krate":0,"index":7375},"children":[],"decl_id":null,"docs":" Sets a new admin (for migrate) on the given contract.\n Fails if this contract is not currently admin of the target contract.\n","sig":null,"attributes":[{"value":"/ Sets a new admin (for migrate) on the given contract.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":380661,"byte_end":380718,"line_start":157,"line_end":157,"column_start":5,"column_end":62}},{"value":"/ Fails if this contract is not currently admin of the target contract.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":380723,"byte_end":380796,"line_start":158,"line_end":158,"column_start":5,"column_end":78}}]},{"kind":"StructVariant","id":{"krate":0,"index":7393},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":381037,"byte_end":381047,"line_start":165,"line_end":165,"column_start":5,"column_end":15},"name":"ClearAdmin","qualname":"::results::cosmos_msg::WasmMsg::ClearAdmin","value":"WasmMsg::ClearAdmin { contract_addr }","parent":{"krate":0,"index":7375},"children":[],"decl_id":null,"docs":" Clears the admin on the given contract, so no more migration possible.\n Fails if this contract is not currently admin of the target contract.\n","sig":null,"attributes":[{"value":"/ Clears the admin on the given contract, so no more migration possible.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":380880,"byte_end":380954,"line_start":163,"line_end":163,"column_start":5,"column_end":79}},{"value":"/ Fails if this contract is not currently admin of the target contract.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":380959,"byte_end":381032,"line_start":164,"line_end":164,"column_start":5,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":7375},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":378877,"byte_end":378884,"line_start":119,"line_end":119,"column_start":10,"column_end":17},"name":"WasmMsg","qualname":"::results::cosmos_msg::WasmMsg","value":"pub enum WasmMsg {\n    Execute {\n        contract_addr: String,\n        msg: Binary,\n        funds: Vec<Coin>,\n    },\n    Instantiate {\n        admin: Option<String>,\n        code_id: u64,\n        msg: Binary,\n        funds: Vec<Coin>,\n        label: String,\n    },\n    Migrate {\n        contract_addr: String,\n        new_code_id: u64,\n        msg: Binary,\n    },\n    UpdateAdmin {\n        contract_addr: String,\n        admin: String,\n    },\n    ClearAdmin {\n        contract_addr: String,\n    },\n}","parent":null,"children":[{"krate":0,"index":7376},{"krate":0,"index":7380},{"krate":0,"index":7386},{"krate":0,"index":7390},{"krate":0,"index":7393}],"decl_id":null,"docs":" The message types of the wasm module.","sig":null,"attributes":[{"value":"/ The message types of the wasm module.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":378611,"byte_end":378652,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":378653,"byte_end":378656,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ See https://github.com/CosmWasm/wasmd/blob/v0.14.0/x/wasm/internal/types/tx.proto","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":378657,"byte_end":378742,"line_start":115,"line_end":115,"column_start":1,"column_end":86}},{"value":"non_exhaustive","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":378743,"byte_end":378760,"line_start":116,"line_end":116,"column_start":1,"column_end":18}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":378832,"byte_end":378867,"line_start":118,"line_end":118,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":1977},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":381901,"byte_end":381917,"line_start":189,"line_end":189,"column_start":8,"column_end":24},"name":"wasm_instantiate","qualname":"::results::cosmos_msg::wasm_instantiate","value":"pub fn wasm_instantiate<impl Serialize: Serialize>(u64, &impl Serialize,\n                                                   Vec<Coin>, String)\n-> StdResult<WasmMsg>","parent":null,"children":[],"decl_id":null,"docs":" Shortcut helper as the construction of WasmMsg::Instantiate can be quite verbose in contract code.","sig":null,"attributes":[{"value":"/ Shortcut helper as the construction of WasmMsg::Instantiate can be quite verbose in contract code.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":381682,"byte_end":381784,"line_start":186,"line_end":186,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":381785,"byte_end":381788,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ When using this, `admin` is always unset. If you need more flexibility, create the message directly.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":381789,"byte_end":381893,"line_start":188,"line_end":188,"column_start":1,"column_end":105}}]},{"kind":"Function","id":{"krate":0,"index":1979},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":382304,"byte_end":382316,"line_start":206,"line_end":206,"column_start":8,"column_end":20},"name":"wasm_execute","qualname":"::results::cosmos_msg::wasm_execute","value":"pub fn wasm_execute<impl Into<String>: Into<String>,\n                    impl Serialize: Serialize>(impl Into<String>,\n                                               &impl Serialize, Vec<Coin>)\n-> StdResult<WasmMsg>","parent":null,"children":[],"decl_id":null,"docs":" Shortcut helper as the construction of WasmMsg::Instantiate can be quite verbose in contract code\n","sig":null,"attributes":[{"value":"/ Shortcut helper as the construction of WasmMsg::Instantiate can be quite verbose in contract code","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":382195,"byte_end":382296,"line_start":205,"line_end":205,"column_start":1,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":7395},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/empty.rs","byte_start":384398,"byte_end":384403,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Empty","qualname":"::results::empty::Empty","value":"Empty {  }","parent":null,"children":[],"decl_id":null,"docs":" An empty struct that serves as a placeholder in different places,\n such as contracts that don't set a custom message.","sig":null,"attributes":[{"value":"/ An empty struct that serves as a placeholder in different places,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/empty.rs","byte_start":383937,"byte_end":384006,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"/ such as contracts that don't set a custom message.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/empty.rs","byte_start":384007,"byte_end":384061,"line_start":5,"line_end":5,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/empty.rs","byte_start":384062,"byte_end":384065,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ It is designed to be expressable in correct JSON and JSON Schema but","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/empty.rs","byte_start":384066,"byte_end":384138,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ contains no meaningful data. Previously we used enums without cases,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/empty.rs","byte_start":384139,"byte_end":384211,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/ but those cannot represented as valid JSON Schema (https://github.com/CosmWasm/cosmwasm/issues/451)","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/empty.rs","byte_start":384212,"byte_end":384315,"line_start":9,"line_end":9,"column_start":1,"column_end":104}}]},{"kind":"Struct","id":{"krate":0,"index":7452},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":385604,"byte_end":385609,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Event","qualname":"::results::events::Event","value":"Event { ty, attributes }","parent":null,"children":[{"krate":0,"index":7515},{"krate":0,"index":7453}],"decl_id":null,"docs":" A full [*Cosmos SDK* event].","sig":null,"attributes":[{"value":"/ A full [*Cosmos SDK* event].","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":385004,"byte_end":385036,"line_start":4,"line_end":4,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":385037,"byte_end":385040,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This version uses string attributes (similar to [*Cosmos SDK* StringEvent]),","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":385041,"byte_end":385121,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ which then get magically converted to bytes for Tendermint somewhere between","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":385122,"byte_end":385202,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ the Rust-Go interface, JSON deserialization and the `NewEvent` call in Cosmos SDK.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":385203,"byte_end":385289,"line_start":8,"line_end":8,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":385290,"byte_end":385293,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [*Cosmos SDK* event]: https://docs.cosmos.network/master/core/events.html","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":385294,"byte_end":385371,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ [*Cosmos SDK* StringEvent]: https://github.com/cosmos/cosmos-sdk/blob/v0.42.5/proto/cosmos/base/abci/v1beta1/abci.proto#L56-L70","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":385372,"byte_end":385503,"line_start":11,"line_end":11,"column_start":1,"column_end":132}},{"value":"non_exhaustive","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":385575,"byte_end":385592,"line_start":13,"line_end":13,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":7515},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":385755,"byte_end":385757,"line_start":17,"line_end":17,"column_start":9,"column_end":11},"name":"ty","qualname":"::results::events::Event::ty","value":"std::string::String","parent":{"krate":0,"index":7452},"children":[],"decl_id":null,"docs":" The event type. This is renamed to \"ty\" because \"type\" is reserved in Rust. This sucks, we know.\n","sig":null,"attributes":[{"value":"/ The event type. This is renamed to \"ty\" because \"type\" is reserved in Rust. This sucks, we know.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":385616,"byte_end":385716,"line_start":15,"line_end":15,"column_start":5,"column_end":105}},{"value":"serde(rename = \"type\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":385721,"byte_end":385746,"line_start":16,"line_end":16,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":7453},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":385989,"byte_end":385999,"line_start":23,"line_end":23,"column_start":9,"column_end":19},"name":"attributes","qualname":"::results::events::Event::attributes","value":"std::vec::Vec<results::events::Attribute>","parent":{"krate":0,"index":7452},"children":[],"decl_id":null,"docs":" The attributes to be included in the event.","sig":null,"attributes":[{"value":"/ The attributes to be included in the event.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":385771,"byte_end":385818,"line_start":18,"line_end":18,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":385823,"byte_end":385826,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ You can learn more about these from [*Cosmos SDK* docs].","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":385831,"byte_end":385891,"line_start":20,"line_end":20,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":385896,"byte_end":385899,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ [*Cosmos SDK* docs]: https://docs.cosmos.network/master/core/events.html","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":385904,"byte_end":385980,"line_start":22,"line_end":22,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2017},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":386124,"byte_end":386127,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<Event>::new","value":"pub fn new<impl Into<String>: Into<String>>(impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new event with the given type and an empty list of attributes.\n","sig":null,"attributes":[{"value":"/ Create a new event with the given type and an empty list of attributes.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":386037,"byte_end":386112,"line_start":27,"line_end":27,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2019},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":386319,"byte_end":386332,"line_start":36,"line_end":36,"column_start":12,"column_end":25},"name":"add_attribute","qualname":"<Event>::add_attribute","value":"pub fn add_attribute<impl Into<String>: Into<String>,\n                     impl Into<String>: Into<String>>(Self, impl Into<String>,\n                                                      impl Into<String>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Add an attribute to the event.\n","sig":null,"attributes":[{"value":"/ Add an attribute to the event.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":386273,"byte_end":386307,"line_start":35,"line_end":35,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2022},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":386736,"byte_end":386750,"line_start":48,"line_end":48,"column_start":12,"column_end":26},"name":"add_attributes","qualname":"<Event>::add_attributes","value":"pub fn add_attributes<A: Into<Attribute>,\n                      impl IntoIterator<Item = A>: IntoIterator<Item =\n                      A>>(Self, impl IntoIterator<Item = A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add attributes to the event.","sig":null,"attributes":[{"value":"/ Bulk add attributes to the event.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":386542,"byte_end":386579,"line_start":44,"line_end":44,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":386584,"byte_end":386587,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Anything that can be turned into an iterator and yields something","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":386592,"byte_end":386661,"line_start":46,"line_end":46,"column_start":5,"column_end":74}},{"value":"/ that can be converted into an `Attribute` is accepted.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":386666,"byte_end":386724,"line_start":47,"line_end":47,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":7516},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":387105,"byte_end":387114,"line_start":59,"line_end":59,"column_start":12,"column_end":21},"name":"Attribute","qualname":"::results::events::Attribute","value":"Attribute { key, value }","parent":null,"children":[{"krate":0,"index":7517},{"krate":0,"index":7518}],"decl_id":null,"docs":" An key value pair that is used in the context of event attributes in logs\n","sig":null,"attributes":[{"value":"/ An key value pair that is used in the context of event attributes in logs","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":386936,"byte_end":387013,"line_start":57,"line_end":57,"column_start":1,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":7517},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":387125,"byte_end":387128,"line_start":60,"line_end":60,"column_start":9,"column_end":12},"name":"key","qualname":"::results::events::Attribute::key","value":"std::string::String","parent":{"krate":0,"index":7516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7518},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":387146,"byte_end":387151,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"name":"value","qualname":"::results::events::Attribute::value","value":"std::string::String","parent":{"krate":0,"index":7516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2026},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":387259,"byte_end":387262,"line_start":66,"line_end":66,"column_start":12,"column_end":15},"name":"new","qualname":"<Attribute>::new","value":"pub fn new<impl Into<String>: Into<String>,\n           impl Into<String>: Into<String>>(impl Into<String>,\n                                            impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Attribute. `attr` is just an alias for this.\n","sig":null,"attributes":[{"value":"/ Creates a new Attribute. `attr` is just an alias for this.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":387185,"byte_end":387247,"line_start":65,"line_end":65,"column_start":5,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":2053},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":388821,"byte_end":388825,"line_start":128,"line_end":128,"column_start":8,"column_end":12},"name":"attr","qualname":"::results::events::attr","value":"pub fn attr<impl Into<String>: Into<String>,\n            impl Into<String>: Into<String>>(impl Into<String>,\n                                             impl Into<String>) -> Attribute","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Attribute. `Attribute::new` is an alias for this.\n","sig":null,"attributes":[{"value":"/ Creates a new Attribute. `Attribute::new` is an alias for this.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":388736,"byte_end":388803,"line_start":126,"line_end":126,"column_start":1,"column_end":68}},{"value":"inline","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":388804,"byte_end":388813,"line_start":127,"line_end":127,"column_start":1,"column_end":10}}]},{"kind":"Type","id":{"krate":0,"index":2060},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/query.rs","byte_start":389946,"byte_end":389959,"line_start":3,"line_end":3,"column_start":10,"column_end":23},"name":"QueryResponse","qualname":"::results::query::QueryResponse","value":"Binary","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7582},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":391698,"byte_end":391706,"line_start":64,"line_end":64,"column_start":12,"column_end":20},"name":"Response","qualname":"::results::response::Response","value":"Response { messages, attributes, events, data }","parent":null,"children":[{"krate":0,"index":7584},{"krate":0,"index":7585},{"krate":0,"index":7586},{"krate":0,"index":7587}],"decl_id":null,"docs":" A response of a contract entry point, such as `instantiate`, `execute` or `migrate`.","sig":null,"attributes":[{"value":"/ A response of a contract entry point, such as `instantiate`, `execute` or `migrate`.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390113,"byte_end":390201,"line_start":8,"line_end":8,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390202,"byte_end":390205,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type can be constructed directly at the end of the call. Alternatively a","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390206,"byte_end":390287,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/ mutable response instance can be created early in the contract's logic and","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390288,"byte_end":390366,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ incrementally be updated.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390367,"byte_end":390396,"line_start":12,"line_end":12,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390397,"byte_end":390400,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390401,"byte_end":390416,"line_start":14,"line_end":14,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390417,"byte_end":390420,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Direct:","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390421,"byte_end":390432,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390433,"byte_end":390436,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390437,"byte_end":390444,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{Binary, DepsMut, Env, MessageInfo};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390445,"byte_end":390505,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/ # type InstantiateMsg = ();","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390506,"byte_end":390537,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390538,"byte_end":390543,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ use cosmwasm_std::{attr, Response, StdResult};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390544,"byte_end":390594,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390595,"byte_end":390598,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ pub fn instantiate(","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390599,"byte_end":390622,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/     deps: DepsMut,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390623,"byte_end":390645,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/     _env: Env,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390646,"byte_end":390664,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/     _info: MessageInfo,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390665,"byte_end":390692,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/     msg: InstantiateMsg,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390693,"byte_end":390721,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/ ) -> StdResult<Response> {","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390722,"byte_end":390752,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     // ...","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390753,"byte_end":390767,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390768,"byte_end":390771,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     Ok(Response::new().add_attribute(\"action\", \"instantiate\"))","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390772,"byte_end":390838,"line_start":32,"line_end":32,"column_start":1,"column_end":67}},{"value":"/ }","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390839,"byte_end":390844,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390845,"byte_end":390852,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390853,"byte_end":390856,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Mutating:","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390857,"byte_end":390870,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390871,"byte_end":390874,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390875,"byte_end":390882,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{coins, BankMsg, Binary, DepsMut, Env, MessageInfo, SubMsg};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390883,"byte_end":390967,"line_start":39,"line_end":39,"column_start":1,"column_end":85}},{"value":"/ # type InstantiateMsg = ();","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":390968,"byte_end":390999,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/ # type MyError = ();","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":391000,"byte_end":391024,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/ #","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":391025,"byte_end":391030,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ use cosmwasm_std::Response;","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":391031,"byte_end":391062,"line_start":43,"line_end":43,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":391063,"byte_end":391066,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ pub fn instantiate(","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":391067,"byte_end":391090,"line_start":45,"line_end":45,"column_start":1,"column_end":24}},{"value":"/     deps: DepsMut,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":391091,"byte_end":391113,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/     _env: Env,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":391114,"byte_end":391132,"line_start":47,"line_end":47,"column_start":1,"column_end":19}},{"value":"/     info: MessageInfo,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":391133,"byte_end":391159,"line_start":48,"line_end":48,"column_start":1,"column_end":27}},{"value":"/     msg: InstantiateMsg,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":391160,"byte_end":391188,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"/ ) -> Result<Response, MyError> {","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":391189,"byte_end":391225,"line_start":50,"line_end":50,"column_start":1,"column_end":37}},{"value":"/     let mut response = Response::new()","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":391226,"byte_end":391268,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         .add_attribute(\"Let the\", \"hacking begin\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":391269,"byte_end":391323,"line_start":52,"line_end":52,"column_start":1,"column_end":55}},{"value":"/         .add_message(BankMsg::Send {","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":391324,"byte_end":391364,"line_start":53,"line_end":53,"column_start":1,"column_end":41}},{"value":"/             to_address: String::from(\"recipient\"),","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":391365,"byte_end":391419,"line_start":54,"line_end":54,"column_start":1,"column_end":55}},{"value":"/             amount: coins(128, \"uint\"),","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":391420,"byte_end":391463,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/         })","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":391464,"byte_end":391478,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/         .add_attribute(\"foo\", \"bar\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":391479,"byte_end":391519,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"/         .set_data(b\"the result data\");","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":391520,"byte_end":391562,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/     Ok(response)","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":391563,"byte_end":391583,"line_start":59,"line_end":59,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":391584,"byte_end":391589,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":391590,"byte_end":391597,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"non_exhaustive","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":391669,"byte_end":391686,"line_start":63,"line_end":63,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":7584},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":392119,"byte_end":392127,"line_start":70,"line_end":70,"column_start":9,"column_end":17},"name":"messages","qualname":"::results::response::Response::messages","value":"std::vec::Vec<results::submessages::SubMsg<T>>","parent":{"krate":0,"index":7582},"children":[],"decl_id":null,"docs":" Optional list of messages to pass. These will be executed in order.\n If the ReplyOn variant matches the result (Always, Success on Ok, Error on Err),\n the runtime will invoke this contract's `reply` entry point\n after execution. Otherwise, they act like \"fire and forget\".\n Use `SubMsg::new` to create messages with the older \"fire and forget\" semantics.\n","sig":null,"attributes":[{"value":"/ Optional list of messages to pass. These will be executed in order.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":391724,"byte_end":391795,"line_start":65,"line_end":65,"column_start":5,"column_end":76}},{"value":"/ If the ReplyOn variant matches the result (Always, Success on Ok, Error on Err),","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":391800,"byte_end":391884,"line_start":66,"line_end":66,"column_start":5,"column_end":89}},{"value":"/ the runtime will invoke this contract's `reply` entry point","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":391889,"byte_end":391952,"line_start":67,"line_end":67,"column_start":5,"column_end":68}},{"value":"/ after execution. Otherwise, they act like \"fire and forget\".","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":391957,"byte_end":392021,"line_start":68,"line_end":68,"column_start":5,"column_end":69}},{"value":"/ Use `SubMsg::new` to create messages with the older \"fire and forget\" semantics.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":392026,"byte_end":392110,"line_start":69,"line_end":69,"column_start":5,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":7585},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":392412,"byte_end":392422,"line_start":76,"line_end":76,"column_start":9,"column_end":19},"name":"attributes","qualname":"::results::response::Response::attributes","value":"std::vec::Vec<results::events::Attribute>","parent":{"krate":0,"index":7582},"children":[],"decl_id":null,"docs":" The attributes that will be emitted as part of a \"wasm\" event.","sig":null,"attributes":[{"value":"/ The attributes that will be emitted as part of a \"wasm\" event.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":392149,"byte_end":392215,"line_start":71,"line_end":71,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":392220,"byte_end":392223,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ More info about events (and their attributes) can be found in [*Cosmos SDK* docs].","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":392228,"byte_end":392314,"line_start":73,"line_end":73,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":392319,"byte_end":392322,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [*Cosmos SDK* docs]: https://docs.cosmos.network/master/core/events.html","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":392327,"byte_end":392403,"line_start":75,"line_end":75,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":7586},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":392732,"byte_end":392738,"line_start":83,"line_end":83,"column_start":9,"column_end":15},"name":"events","qualname":"::results::response::Response::events","value":"std::vec::Vec<results::events::Event>","parent":{"krate":0,"index":7582},"children":[],"decl_id":null,"docs":" Extra, custom events separate from the main `wasm` one. These will have\n `wasm-` prepended to the type.","sig":null,"attributes":[{"value":"/ Extra, custom events separate from the main `wasm` one. These will have","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":392444,"byte_end":392519,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ `wasm-` prepended to the type.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":392524,"byte_end":392558,"line_start":78,"line_end":78,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":392563,"byte_end":392566,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ More info about events can be found in [*Cosmos SDK* docs].","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":392571,"byte_end":392634,"line_start":80,"line_end":80,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":392639,"byte_end":392642,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [*Cosmos SDK* docs]: https://docs.cosmos.network/master/core/events.html","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":392647,"byte_end":392723,"line_start":82,"line_end":82,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":7587},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":392815,"byte_end":392819,"line_start":85,"line_end":85,"column_start":9,"column_end":13},"name":"data","qualname":"::results::response::Response::data","value":"std::option::Option<binary::Binary>","parent":{"krate":0,"index":7582},"children":[],"decl_id":null,"docs":" The binary payload to include in the response.\n","sig":null,"attributes":[{"value":"/ The binary payload to include in the response.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":392756,"byte_end":392806,"line_start":84,"line_end":84,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2096},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":393086,"byte_end":393089,"line_start":100,"line_end":100,"column_start":12,"column_end":15},"name":"new","qualname":"<Response<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2097},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":393204,"byte_end":393217,"line_start":105,"line_end":105,"column_start":12,"column_end":25},"name":"add_attribute","qualname":"<Response<T>>::add_attribute","value":"pub fn add_attribute<impl Into<String>: Into<String>,\n                     impl Into<String>: Into<String>>(Self, impl Into<String>,\n                                                      impl Into<String>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Add an attribute included in the main `wasm` event.\n","sig":null,"attributes":[{"value":"/ Add an attribute included in the main `wasm` event.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":393137,"byte_end":393192,"line_start":104,"line_end":104,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2100},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":393520,"byte_end":393531,"line_start":112,"line_end":112,"column_start":12,"column_end":23},"name":"add_message","qualname":"<Response<T>>::add_message","value":"pub fn add_message<impl Into<CosmosMsg<T>>: Into<CosmosMsg<T>>>(Self,\n                                                                impl Into<CosmosMsg<T>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" This creates a \"fire and forget\" message, by using `SubMsg::new()` to wrap it,\n and adds it to the list of messages to process.\n","sig":null,"attributes":[{"value":"/ This creates a \"fire and forget\" message, by using `SubMsg::new()` to wrap it,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":393370,"byte_end":393452,"line_start":110,"line_end":110,"column_start":5,"column_end":87}},{"value":"/ and adds it to the list of messages to process.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":393457,"byte_end":393508,"line_start":111,"line_end":111,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2102},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":393788,"byte_end":393802,"line_start":119,"line_end":119,"column_start":12,"column_end":26},"name":"add_submessage","qualname":"<Response<T>>::add_submessage","value":"pub fn add_submessage(Self, SubMsg<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" This takes an explicit SubMsg (creates via eg. `reply_on_error`)\n and adds it to the list of messages to process.\n","sig":null,"attributes":[{"value":"/ This takes an explicit SubMsg (creates via eg. `reply_on_error`)","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":393652,"byte_end":393720,"line_start":117,"line_end":117,"column_start":5,"column_end":73}},{"value":"/ and adds it to the list of messages to process.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":393725,"byte_end":393776,"line_start":118,"line_end":118,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2103},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":394122,"byte_end":394131,"line_start":129,"line_end":129,"column_start":12,"column_end":21},"name":"add_event","qualname":"<Response<T>>::add_event","value":"pub fn add_event(Self, Event) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds an extra event to the response, separate from the main `wasm` event\n that is always created.","sig":null,"attributes":[{"value":"/ Adds an extra event to the response, separate from the main `wasm` event","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":393896,"byte_end":393972,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/ that is always created.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":393977,"byte_end":394004,"line_start":125,"line_end":125,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":394009,"byte_end":394012,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ The `wasm-` prefix will be appended by the runtime to the provided type","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":394017,"byte_end":394092,"line_start":127,"line_end":127,"column_start":5,"column_end":80}},{"value":"/ of event.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":394097,"byte_end":394110,"line_start":128,"line_end":128,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2104},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":394809,"byte_end":394823,"line_start":152,"line_end":152,"column_start":12,"column_end":26},"name":"add_attributes","qualname":"<Response<T>>::add_attributes","value":"pub fn add_attributes<A: Into<Attribute>,\n                      impl IntoIterator<Item = A>: IntoIterator<Item =\n                      A>>(Self, impl IntoIterator<Item = A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add attributes included in the main `wasm` event.","sig":null,"attributes":[{"value":"/ Bulk add attributes included in the main `wasm` event.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":394223,"byte_end":394281,"line_start":134,"line_end":134,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":394286,"byte_end":394289,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Anything that can be turned into an iterator and yields something","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":394294,"byte_end":394363,"line_start":136,"line_end":136,"column_start":5,"column_end":74}},{"value":"/ that can be converted into an `Attribute` is accepted.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":394368,"byte_end":394426,"line_start":137,"line_end":137,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":394431,"byte_end":394434,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":394439,"byte_end":394454,"line_start":139,"line_end":139,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":394459,"byte_end":394462,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":394467,"byte_end":394474,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::{attr, Response};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":394479,"byte_end":394518,"line_start":142,"line_end":142,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":394523,"byte_end":394526,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ let attrs = vec![","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":394531,"byte_end":394552,"line_start":144,"line_end":144,"column_start":5,"column_end":26}},{"value":"/     (\"action\", \"reaction\"),","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":394557,"byte_end":394588,"line_start":145,"line_end":145,"column_start":5,"column_end":36}},{"value":"/     (\"answer\", \"42\"),","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":394593,"byte_end":394618,"line_start":146,"line_end":146,"column_start":5,"column_end":30}},{"value":"/     (\"another\", \"attribute\"),","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":394623,"byte_end":394656,"line_start":147,"line_end":147,"column_start":5,"column_end":38}},{"value":"/ ];","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":394661,"byte_end":394667,"line_start":148,"line_end":148,"column_start":5,"column_end":11}},{"value":"/ let res: Response = Response::new().add_attributes(attrs.clone());","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":394672,"byte_end":394742,"line_start":149,"line_end":149,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(res.attributes, attrs);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":394747,"byte_end":394785,"line_start":150,"line_end":150,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":394790,"byte_end":394797,"line_start":151,"line_end":151,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2107},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":395343,"byte_end":395355,"line_start":171,"line_end":171,"column_start":12,"column_end":24},"name":"add_messages","qualname":"<Response<T>>::add_messages","value":"pub fn add_messages<M: Into<CosmosMsg<T>>,\n                    impl IntoIterator<Item = M>: IntoIterator<Item =\n                    M>>(Self, impl IntoIterator<Item = M>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add \"fire and forget\" messages to the list of messages to process.","sig":null,"attributes":[{"value":"/ Bulk add \"fire and forget\" messages to the list of messages to process.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":395011,"byte_end":395086,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":395091,"byte_end":395094,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":395099,"byte_end":395114,"line_start":162,"line_end":162,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":395119,"byte_end":395122,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":395127,"byte_end":395134,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::{CosmosMsg, Response};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":395139,"byte_end":395183,"line_start":165,"line_end":165,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":395188,"byte_end":395191,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ fn make_response_with_msgs(msgs: Vec<CosmosMsg>) -> Response {","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":395196,"byte_end":395262,"line_start":167,"line_end":167,"column_start":5,"column_end":71}},{"value":"/     Response::new().add_messages(msgs)","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":395267,"byte_end":395309,"line_start":168,"line_end":168,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":395314,"byte_end":395319,"line_start":169,"line_end":169,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":395324,"byte_end":395331,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2110},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":395834,"byte_end":395849,"line_start":186,"line_end":186,"column_start":12,"column_end":27},"name":"add_submessages","qualname":"<Response<T>>::add_submessages","value":"pub fn add_submessages<impl IntoIterator<Item = SubMsg<T>>: IntoIterator<Item\n                       =\n                       SubMsg<T>>>(Self, impl IntoIterator<Item = SubMsg<T>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add explicit SubMsg structs to the list of messages to process.","sig":null,"attributes":[{"value":"/ Bulk add explicit SubMsg structs to the list of messages to process.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":395505,"byte_end":395577,"line_start":175,"line_end":175,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":395582,"byte_end":395585,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":395590,"byte_end":395605,"line_start":177,"line_end":177,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":395610,"byte_end":395613,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":395618,"byte_end":395625,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ use cosmwasm_std::{SubMsg, Response};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":395630,"byte_end":395671,"line_start":180,"line_end":180,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":395676,"byte_end":395679,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ fn make_response_with_submsgs(msgs: Vec<SubMsg>) -> Response {","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":395684,"byte_end":395750,"line_start":182,"line_end":182,"column_start":5,"column_end":71}},{"value":"/     Response::new().add_submessages(msgs)","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":395755,"byte_end":395800,"line_start":183,"line_end":183,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":395805,"byte_end":395810,"line_start":184,"line_end":184,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":395815,"byte_end":395822,"line_start":185,"line_end":185,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":396203,"byte_end":396213,"line_start":196,"line_end":196,"column_start":12,"column_end":22},"name":"add_events","qualname":"<Response<T>>::add_events","value":"pub fn add_events<impl IntoIterator<Item = Event>: IntoIterator<Item =\n                  Event>>(Self, impl IntoIterator<Item = Event>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Bulk add custom events to the response. These are separate from the main\n `wasm` event.","sig":null,"attributes":[{"value":"/ Bulk add custom events to the response. These are separate from the main","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":395985,"byte_end":396061,"line_start":191,"line_end":191,"column_start":5,"column_end":81}},{"value":"/ `wasm` event.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":396066,"byte_end":396083,"line_start":192,"line_end":192,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":396088,"byte_end":396091,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ The `wasm-` prefix will be appended by the runtime to the provided types","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":396096,"byte_end":396172,"line_start":194,"line_end":194,"column_start":5,"column_end":81}},{"value":"/ of events.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":396177,"byte_end":396191,"line_start":195,"line_end":195,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":396408,"byte_end":396416,"line_start":202,"line_end":202,"column_start":12,"column_end":20},"name":"set_data","qualname":"<Response<T>>::set_data","value":"pub fn set_data<impl Into<Binary>: Into<Binary>>(Self, impl Into<Binary>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the binary data included in the response.\n","sig":null,"attributes":[{"value":"/ Set the binary data included in the response.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":396347,"byte_end":396396,"line_start":201,"line_end":201,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7723},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":399048,"byte_end":399054,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"Always","qualname":"::results::submessages::ReplyOn::Always","value":"ReplyOn::Always","parent":{"krate":0,"index":7722},"children":[],"decl_id":null,"docs":" Always perform a callback after SubMsg is processed\n","sig":null,"attributes":[{"value":"/ Always perform a callback after SubMsg is processed","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":398988,"byte_end":399043,"line_start":14,"line_end":14,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7725},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":399139,"byte_end":399144,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Error","qualname":"::results::submessages::ReplyOn::Error","value":"ReplyOn::Error","parent":{"krate":0,"index":7722},"children":[],"decl_id":null,"docs":" Only callback if SubMsg returned an error, no callback on success case\n","sig":null,"attributes":[{"value":"/ Only callback if SubMsg returned an error, no callback on success case","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":399060,"byte_end":399134,"line_start":16,"line_end":16,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7727},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":399224,"byte_end":399231,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Success","qualname":"::results::submessages::ReplyOn::Success","value":"ReplyOn::Success","parent":{"krate":0,"index":7722},"children":[],"decl_id":null,"docs":" Only callback if SubMsg was successful, no callback on error case\n","sig":null,"attributes":[{"value":"/ Only callback if SubMsg was successful, no callback on error case","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":399150,"byte_end":399219,"line_start":18,"line_end":18,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7729},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":399315,"byte_end":399320,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"name":"Never","qualname":"::results::submessages::ReplyOn::Never","value":"ReplyOn::Never","parent":{"krate":0,"index":7722},"children":[],"decl_id":null,"docs":" Never make a callback - this is like the original CosmosMsg semantics\n","sig":null,"attributes":[{"value":"/ Never make a callback - this is like the original CosmosMsg semantics","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":399237,"byte_end":399310,"line_start":20,"line_end":20,"column_start":5,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":7722},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":398974,"byte_end":398981,"line_start":13,"line_end":13,"column_start":10,"column_end":17},"name":"ReplyOn","qualname":"::results::submessages::ReplyOn","value":"pub enum ReplyOn { Always, Error, Success, Never, }","parent":null,"children":[{"krate":0,"index":7723},{"krate":0,"index":7725},{"krate":0,"index":7727},{"krate":0,"index":7729}],"decl_id":null,"docs":" Use this to define when the contract gets a response callback.\n If you only need it for errors or success you can select just those in order\n to save gas.\n","sig":null,"attributes":[{"value":"/ Use this to define when the contract gets a response callback.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":398693,"byte_end":398759,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/ If you only need it for errors or success you can select just those in order","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":398760,"byte_end":398840,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ to save gas.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":398841,"byte_end":398857,"line_start":10,"line_end":10,"column_start":1,"column_end":17}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":398929,"byte_end":398964,"line_start":12,"line_end":12,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7731},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":399840,"byte_end":399846,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"SubMsg","qualname":"::results::submessages::SubMsg","value":"SubMsg { id, msg, gas_limit, reply_on }","parent":null,"children":[{"krate":0,"index":7733},{"krate":0,"index":7734},{"krate":0,"index":7735},{"krate":0,"index":7736}],"decl_id":null,"docs":" A submessage that will guarantee a `reply` call on success or error, depending on\n the `reply_on` setting. If you do not need to process the result, use regular messages instead.","sig":null,"attributes":[{"value":"/ A submessage that will guarantee a `reply` call on success or error, depending on","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":399325,"byte_end":399410,"line_start":24,"line_end":24,"column_start":1,"column_end":86}},{"value":"/ the `reply_on` setting. If you do not need to process the result, use regular messages instead.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":399411,"byte_end":399510,"line_start":25,"line_end":25,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":399511,"byte_end":399514,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Note: On error the submessage execution will revert any partial state changes due to this message,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":399515,"byte_end":399617,"line_start":27,"line_end":27,"column_start":1,"column_end":103}},{"value":"/ but not revert any state changes in the calling contract. If this is required, it must be done","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":399618,"byte_end":399716,"line_start":28,"line_end":28,"column_start":1,"column_end":99}},{"value":"/ manually in the `reply` entry point.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":399717,"byte_end":399757,"line_start":29,"line_end":29,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":7733},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":400011,"byte_end":400013,"line_start":34,"line_end":34,"column_start":9,"column_end":11},"name":"id","qualname":"::results::submessages::SubMsg::id","value":"u64","parent":{"krate":0,"index":7731},"children":[],"decl_id":null,"docs":" An arbitrary ID chosen by the contract.\n This is typically used to match `Reply`s in the `reply` entry point to the submessage.\n","sig":null,"attributes":[{"value":"/ An arbitrary ID chosen by the contract.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":399864,"byte_end":399907,"line_start":32,"line_end":32,"column_start":5,"column_end":48}},{"value":"/ This is typically used to match `Reply`s in the `reply` entry point to the submessage.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":399912,"byte_end":400002,"line_start":33,"line_end":33,"column_start":5,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":7734},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":400028,"byte_end":400031,"line_start":35,"line_end":35,"column_start":9,"column_end":12},"name":"msg","qualname":"::results::submessages::SubMsg::msg","value":"results::cosmos_msg::CosmosMsg<T>","parent":{"krate":0,"index":7731},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7735},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":400055,"byte_end":400064,"line_start":36,"line_end":36,"column_start":9,"column_end":18},"name":"gas_limit","qualname":"::results::submessages::SubMsg::gas_limit","value":"std::option::Option<u64>","parent":{"krate":0,"index":7731},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7736},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":400087,"byte_end":400095,"line_start":37,"line_end":37,"column_start":9,"column_end":17},"name":"reply_on","qualname":"::results::submessages::SubMsg::reply_on","value":"results::submessages::ReplyOn","parent":{"krate":0,"index":7731},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2143},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":400331,"byte_end":400334,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<SubMsg<T>>::new","value":"pub fn new<impl Into<CosmosMsg<T>>: Into<CosmosMsg<T>>>(impl Into<CosmosMsg<T>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" new creates a \"fire and forget\" message with the pre-0.14 semantics\n","sig":null,"attributes":[{"value":"/ new creates a \"fire and forget\" message with the pre-0.14 semantics","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":400248,"byte_end":400319,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2145},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":400647,"byte_end":400663,"line_start":55,"line_end":55,"column_start":12,"column_end":28},"name":"reply_on_success","qualname":"<SubMsg<T>>::reply_on_success","value":"pub fn reply_on_success<impl Into<CosmosMsg<T>>: Into<CosmosMsg<T>>>(impl Into<CosmosMsg<T>>,\n                                                                     u64)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" create a `SubMsg` that will provide a `reply` with the given id if the message returns `Ok`\n","sig":null,"attributes":[{"value":"/ create a `SubMsg` that will provide a `reply` with the given id if the message returns `Ok`","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":400540,"byte_end":400635,"line_start":54,"line_end":54,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":2147},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":400889,"byte_end":400903,"line_start":60,"line_end":60,"column_start":12,"column_end":26},"name":"reply_on_error","qualname":"<SubMsg<T>>::reply_on_error","value":"pub fn reply_on_error<impl Into<CosmosMsg<T>>: Into<CosmosMsg<T>>>(impl Into<CosmosMsg<T>>,\n                                                                   u64)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" create a `SubMsg` that will provide a `reply` with the given id if the message returns `Err`\n","sig":null,"attributes":[{"value":"/ create a `SubMsg` that will provide a `reply` with the given id if the message returns `Err`","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":400781,"byte_end":400877,"line_start":59,"line_end":59,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":2149},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":401105,"byte_end":401117,"line_start":65,"line_end":65,"column_start":12,"column_end":24},"name":"reply_always","qualname":"<SubMsg<T>>::reply_always","value":"pub fn reply_always<impl Into<CosmosMsg<T>>: Into<CosmosMsg<T>>>(impl Into<CosmosMsg<T>>,\n                                                                 u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" create a `SubMsg` that will always provide a `reply` with the given id\n","sig":null,"attributes":[{"value":"/ create a `SubMsg` that will always provide a `reply` with the given id","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":401019,"byte_end":401093,"line_start":64,"line_end":64,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2151},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":401737,"byte_end":401751,"line_start":81,"line_end":81,"column_start":12,"column_end":26},"name":"with_gas_limit","qualname":"<SubMsg<T>>::with_gas_limit","value":"pub fn with_gas_limit(Self, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a gas limit to the message.","sig":null,"attributes":[{"value":"/ Add a gas limit to the message.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":401234,"byte_end":401269,"line_start":69,"line_end":69,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":401274,"byte_end":401277,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":401282,"byte_end":401297,"line_start":71,"line_end":71,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":401302,"byte_end":401305,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":401310,"byte_end":401317,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{coins, BankMsg, ReplyOn, SubMsg};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":401322,"byte_end":401380,"line_start":74,"line_end":74,"column_start":5,"column_end":63}},{"value":"/ # let msg = BankMsg::Send { to_address: String::from(\"you\"), amount: coins(1015, \"earth\") };","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":401385,"byte_end":401481,"line_start":75,"line_end":75,"column_start":5,"column_end":101}},{"value":"/ let sub_msg: SubMsg = SubMsg::reply_always(msg, 1234).with_gas_limit(60_000);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":401486,"byte_end":401567,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(sub_msg.id, 1234);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":401572,"byte_end":401605,"line_start":77,"line_end":77,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(sub_msg.gas_limit, Some(60_000));","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":401610,"byte_end":401658,"line_start":78,"line_end":78,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(sub_msg.reply_on, ReplyOn::Always);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":401663,"byte_end":401713,"line_start":79,"line_end":79,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":401718,"byte_end":401725,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7811},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":402266,"byte_end":402271,"line_start":99,"line_end":99,"column_start":12,"column_end":17},"name":"Reply","qualname":"::results::submessages::Reply","value":"Reply { id, result }","parent":null,"children":[{"krate":0,"index":7812},{"krate":0,"index":7813}],"decl_id":null,"docs":" The result object returned to `reply`. We always get the ID from the submessage\n back and then must handle success and error cases ourselves.\n","sig":null,"attributes":[{"value":"/ The result object returned to `reply`. We always get the ID from the submessage","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":402035,"byte_end":402118,"line_start":96,"line_end":96,"column_start":1,"column_end":84}},{"value":"/ back and then must handle success and error cases ourselves.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":402119,"byte_end":402183,"line_start":97,"line_end":97,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":7812},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":402416,"byte_end":402418,"line_start":102,"line_end":102,"column_start":9,"column_end":11},"name":"id","qualname":"::results::submessages::Reply::id","value":"u64","parent":{"krate":0,"index":7811},"children":[],"decl_id":null,"docs":" The ID that the contract set when emitting the `SubMsg`.\n Use this to identify which submessage triggered the `reply`.\n","sig":null,"attributes":[{"value":"/ The ID that the contract set when emitting the `SubMsg`.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":402278,"byte_end":402338,"line_start":100,"line_end":100,"column_start":5,"column_end":65}},{"value":"/ Use this to identify which submessage triggered the `reply`.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":402343,"byte_end":402407,"line_start":101,"line_end":101,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":7813},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":402433,"byte_end":402439,"line_start":103,"line_end":103,"column_start":9,"column_end":15},"name":"result","qualname":"::results::submessages::Reply::result","value":"results::submessages::SubMsgResult","parent":{"krate":0,"index":7811},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7933},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":403998,"byte_end":404000,"line_start":141,"line_end":141,"column_start":5,"column_end":7},"name":"Ok","qualname":"::results::submessages::SubMsgResult::Ok","value":"SubMsgResult::Ok(SubMsgExecutionResponse)","parent":{"krate":0,"index":7932},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7936},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":404240,"byte_end":404243,"line_start":145,"line_end":145,"column_start":5,"column_end":8},"name":"Err","qualname":"::results::submessages::SubMsgResult::Err","value":"SubMsgResult::Err(String)","parent":{"krate":0,"index":7932},"children":[],"decl_id":null,"docs":" An error type that every custom error created by contract developers can be converted to.\n This could potientially have more structure, but String is the easiest.\n","sig":null,"attributes":[{"value":"/ An error type that every custom error created by contract developers can be converted to.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":404031,"byte_end":404124,"line_start":142,"line_end":142,"column_start":5,"column_end":98}},{"value":"/ This could potientially have more structure, but String is the easiest.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":404129,"byte_end":404204,"line_start":143,"line_end":143,"column_start":5,"column_end":80}},{"value":"serde(rename = \"error\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":404209,"byte_end":404235,"line_start":144,"line_end":144,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":7932},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":403979,"byte_end":403991,"line_start":140,"line_end":140,"column_start":10,"column_end":22},"name":"SubMsgResult","qualname":"::results::submessages::SubMsgResult","value":"pub enum SubMsgResult { Ok(SubMsgExecutionResponse), Err(String), }","parent":null,"children":[{"krate":0,"index":7933},{"krate":0,"index":7936}],"decl_id":null,"docs":" This is the result type that is returned from a sub message execution.","sig":null,"attributes":[{"value":"/ This is the result type that is returned from a sub message execution.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":402458,"byte_end":402532,"line_start":106,"line_end":106,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":402533,"byte_end":402536,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ We use a custom type here instead of Rust's Result because we want to be able to","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":402537,"byte_end":402621,"line_start":108,"line_end":108,"column_start":1,"column_end":85}},{"value":"/ define the serialization, which is a public interface. Every language that compiles","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":402622,"byte_end":402709,"line_start":109,"line_end":109,"column_start":1,"column_end":88}},{"value":"/ to Wasm and runs in the ComsWasm VM needs to create the same JSON representation.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":402710,"byte_end":402795,"line_start":110,"line_end":110,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":402796,"byte_end":402799,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ Until version 1.0.0-beta5, `ContractResult<SubMsgExecutionResponse>` was used instead","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":402800,"byte_end":402889,"line_start":112,"line_end":112,"column_start":1,"column_end":90}},{"value":"/ of this type. Once serialized, the two types are the same. However, in the Rust type","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":402890,"byte_end":402978,"line_start":113,"line_end":113,"column_start":1,"column_end":89}},{"value":"/ system we want different types for clarity and documenation reasons.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":402979,"byte_end":403051,"line_start":114,"line_end":114,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":403052,"byte_end":403055,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":403056,"byte_end":403070,"line_start":116,"line_end":116,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":403071,"byte_end":403074,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ Success:","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":403075,"byte_end":403087,"line_start":118,"line_end":118,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":403088,"byte_end":403091,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":403092,"byte_end":403099,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{to_vec, Binary, Event, SubMsgExecutionResponse, SubMsgResult};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":403100,"byte_end":403187,"line_start":121,"line_end":121,"column_start":1,"column_end":88}},{"value":"/ let response = SubMsgExecutionResponse {","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":403188,"byte_end":403232,"line_start":122,"line_end":122,"column_start":1,"column_end":45}},{"value":"/     data: Some(Binary::from_base64(\"MTIzCg==\").unwrap()),","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":403233,"byte_end":403294,"line_start":123,"line_end":123,"column_start":1,"column_end":62}},{"value":"/     events: vec![Event::new(\"wasm\").add_attribute(\"fo\", \"ba\")],","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":403295,"byte_end":403362,"line_start":124,"line_end":124,"column_start":1,"column_end":68}},{"value":"/ };","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":403363,"byte_end":403369,"line_start":125,"line_end":125,"column_start":1,"column_end":7}},{"value":"/ let result: SubMsgResult = SubMsgResult::Ok(response);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":403370,"byte_end":403428,"line_start":126,"line_end":126,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(to_vec(&result).unwrap(), br#\"{\"ok\":{\"events\":[{\"type\":\"wasm\",\"attributes\":[{\"key\":\"fo\",\"value\":\"ba\"}]}],\"data\":\"MTIzCg==\"}}\"#);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":403429,"byte_end":403572,"line_start":127,"line_end":127,"column_start":1,"column_end":144}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":403573,"byte_end":403580,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":403581,"byte_end":403584,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Failure:","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":403585,"byte_end":403597,"line_start":130,"line_end":130,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":403598,"byte_end":403601,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":403602,"byte_end":403609,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{to_vec, SubMsgResult, Response};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":403610,"byte_end":403667,"line_start":133,"line_end":133,"column_start":1,"column_end":58}},{"value":"/ let error_msg = String::from(\"Something went wrong\");","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":403668,"byte_end":403725,"line_start":134,"line_end":134,"column_start":1,"column_end":58}},{"value":"/ let result = SubMsgResult::Err(error_msg);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":403726,"byte_end":403772,"line_start":135,"line_end":135,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(to_vec(&result).unwrap(), br#\"{\"error\":\"Something went wrong\"}\"#);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":403773,"byte_end":403854,"line_start":136,"line_end":136,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":403855,"byte_end":403862,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":403934,"byte_end":403969,"line_start":139,"line_end":139,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2154},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":404535,"byte_end":404546,"line_start":153,"line_end":153,"column_start":12,"column_end":23},"name":"into_result","qualname":"<SubMsgResult>::into_result","value":"pub fn into_result(Self) -> Result<SubMsgExecutionResponse, String>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `SubMsgResult<S>` to a `Result<S, String>` as a convenient way\n to access the full Result API.\n","sig":null,"attributes":[{"value":"/ Converts a `SubMsgResult<S>` to a `Result<S, String>` as a convenient way","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":404407,"byte_end":404484,"line_start":151,"line_end":151,"column_start":5,"column_end":82}},{"value":"/ to access the full Result API.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":404489,"byte_end":404523,"line_start":152,"line_end":152,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2155},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":404678,"byte_end":404684,"line_start":157,"line_end":157,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<SubMsgResult>::unwrap","value":"pub fn unwrap(Self) -> SubMsgExecutionResponse","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2156},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":404774,"byte_end":404784,"line_start":161,"line_end":161,"column_start":12,"column_end":22},"name":"unwrap_err","qualname":"<SubMsgResult>::unwrap_err","value":"pub fn unwrap_err(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2157},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":404861,"byte_end":404866,"line_start":165,"line_end":165,"column_start":12,"column_end":17},"name":"is_ok","qualname":"<SubMsgResult>::is_ok","value":"pub fn is_ok(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2158},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":404946,"byte_end":404952,"line_start":169,"line_end":169,"column_start":12,"column_end":18},"name":"is_err","qualname":"<SubMsgResult>::is_err","value":"pub fn is_err(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7939},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":405813,"byte_end":405836,"line_start":195,"line_end":195,"column_start":12,"column_end":35},"name":"SubMsgExecutionResponse","qualname":"::results::submessages::SubMsgExecutionResponse","value":"SubMsgExecutionResponse { events, data }","parent":null,"children":[{"krate":0,"index":7940},{"krate":0,"index":7941}],"decl_id":null,"docs":" The information we get back from a successful sub message execution,\n with full Cosmos SDK events.\n","sig":null,"attributes":[{"value":"/ The information we get back from a successful sub message execution,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":405625,"byte_end":405697,"line_start":192,"line_end":192,"column_start":1,"column_end":73}},{"value":"/ with full Cosmos SDK events.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":405698,"byte_end":405730,"line_start":193,"line_end":193,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7940},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":405847,"byte_end":405853,"line_start":196,"line_end":196,"column_start":9,"column_end":15},"name":"events","qualname":"::results::submessages::SubMsgExecutionResponse::events","value":"std::vec::Vec<results::events::Event>","parent":{"krate":0,"index":7939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7941},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":405875,"byte_end":405879,"line_start":197,"line_end":197,"column_start":9,"column_end":13},"name":"data","qualname":"::results::submessages::SubMsgExecutionResponse::data","value":"std::option::Option<binary::Binary>","parent":{"krate":0,"index":7939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8071},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":411960,"byte_end":411962,"line_start":35,"line_end":35,"column_start":5,"column_end":7},"name":"Ok","qualname":"::results::system_result::SystemResult::Ok","value":"SystemResult::Ok(S)","parent":{"krate":0,"index":8069},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8074},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":412002,"byte_end":412005,"line_start":37,"line_end":37,"column_start":5,"column_end":8},"name":"Err","qualname":"::results::system_result::SystemResult::Err","value":"SystemResult::Err(SystemError)","parent":{"krate":0,"index":8069},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"error\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":411971,"byte_end":411997,"line_start":36,"line_end":36,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":8069},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":411938,"byte_end":411950,"line_start":34,"line_end":34,"column_start":10,"column_end":22},"name":"SystemResult","qualname":"::results::system_result::SystemResult","value":"pub enum SystemResult<S> { Ok(S), Err(SystemError), }","parent":null,"children":[{"krate":0,"index":8071},{"krate":0,"index":8074}],"decl_id":null,"docs":" This is the outer result type returned by a querier to the contract.","sig":null,"attributes":[{"value":"/ This is the outer result type returned by a querier to the contract.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":410867,"byte_end":410939,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":410940,"byte_end":410943,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ We use a custom type here instead of Rust's Result because we want to be able to","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":410944,"byte_end":411028,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"/ define the serialization, which is a public interface. Every language that compiles","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":411029,"byte_end":411116,"line_start":10,"line_end":10,"column_start":1,"column_end":88}},{"value":"/ to Wasm and runs in the ComsWasm VM needs to create the same JSON representation.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":411117,"byte_end":411202,"line_start":11,"line_end":11,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":411203,"byte_end":411206,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":411207,"byte_end":411221,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":411222,"byte_end":411225,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Success:","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":411226,"byte_end":411238,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":411239,"byte_end":411242,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":411243,"byte_end":411250,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{to_vec, Binary, ContractResult, SystemResult};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":411251,"byte_end":411322,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ let data = Binary::from(b\"hello, world\");","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":411323,"byte_end":411368,"line_start":19,"line_end":19,"column_start":1,"column_end":46}},{"value":"/ let result = SystemResult::Ok(ContractResult::Ok(data));","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":411369,"byte_end":411429,"line_start":20,"line_end":20,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(to_vec(&result).unwrap(), br#\"{\"ok\":{\"ok\":\"aGVsbG8sIHdvcmxk\"}}\"#);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":411430,"byte_end":411511,"line_start":21,"line_end":21,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":411512,"byte_end":411519,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":411520,"byte_end":411523,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Failure:","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":411524,"byte_end":411536,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":411537,"byte_end":411540,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":411541,"byte_end":411548,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::{to_vec, Binary, ContractResult, SystemResult, SystemError};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":411549,"byte_end":411633,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/ let error = SystemError::Unknown {};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":411634,"byte_end":411674,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"/ let result: SystemResult<Binary> = SystemResult::Err(error);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":411675,"byte_end":411739,"line_start":29,"line_end":29,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(to_vec(&result).unwrap(), br#\"{\"error\":{\"unknown\":{}}}\"#);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":411740,"byte_end":411813,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":411814,"byte_end":411821,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"serde(rename_all = \"snake_case\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":411893,"byte_end":411928,"line_start":33,"line_end":33,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2183},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":412315,"byte_end":412326,"line_start":45,"line_end":45,"column_start":12,"column_end":23},"name":"into_result","qualname":"<SystemResult<S>>::into_result","value":"pub fn into_result(Self) -> Result<S, SystemError>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `ContractResult<S>` to a `Result<S, SystemError>` as a convenient way\n to access the full Result API.\n","sig":null,"attributes":[{"value":"/ Converts a `ContractResult<S>` to a `Result<S, SystemError>` as a convenient way","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":412180,"byte_end":412264,"line_start":43,"line_end":43,"column_start":5,"column_end":89}},{"value":"/ to access the full Result API.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":412269,"byte_end":412303,"line_start":44,"line_end":44,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2184},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":412424,"byte_end":412430,"line_start":49,"line_end":49,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<SystemResult<S>>::unwrap","value":"pub fn unwrap(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2187},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":412538,"byte_end":412548,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"unwrap_err","qualname":"<SystemResult<S>>::unwrap_err","value":"pub fn unwrap_err(Self) -> SystemError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2290},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/serde.rs","byte_start":421361,"byte_end":421371,"line_start":11,"line_end":11,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::serde::from_slice","value":"pub fn from_slice<T: DeserializeOwned>(&[u8]) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2293},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/serde.rs","byte_start":421528,"byte_end":421539,"line_start":15,"line_end":15,"column_start":8,"column_end":19},"name":"from_binary","qualname":"::serde::from_binary","value":"pub fn from_binary<T: DeserializeOwned>(&Binary) -> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2295},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/serde.rs","byte_start":421638,"byte_end":421644,"line_start":19,"line_end":19,"column_start":8,"column_end":14},"name":"to_vec","qualname":"::serde::to_vec","value":"pub fn to_vec<T>(&T) -> StdResult<Vec<u8>> where T: Serialize + ?Sized","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2298},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/serde.rs","byte_start":421817,"byte_end":421826,"line_start":26,"line_end":26,"column_start":8,"column_end":17},"name":"to_binary","qualname":"::serde::to_binary","value":"pub fn to_binary<T>(&T) -> StdResult<Binary> where T: Serialize + ?Sized","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8077},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/storage.rs","byte_start":424840,"byte_end":424853,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"MemoryStorage","qualname":"::storage::MemoryStorage","value":"MemoryStorage {  }","parent":null,"children":[{"krate":0,"index":8078}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2328},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/storage.rs","byte_start":424929,"byte_end":424932,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"new","qualname":"<MemoryStorage>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8081},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":436131,"byte_end":436140,"line_start":28,"line_end":28,"column_start":12,"column_end":21},"name":"Timestamp","qualname":"::timestamp::Timestamp","value":"","parent":null,"children":[],"decl_id":null,"docs":" A point in time in nanosecond precision.","sig":null,"attributes":[{"value":"/ A point in time in nanosecond precision.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":435477,"byte_end":435521,"line_start":7,"line_end":7,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":435522,"byte_end":435525,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This type can represent times from 1970-01-01T00:00:00Z to 2554-07-21T23:34:33Z.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":435526,"byte_end":435610,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":435611,"byte_end":435614,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":435615,"byte_end":435630,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":435631,"byte_end":435634,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":435635,"byte_end":435642,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ # use cosmwasm_std::Timestamp;","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":435643,"byte_end":435677,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"/ let ts = Timestamp::from_nanos(1_000_000_202);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":435678,"byte_end":435728,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(ts.nanos(), 1_000_000_202);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":435729,"byte_end":435771,"line_start":16,"line_end":16,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(ts.seconds(), 1);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":435772,"byte_end":435804,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(ts.subsec_nanos(), 202);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":435805,"byte_end":435844,"line_start":18,"line_end":18,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":435845,"byte_end":435848,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ let ts = ts.plus_seconds(2);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":435849,"byte_end":435881,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(ts.nanos(), 3_000_000_202);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":435882,"byte_end":435924,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(ts.seconds(), 3);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":435925,"byte_end":435957,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(ts.subsec_nanos(), 202);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":435958,"byte_end":435997,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":435998,"byte_end":436005,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2362},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":436242,"byte_end":436252,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"name":"from_nanos","qualname":"<Timestamp>::from_nanos","value":"pub const fn from_nanos(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a timestamp from nanoseconds since epoch\n","sig":null,"attributes":[{"value":"/ Creates a timestamp from nanoseconds since epoch","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":436172,"byte_end":436224,"line_start":31,"line_end":31,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2363},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":436414,"byte_end":436426,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"name":"from_seconds","qualname":"<Timestamp>::from_seconds","value":"pub const fn from_seconds(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a timestamp from seconds since epoch\n","sig":null,"attributes":[{"value":"/ Creates a timestamp from seconds since epoch","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":436348,"byte_end":436396,"line_start":36,"line_end":36,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2364},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":436555,"byte_end":436567,"line_start":41,"line_end":41,"column_start":18,"column_end":30},"name":"plus_seconds","qualname":"<Timestamp>::plus_seconds","value":"pub const fn plus_seconds(&Self, u64) -> Timestamp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2365},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":436679,"byte_end":436689,"line_start":45,"line_end":45,"column_start":18,"column_end":28},"name":"plus_nanos","qualname":"<Timestamp>::plus_nanos","value":"pub const fn plus_nanos(&Self, u64) -> Timestamp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2366},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":436834,"byte_end":436847,"line_start":50,"line_end":50,"column_start":18,"column_end":31},"name":"minus_seconds","qualname":"<Timestamp>::minus_seconds","value":"pub const fn minus_seconds(&Self, u64) -> Timestamp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2367},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":436964,"byte_end":436975,"line_start":54,"line_end":54,"column_start":18,"column_end":29},"name":"minus_nanos","qualname":"<Timestamp>::minus_nanos","value":"pub const fn minus_nanos(&Self, u64) -> Timestamp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2368},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":437172,"byte_end":437177,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"name":"nanos","qualname":"<Timestamp>::nanos","value":"pub fn nanos(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns nanoseconds since epoch\n","sig":null,"attributes":[{"value":"/ Returns nanoseconds since epoch","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":437111,"byte_end":437146,"line_start":59,"line_end":59,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":437151,"byte_end":437160,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2369},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":437306,"byte_end":437313,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"seconds","qualname":"<Timestamp>::seconds","value":"pub fn seconds(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns seconds since epoch (truncate nanoseconds)\n","sig":null,"attributes":[{"value":"/ Returns seconds since epoch (truncate nanoseconds)","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":437226,"byte_end":437280,"line_start":65,"line_end":65,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":437285,"byte_end":437294,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2370},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":437504,"byte_end":437516,"line_start":74,"line_end":74,"column_start":12,"column_end":24},"name":"subsec_nanos","qualname":"<Timestamp>::subsec_nanos","value":"pub fn subsec_nanos(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns nanoseconds since the last whole second (the remainder truncated\n by `seconds()`)\n","sig":null,"attributes":[{"value":"/ Returns nanoseconds since the last whole second (the remainder truncated","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":437378,"byte_end":437454,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ by `seconds()`)","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":437459,"byte_end":437478,"line_start":72,"line_end":72,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":437483,"byte_end":437492,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":2487},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":443655,"byte_end":443662,"line_start":24,"line_end":24,"column_start":11,"column_end":18},"name":"Storage","qualname":"::traits::Storage","value":"Storage","parent":null,"children":[{"krate":0,"index":2488},{"krate":0,"index":2489},{"krate":0,"index":2491},{"krate":0,"index":2492}],"decl_id":null,"docs":" Storage provides read and write access to a persistent storage.\n If you only want to provide read access, provide `&Storage`\n","sig":null,"attributes":[{"value":"/ Storage provides read and write access to a persistent storage.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":443513,"byte_end":443580,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/ If you only want to provide read access, provide `&Storage`","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":443581,"byte_end":443644,"line_start":23,"line_end":23,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2488},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":443968,"byte_end":443971,"line_start":30,"line_end":30,"column_start":8,"column_end":11},"name":"get","qualname":"::traits::Storage::get","value":"pub fn get(&Self, &[u8]) -> Option<Vec<u8>>","parent":{"krate":0,"index":2487},"children":[],"decl_id":null,"docs":" Returns None when key does not exist.\n Returns Some(Vec<u8>) when key exists.","sig":null,"attributes":[{"value":"/ Returns None when key does not exist.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":443669,"byte_end":443710,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/ Returns Some(Vec<u8>) when key exists.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":443715,"byte_end":443757,"line_start":26,"line_end":26,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":443762,"byte_end":443765,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ Note: Support for differentiating between a non-existent key and a key with empty value","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":443770,"byte_end":443861,"line_start":28,"line_end":28,"column_start":5,"column_end":96}},{"value":"/ is not great yet and might not be possible in all backends. But we're trying to get there.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":443866,"byte_end":443960,"line_start":29,"line_end":29,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":2489},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":444342,"byte_end":444347,"line_start":38,"line_end":38,"column_start":8,"column_end":13},"name":"range","qualname":"::traits::Storage::range","value":"pub fn range<'a>(&'a Self, Option<&[u8]>, Option<&[u8]>, Order)\n-> Box<dyn Iterator<Item = Record> + 'a>","parent":{"krate":0,"index":2487},"children":[],"decl_id":null,"docs":" Allows iteration over a set of key/value pairs, either forwards or backwards.","sig":null,"attributes":[{"value":"cfg(feature = \"iterator\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":444016,"byte_end":444044,"line_start":32,"line_end":32,"column_start":5,"column_end":33}},{"value":"/ Allows iteration over a set of key/value pairs, either forwards or backwards.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":444049,"byte_end":444130,"line_start":33,"line_end":33,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":444135,"byte_end":444138,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The bound `start` is inclusive and `end` is exclusive.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":444143,"byte_end":444201,"line_start":35,"line_end":35,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":444206,"byte_end":444209,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ If `start` is lexicographically greater than or equal to `end`, an empty range is described, mo matter of the order.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":444214,"byte_end":444334,"line_start":37,"line_end":37,"column_start":5,"column_end":125}}]},{"kind":"Method","id":{"krate":0,"index":2491},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":444507,"byte_end":444510,"line_start":45,"line_end":45,"column_start":8,"column_end":11},"name":"set","qualname":"::traits::Storage::set","value":"pub fn set(&mut Self, &[u8], &[u8])","parent":{"krate":0,"index":2487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2492},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":444791,"byte_end":444797,"line_start":51,"line_end":51,"column_start":8,"column_end":14},"name":"remove","qualname":"::traits::Storage::remove","value":"pub fn remove(&mut Self, &[u8])","parent":{"krate":0,"index":2487},"children":[],"decl_id":null,"docs":" Removes a database entry at `key`.","sig":null,"attributes":[{"value":"/ Removes a database entry at `key`.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":444554,"byte_end":444592,"line_start":47,"line_end":47,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":444597,"byte_end":444600,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ The current interface does not allow to differentiate between a key that existed","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":444605,"byte_end":444689,"line_start":49,"line_end":49,"column_start":5,"column_end":89}},{"value":"/ before and one that didn't exist. See https://github.com/CosmWasm/cosmwasm/issues/290","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":444694,"byte_end":444783,"line_start":50,"line_end":50,"column_start":5,"column_end":94}}]},{"kind":"Trait","id":{"krate":0,"index":2493},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":445772,"byte_end":445775,"line_start":68,"line_end":68,"column_start":11,"column_end":14},"name":"Api","qualname":"::traits::Api","value":"Api","parent":null,"children":[{"krate":0,"index":2494},{"krate":0,"index":2495},{"krate":0,"index":2496},{"krate":0,"index":2497},{"krate":0,"index":2498},{"krate":0,"index":2499},{"krate":0,"index":2500},{"krate":0,"index":2501}],"decl_id":null,"docs":" Api are callbacks to system functions implemented outside of the wasm modules.\n Currently it just supports address conversion but we could add eg. crypto functions here.","sig":null,"attributes":[{"value":"/ Api are callbacks to system functions implemented outside of the wasm modules.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":444825,"byte_end":444907,"line_start":54,"line_end":54,"column_start":1,"column_end":83}},{"value":"/ Currently it just supports address conversion but we could add eg. crypto functions here.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":444908,"byte_end":445001,"line_start":55,"line_end":55,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":445002,"byte_end":445005,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ This is a trait to allow mocks in the test code. Its members have a read-only","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":445006,"byte_end":445087,"line_start":57,"line_end":57,"column_start":1,"column_end":82}},{"value":"/ reference to the Api instance to allow accessing configuration.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":445088,"byte_end":445155,"line_start":58,"line_end":58,"column_start":1,"column_end":68}},{"value":"/ Implementations must not have mutable state, such that an instance can freely","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":445156,"byte_end":445237,"line_start":59,"line_end":59,"column_start":1,"column_end":82}},{"value":"/ be copied and shared between threads without affecting the behaviour.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":445238,"byte_end":445311,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/ Given an Api instance, all members should return the same value when called with the same","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":445312,"byte_end":445405,"line_start":61,"line_end":61,"column_start":1,"column_end":94}},{"value":"/ arguments. In particular this means the result must not depend in the state of the chain.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":445406,"byte_end":445499,"line_start":62,"line_end":62,"column_start":1,"column_end":94}},{"value":"/ If you need to access chaim state, you probably want to use the Querier.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":445500,"byte_end":445576,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ Side effects (such as logging) are allowed.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":445577,"byte_end":445624,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":445625,"byte_end":445628,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ We can use feature flags to opt-in to non-essential methods","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":445629,"byte_end":445692,"line_start":66,"line_end":66,"column_start":1,"column_end":64}},{"value":"/ for backwards compatibility in systems that don't have them all.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":445693,"byte_end":445761,"line_start":67,"line_end":67,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2494},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":446243,"byte_end":446256,"line_start":82,"line_end":82,"column_start":8,"column_end":21},"name":"addr_validate","qualname":"::traits::Api::addr_validate","value":"pub fn addr_validate(&Self, &str) -> StdResult<Addr>","parent":{"krate":0,"index":2493},"children":[],"decl_id":null,"docs":" Takes a human readable address and validates if it's correctly formatted.\n If it succeeds, a Addr is returned.","sig":null,"attributes":[{"value":"/ Takes a human readable address and validates if it's correctly formatted.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":445782,"byte_end":445859,"line_start":69,"line_end":69,"column_start":5,"column_end":82}},{"value":"/ If it succeeds, a Addr is returned.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":445864,"byte_end":445903,"line_start":70,"line_end":70,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":445908,"byte_end":445911,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":445916,"byte_end":445931,"line_start":72,"line_end":72,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":445936,"byte_end":445939,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":445944,"byte_end":445951,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Api, Addr};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":445956,"byte_end":445992,"line_start":75,"line_end":75,"column_start":5,"column_end":41}},{"value":"/ # use cosmwasm_std::testing::MockApi;","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":445997,"byte_end":446038,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ # let api = MockApi::default();","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":446043,"byte_end":446078,"line_start":77,"line_end":77,"column_start":5,"column_end":40}},{"value":"/ let input = \"what-users-provide\";","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":446083,"byte_end":446120,"line_start":78,"line_end":78,"column_start":5,"column_end":42}},{"value":"/ let validated: Addr = api.addr_validate(input).unwrap();","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":446125,"byte_end":446185,"line_start":79,"line_end":79,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(validated, input);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":446190,"byte_end":446223,"line_start":80,"line_end":80,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":446228,"byte_end":446235,"line_start":81,"line_end":81,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2495},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":446476,"byte_end":446493,"line_start":86,"line_end":86,"column_start":8,"column_end":25},"name":"addr_canonicalize","qualname":"::traits::Api::addr_canonicalize","value":"pub fn addr_canonicalize(&Self, &str) -> StdResult<CanonicalAddr>","parent":{"krate":0,"index":2493},"children":[],"decl_id":null,"docs":" Takes a human readable address and returns a canonical binary representation of it.\n This can be used when a compact fixed length representation is needed.\n","sig":null,"attributes":[{"value":"/ Takes a human readable address and returns a canonical binary representation of it.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":446302,"byte_end":446389,"line_start":84,"line_end":84,"column_start":5,"column_end":92}},{"value":"/ This can be used when a compact fixed length representation is needed.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":446394,"byte_end":446468,"line_start":85,"line_end":85,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2496},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":446738,"byte_end":446751,"line_start":92,"line_end":92,"column_start":8,"column_end":21},"name":"addr_humanize","qualname":"::traits::Api::addr_humanize","value":"pub fn addr_humanize(&Self, &CanonicalAddr) -> StdResult<Addr>","parent":{"krate":0,"index":2493},"children":[],"decl_id":null,"docs":" Takes a canonical address and returns a human readble address.\n This is the inverse of [`addr_canonicalize`].","sig":null,"attributes":[{"value":"/ Takes a canonical address and returns a human readble address.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":446548,"byte_end":446614,"line_start":88,"line_end":88,"column_start":5,"column_end":71}},{"value":"/ This is the inverse of [`addr_canonicalize`].","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":446619,"byte_end":446668,"line_start":89,"line_end":89,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":446673,"byte_end":446676,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`addr_canonicalize`]: Api::addr_canonicalize","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":446681,"byte_end":446730,"line_start":91,"line_end":91,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2497},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":446814,"byte_end":446830,"line_start":94,"line_end":94,"column_start":8,"column_end":24},"name":"secp256k1_verify","qualname":"::traits::Api::secp256k1_verify","value":"pub fn secp256k1_verify(&Self, &[u8], &[u8], &[u8])\n-> Result<bool, VerificationError>","parent":{"krate":0,"index":2493},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2498},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":446979,"byte_end":447003,"line_start":101,"line_end":101,"column_start":8,"column_end":32},"name":"secp256k1_recover_pubkey","qualname":"::traits::Api::secp256k1_recover_pubkey","value":"pub fn secp256k1_recover_pubkey(&Self, &[u8], &[u8], u8)\n-> Result<Vec<u8>, RecoverPubkeyError>","parent":{"krate":0,"index":2493},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2499},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":447157,"byte_end":447171,"line_start":108,"line_end":108,"column_start":8,"column_end":22},"name":"ed25519_verify","qualname":"::traits::Api::ed25519_verify","value":"pub fn ed25519_verify(&Self, &[u8], &[u8], &[u8])\n-> Result<bool, VerificationError>","parent":{"krate":0,"index":2493},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2500},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":447315,"byte_end":447335,"line_start":115,"line_end":115,"column_start":8,"column_end":28},"name":"ed25519_batch_verify","qualname":"::traits::Api::ed25519_batch_verify","value":"pub fn ed25519_batch_verify(&Self, &[&[u8]], &[&[u8]], &[&[u8]])\n-> Result<bool, VerificationError>","parent":{"krate":0,"index":2493},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2501},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":447664,"byte_end":447669,"line_start":124,"line_end":124,"column_start":8,"column_end":13},"name":"debug","qualname":"::traits::Api::debug","value":"pub fn debug(&Self, &str)","parent":{"krate":0,"index":2493},"children":[],"decl_id":null,"docs":" Emits a debugging message that is handled depending on the environment (typically printed to console or ignored).\n Those messages are not persisted to chain.\n","sig":null,"attributes":[{"value":"/ Emits a debugging message that is handled depending on the environment (typically printed to console or ignored).","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":447488,"byte_end":447605,"line_start":122,"line_end":122,"column_start":5,"column_end":122}},{"value":"/ Those messages are not persisted to chain.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":447610,"byte_end":447656,"line_start":123,"line_end":123,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":2502},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":447823,"byte_end":447836,"line_start":128,"line_end":128,"column_start":10,"column_end":23},"name":"QuerierResult","qualname":"::traits::QuerierResult","value":"SystemResult<ContractResult<Binary>>","parent":null,"children":[],"decl_id":null,"docs":" A short-hand alias for the two-level query result (1. accessing the contract, 2. executing query in the contract)\n","sig":null,"attributes":[{"value":"/ A short-hand alias for the two-level query result (1. accessing the contract, 2. executing query in the contract)","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":447696,"byte_end":447813,"line_start":127,"line_end":127,"column_start":1,"column_end":118}}]},{"kind":"Trait","id":{"krate":0,"index":2503},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":447888,"byte_end":447895,"line_start":130,"line_end":130,"column_start":11,"column_end":18},"name":"Querier","qualname":"::traits::Querier","value":"Querier","parent":null,"children":[{"krate":0,"index":2504}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2504},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":448261,"byte_end":448270,"line_start":136,"line_end":136,"column_start":8,"column_end":17},"name":"raw_query","qualname":"::traits::Querier::raw_query","value":"pub fn raw_query(&Self, &[u8]) -> QuerierResult","parent":{"krate":0,"index":2503},"children":[],"decl_id":null,"docs":" raw_query is all that must be implemented for the Querier.\n This allows us to pass through binary queries from one level to another without\n knowing the custom format, or we can decode it, with the knowledge of the allowed\n types. People using the querier probably want one of the simpler auto-generated\n helper methods\n","sig":null,"attributes":[{"value":"/ raw_query is all that must be implemented for the Querier.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":447902,"byte_end":447964,"line_start":131,"line_end":131,"column_start":5,"column_end":67}},{"value":"/ This allows us to pass through binary queries from one level to another without","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":447969,"byte_end":448052,"line_start":132,"line_end":132,"column_start":5,"column_end":88}},{"value":"/ knowing the custom format, or we can decode it, with the knowledge of the allowed","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":448057,"byte_end":448142,"line_start":133,"line_end":133,"column_start":5,"column_end":90}},{"value":"/ types. People using the querier probably want one of the simpler auto-generated","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":448147,"byte_end":448230,"line_start":134,"line_end":134,"column_start":5,"column_end":88}},{"value":"/ helper methods","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":448235,"byte_end":448253,"line_start":135,"line_end":135,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8131},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":448347,"byte_end":448361,"line_start":140,"line_end":140,"column_start":12,"column_end":26},"name":"QuerierWrapper","qualname":"::traits::QuerierWrapper","value":"QuerierWrapper {  }","parent":null,"children":[{"krate":0,"index":8134},{"krate":0,"index":8135}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2516},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":449174,"byte_end":449177,"line_start":162,"line_end":162,"column_start":12,"column_end":15},"name":"new","qualname":"<QuerierWrapper>::new","value":"pub fn new(&'a dyn Querier) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2517},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":449651,"byte_end":449656,"line_start":174,"line_end":174,"column_start":12,"column_end":17},"name":"query","qualname":"<QuerierWrapper>::query","value":"pub fn query<U: DeserializeOwned>(&Self, &QueryRequest<C>) -> StdResult<U>","parent":null,"children":[],"decl_id":null,"docs":" Makes the query and parses the response.","sig":null,"attributes":[{"value":"/ Makes the query and parses the response.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":449325,"byte_end":449369,"line_start":169,"line_end":169,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":449374,"byte_end":449377,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Any error (System Error, Error or called contract, or Parse Error) are flattened into","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":449382,"byte_end":449471,"line_start":171,"line_end":171,"column_start":5,"column_end":94}},{"value":"/ one level. Only use this if you don't need to check the SystemError","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":449476,"byte_end":449547,"line_start":172,"line_end":172,"column_start":5,"column_end":76}},{"value":"/ eg. If you don't differentiate between contract missing and contract returned error","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":449552,"byte_end":449639,"line_start":173,"line_end":173,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":2520},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":450385,"byte_end":450398,"line_start":190,"line_end":190,"column_start":12,"column_end":25},"name":"query_balance","qualname":"<QuerierWrapper>::query_balance","value":"pub fn query_balance<impl Into<String>: Into<String>,\n                     impl Into<String>: Into<String>>(&Self,\n                                                      impl Into<String>,\n                                                      impl Into<String>)\n-> StdResult<Coin>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2523},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":450751,"byte_end":450769,"line_start":204,"line_end":204,"column_start":12,"column_end":30},"name":"query_all_balances","qualname":"<QuerierWrapper>::query_all_balances","value":"pub fn query_all_balances<impl Into<String>: Into<String>>(&Self,\n                                                           impl Into<String>)\n-> StdResult<Vec<Coin>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2525},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":451197,"byte_end":451213,"line_start":215,"line_end":215,"column_start":12,"column_end":28},"name":"query_wasm_smart","qualname":"<QuerierWrapper>::query_wasm_smart","value":"pub fn query_wasm_smart<T: DeserializeOwned, impl Into<String>: Into<String>,\n                        impl Serialize: Serialize>(&Self, impl Into<String>,\n                                                   &impl Serialize)\n-> StdResult<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2529},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":452008,"byte_end":452022,"line_start":235,"line_end":235,"column_start":12,"column_end":26},"name":"query_wasm_raw","qualname":"<QuerierWrapper>::query_wasm_raw","value":"pub fn query_wasm_raw<impl Into<String>: Into<String>,\n                      impl Into<Binary>: Into<Binary>>(&Self,\n                                                       impl Into<String>,\n                                                       impl Into<Binary>)\n-> StdResult<Option<Vec<u8>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2533},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":453298,"byte_end":453318,"line_start":269,"line_end":269,"column_start":12,"column_end":32},"name":"query_all_validators","qualname":"<QuerierWrapper>::query_all_validators","value":"pub fn query_all_validators(&Self) -> StdResult<Vec<Validator>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"staking\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":453259,"byte_end":453286,"line_start":268,"line_end":268,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2534},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":453559,"byte_end":453574,"line_start":276,"line_end":276,"column_start":12,"column_end":27},"name":"query_validator","qualname":"<QuerierWrapper>::query_validator","value":"pub fn query_validator<impl Into<String>: Into<String>>(&Self,\n                                                        impl Into<String>)\n-> StdResult<Option<Validator>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"staking\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":453520,"byte_end":453547,"line_start":275,"line_end":275,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2536},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":453892,"byte_end":453910,"line_start":286,"line_end":286,"column_start":12,"column_end":30},"name":"query_bonded_denom","qualname":"<QuerierWrapper>::query_bonded_denom","value":"pub fn query_bonded_denom(&Self) -> StdResult<String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"staking\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":453853,"byte_end":453880,"line_start":285,"line_end":285,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2537},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":454134,"byte_end":454155,"line_start":293,"line_end":293,"column_start":12,"column_end":33},"name":"query_all_delegations","qualname":"<QuerierWrapper>::query_all_delegations","value":"pub fn query_all_delegations<impl Into<String>: Into<String>>(&Self,\n                                                              impl Into<String>)\n-> StdResult<Vec<Delegation>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"staking\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":454095,"byte_end":454122,"line_start":292,"line_end":292,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2539},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":454512,"byte_end":454528,"line_start":306,"line_end":306,"column_start":12,"column_end":28},"name":"query_delegation","qualname":"<QuerierWrapper>::query_delegation","value":"pub fn query_delegation<impl Into<String>: Into<String>,\n                        impl Into<String>: Into<String>>(&Self,\n                                                         impl Into<String>,\n                                                         impl Into<String>)\n-> StdResult<Option<FullDelegation>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"staking\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":454473,"byte_end":454500,"line_start":305,"line_end":305,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":8140},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":456498,"byte_end":456501,"line_start":9,"line_end":9,"column_start":12,"column_end":15},"name":"Env","qualname":"::types::Env","value":"Env { block, transaction, contract }","parent":null,"children":[{"krate":0,"index":8141},{"krate":0,"index":8142},{"krate":0,"index":8143}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8141},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":456512,"byte_end":456517,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"name":"block","qualname":"::types::Env::block","value":"types::BlockInfo","parent":{"krate":0,"index":8140},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8142},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":456760,"byte_end":456771,"line_start":14,"line_end":14,"column_start":9,"column_end":20},"name":"transaction","qualname":"::types::Env::transaction","value":"std::option::Option<types::TransactionInfo>","parent":{"krate":0,"index":8140},"children":[],"decl_id":null,"docs":" Information on the transaction this message was executed in.\n The field is unset when the `MsgExecuteContract`/`MsgInstantiateContract`/`MsgMigrateContract`\n is not executed as part of a transaction.\n","sig":null,"attributes":[{"value":"/ Information on the transaction this message was executed in.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":456534,"byte_end":456598,"line_start":11,"line_end":11,"column_start":5,"column_end":69}},{"value":"/ The field is unset when the `MsgExecuteContract`/`MsgInstantiateContract`/`MsgMigrateContract`","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":456603,"byte_end":456701,"line_start":12,"line_end":12,"column_start":5,"column_end":103}},{"value":"/ is not executed as part of a transaction.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":456706,"byte_end":456751,"line_start":13,"line_end":13,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":8143},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":456806,"byte_end":456814,"line_start":15,"line_end":15,"column_start":9,"column_end":17},"name":"contract","qualname":"::types::Env::contract","value":"types::ContractInfo","parent":{"krate":0,"index":8140},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8203},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":456903,"byte_end":456918,"line_start":19,"line_end":19,"column_start":12,"column_end":27},"name":"TransactionInfo","qualname":"::types::TransactionInfo","value":"TransactionInfo { index }","parent":null,"children":[{"krate":0,"index":8204}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8204},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":457191,"byte_end":457196,"line_start":26,"line_end":26,"column_start":9,"column_end":14},"name":"index","qualname":"::types::TransactionInfo::index","value":"u32","parent":{"krate":0,"index":8203},"children":[],"decl_id":null,"docs":" The position of this transaction in the block. The first\n transaction has index 0.","sig":null,"attributes":[{"value":"/ The position of this transaction in the block. The first","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":456925,"byte_end":456985,"line_start":20,"line_end":20,"column_start":5,"column_end":65}},{"value":"/ transaction has index 0.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":456990,"byte_end":457018,"line_start":21,"line_end":21,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":457023,"byte_end":457026,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This allows you to get a unique transaction indentifier in this chain","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":457031,"byte_end":457104,"line_start":23,"line_end":23,"column_start":5,"column_end":78}},{"value":"/ using the pair (`env.block.height`, `env.transaction.index`).","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":457109,"byte_end":457174,"line_start":24,"line_end":24,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":457179,"byte_end":457182,"line_start":25,"line_end":25,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8260},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":457288,"byte_end":457297,"line_start":30,"line_end":30,"column_start":12,"column_end":21},"name":"BlockInfo","qualname":"::types::BlockInfo","value":"BlockInfo { height, time, chain_id }","parent":null,"children":[{"krate":0,"index":8261},{"krate":0,"index":8262},{"krate":0,"index":8263}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8261},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":457394,"byte_end":457400,"line_start":32,"line_end":32,"column_start":9,"column_end":15},"name":"height","qualname":"::types::BlockInfo::height","value":"u64","parent":{"krate":0,"index":8260},"children":[],"decl_id":null,"docs":" The height of a block is the number of blocks preceding it in the blockchain.\n","sig":null,"attributes":[{"value":"/ The height of a block is the number of blocks preceding it in the blockchain.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":457304,"byte_end":457385,"line_start":31,"line_end":31,"column_start":5,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":8262},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":459343,"byte_end":459347,"line_start":79,"line_end":79,"column_start":9,"column_end":13},"name":"time","qualname":"::types::BlockInfo::time","value":"timestamp::Timestamp","parent":{"krate":0,"index":8260},"children":[],"decl_id":null,"docs":" Absolute time of the block creation in seconds since the UNIX epoch (00:00:00 on 1970-01-01 UTC).","sig":null,"attributes":[{"value":"/ Absolute time of the block creation in seconds since the UNIX epoch (00:00:00 on 1970-01-01 UTC).","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":457411,"byte_end":457512,"line_start":33,"line_end":33,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":457517,"byte_end":457520,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The source of this is the [BFT Time in Tendermint](https://github.com/tendermint/tendermint/blob/58dc1726/spec/consensus/bft-time.md),","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":457525,"byte_end":457663,"line_start":35,"line_end":35,"column_start":5,"column_end":143}},{"value":"/ which has the same nanosecond precision as the `Timestamp` type.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":457668,"byte_end":457736,"line_start":36,"line_end":36,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":457741,"byte_end":457744,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":457749,"byte_end":457763,"line_start":38,"line_end":38,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":457768,"byte_end":457771,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Using chrono:","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":457776,"byte_end":457793,"line_start":40,"line_end":40,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":457798,"byte_end":457801,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":457806,"byte_end":457813,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Addr, BlockInfo, ContractInfo, Env, MessageInfo, Timestamp, TransactionInfo};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":457818,"byte_end":457920,"line_start":43,"line_end":43,"column_start":5,"column_end":107}},{"value":"/ # let env = Env {","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":457925,"byte_end":457946,"line_start":44,"line_end":44,"column_start":5,"column_end":26}},{"value":"/ #     block: BlockInfo {","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":457951,"byte_end":457979,"line_start":45,"line_end":45,"column_start":5,"column_end":33}},{"value":"/ #         height: 12_345,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":457984,"byte_end":458013,"line_start":46,"line_end":46,"column_start":5,"column_end":34}},{"value":"/ #         time: Timestamp::from_nanos(1_571_797_419_879_305_533),","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":458018,"byte_end":458087,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ #         chain_id: \"cosmos-testnet-14002\".to_string(),","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":458092,"byte_end":458151,"line_start":48,"line_end":48,"column_start":5,"column_end":64}},{"value":"/ #     },","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":458156,"byte_end":458168,"line_start":49,"line_end":49,"column_start":5,"column_end":17}},{"value":"/ #     transaction: Some(TransactionInfo { index: 3 }),","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":458173,"byte_end":458231,"line_start":50,"line_end":50,"column_start":5,"column_end":63}},{"value":"/ #     contract: ContractInfo {","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":458236,"byte_end":458270,"line_start":51,"line_end":51,"column_start":5,"column_end":39}},{"value":"/ #         address: Addr::unchecked(\"contract\"),","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":458275,"byte_end":458326,"line_start":52,"line_end":52,"column_start":5,"column_end":56}},{"value":"/ #     },","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":458331,"byte_end":458343,"line_start":53,"line_end":53,"column_start":5,"column_end":17}},{"value":"/ # };","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":458348,"byte_end":458356,"line_start":54,"line_end":54,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono;","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":458361,"byte_end":458387,"line_start":55,"line_end":55,"column_start":5,"column_end":31}},{"value":"/ use chrono::NaiveDateTime;","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":458392,"byte_end":458422,"line_start":56,"line_end":56,"column_start":5,"column_end":35}},{"value":"/ let seconds = env.block.time.seconds();","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":458427,"byte_end":458470,"line_start":57,"line_end":57,"column_start":5,"column_end":48}},{"value":"/ let nsecs = env.block.time.subsec_nanos();","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":458475,"byte_end":458521,"line_start":58,"line_end":58,"column_start":5,"column_end":51}},{"value":"/ let dt = NaiveDateTime::from_timestamp(seconds as i64, nsecs as u32);","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":458526,"byte_end":458599,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":458604,"byte_end":458611,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":458616,"byte_end":458619,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Creating a simple millisecond-precision timestamp (as used in JavaScript):","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":458624,"byte_end":458702,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":458707,"byte_end":458710,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":458715,"byte_end":458722,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/ # use cosmwasm_std::{Addr, BlockInfo, ContractInfo, Env, MessageInfo, Timestamp, TransactionInfo};","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":458727,"byte_end":458829,"line_start":65,"line_end":65,"column_start":5,"column_end":107}},{"value":"/ # let env = Env {","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":458834,"byte_end":458855,"line_start":66,"line_end":66,"column_start":5,"column_end":26}},{"value":"/ #     block: BlockInfo {","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":458860,"byte_end":458888,"line_start":67,"line_end":67,"column_start":5,"column_end":33}},{"value":"/ #         height: 12_345,","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":458893,"byte_end":458922,"line_start":68,"line_end":68,"column_start":5,"column_end":34}},{"value":"/ #         time: Timestamp::from_nanos(1_571_797_419_879_305_533),","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":458927,"byte_end":458996,"line_start":69,"line_end":69,"column_start":5,"column_end":74}},{"value":"/ #         chain_id: \"cosmos-testnet-14002\".to_string(),","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":459001,"byte_end":459060,"line_start":70,"line_end":70,"column_start":5,"column_end":64}},{"value":"/ #     },","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":459065,"byte_end":459077,"line_start":71,"line_end":71,"column_start":5,"column_end":17}},{"value":"/ #     transaction: Some(TransactionInfo { index: 3 }),","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":459082,"byte_end":459140,"line_start":72,"line_end":72,"column_start":5,"column_end":63}},{"value":"/ #     contract: ContractInfo {","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":459145,"byte_end":459179,"line_start":73,"line_end":73,"column_start":5,"column_end":39}},{"value":"/ #         address: Addr::unchecked(\"contract\"),","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":459184,"byte_end":459235,"line_start":74,"line_end":74,"column_start":5,"column_end":56}},{"value":"/ #     },","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":459240,"byte_end":459252,"line_start":75,"line_end":75,"column_start":5,"column_end":17}},{"value":"/ # };","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":459257,"byte_end":459265,"line_start":76,"line_end":76,"column_start":5,"column_end":13}},{"value":"/ let millis = env.block.time.nanos() / 1_000_000;","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":459270,"byte_end":459322,"line_start":77,"line_end":77,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":459327,"byte_end":459334,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Field","id":{"krate":0,"index":8263},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":459368,"byte_end":459376,"line_start":80,"line_end":80,"column_start":9,"column_end":17},"name":"chain_id","qualname":"::types::BlockInfo::chain_id","value":"std::string::String","parent":{"krate":0,"index":8260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8327},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":459981,"byte_end":459992,"line_start":91,"line_end":91,"column_start":12,"column_end":23},"name":"MessageInfo","qualname":"::types::MessageInfo","value":"MessageInfo { sender, funds }","parent":null,"children":[{"krate":0,"index":8328},{"krate":0,"index":8329}],"decl_id":null,"docs":" Additional information from [MsgInstantiateContract] and [MsgExecuteContract], which is passed\n along with the contract execution message into the `instantiate` and `execute` entry points.","sig":null,"attributes":[{"value":"/ Additional information from [MsgInstantiateContract] and [MsgExecuteContract], which is passed","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":459389,"byte_end":459487,"line_start":83,"line_end":83,"column_start":1,"column_end":99}},{"value":"/ along with the contract execution message into the `instantiate` and `execute` entry points.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":459488,"byte_end":459584,"line_start":84,"line_end":84,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":459585,"byte_end":459588,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ It contains the essential info for authorization - identity of the call, and payment.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":459589,"byte_end":459678,"line_start":86,"line_end":86,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":459679,"byte_end":459682,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [MsgInstantiateContract]: https://github.com/CosmWasm/wasmd/blob/v0.15.0/x/wasm/internal/types/tx.proto#L47-L61","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":459683,"byte_end":459798,"line_start":88,"line_end":88,"column_start":1,"column_end":116}},{"value":"/ [MsgExecuteContract]: https://github.com/CosmWasm/wasmd/blob/v0.15.0/x/wasm/internal/types/tx.proto#L68-L78","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":459799,"byte_end":459910,"line_start":89,"line_end":89,"column_start":1,"column_end":112}}]},{"kind":"Field","id":{"krate":0,"index":8328},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":460566,"byte_end":460572,"line_start":101,"line_end":101,"column_start":9,"column_end":15},"name":"sender","qualname":"::types::MessageInfo::sender","value":"addresses::Addr","parent":{"krate":0,"index":8327},"children":[],"decl_id":null,"docs":" The `sender` field from `MsgInstantiateContract` and `MsgExecuteContract`.\n You can think of this as the address that initiated the action (i.e. the message). What that\n means exactly heavily depends on the application.","sig":null,"attributes":[{"value":"/ The `sender` field from `MsgInstantiateContract` and `MsgExecuteContract`.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":459999,"byte_end":460077,"line_start":92,"line_end":92,"column_start":5,"column_end":83}},{"value":"/ You can think of this as the address that initiated the action (i.e. the message). What that","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":460082,"byte_end":460178,"line_start":93,"line_end":93,"column_start":5,"column_end":101}},{"value":"/ means exactly heavily depends on the application.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":460183,"byte_end":460236,"line_start":94,"line_end":94,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":460241,"byte_end":460244,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The x/wasm module ensures that the sender address signed the transaction or","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":460249,"byte_end":460328,"line_start":96,"line_end":96,"column_start":5,"column_end":84}},{"value":"/ is otherwise authorized to send the message.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":460333,"byte_end":460381,"line_start":97,"line_end":97,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":460386,"byte_end":460389,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Additional signers of the transaction that are either needed for other messages or contain unnecessary","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":460394,"byte_end":460500,"line_start":99,"line_end":99,"column_start":5,"column_end":111}},{"value":"/ signatures are not propagated into the contract.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":460505,"byte_end":460557,"line_start":100,"line_end":100,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":8329},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":460843,"byte_end":460848,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"name":"funds","qualname":"::types::MessageInfo::funds","value":"std::vec::Vec<coins::Coin>","parent":{"krate":0,"index":8327},"children":[],"decl_id":null,"docs":" The funds that are sent to the contract as part of `MsgInstantiateContract`\n or `MsgExecuteContract`. The transfer is processed in bank before the contract\n is executed such that the new balance is visible during contract execution.\n","sig":null,"attributes":[{"value":"/ The funds that are sent to the contract as part of `MsgInstantiateContract`","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":460584,"byte_end":460663,"line_start":102,"line_end":102,"column_start":5,"column_end":84}},{"value":"/ or `MsgExecuteContract`. The transfer is processed in bank before the contract","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":460668,"byte_end":460750,"line_start":103,"line_end":103,"column_start":5,"column_end":87}},{"value":"/ is executed such that the new balance is visible during contract execution.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":460755,"byte_end":460834,"line_start":104,"line_end":104,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":8387},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":460934,"byte_end":460946,"line_start":109,"line_end":109,"column_start":12,"column_end":24},"name":"ContractInfo","qualname":"::types::ContractInfo","value":"ContractInfo { address }","parent":null,"children":[{"krate":0,"index":8388}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8388},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/types.rs","byte_start":460957,"byte_end":460964,"line_start":110,"line_end":110,"column_start":9,"column_end":16},"name":"address","qualname":"::types::ContractInfo::address","value":"addresses::Addr","parent":{"krate":0,"index":8387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2965},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":462257,"byte_end":462275,"line_start":34,"line_end":34,"column_start":11,"column_end":29},"name":"MOCK_CONTRACT_ADDR","qualname":"::mock::MOCK_CONTRACT_ADDR","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2966},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":462531,"byte_end":462548,"line_start":40,"line_end":40,"column_start":8,"column_end":25},"name":"mock_dependencies","qualname":"::mock::mock_dependencies","value":"pub fn mock_dependencies()\n-> OwnedDeps<MockStorage, MockApi, MockQuerier, Empty>","parent":null,"children":[],"decl_id":null,"docs":" Creates all external requirements that can be injected for unit tests.","sig":null,"attributes":[{"value":"/ Creates all external requirements that can be injected for unit tests.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":462304,"byte_end":462378,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":462379,"byte_end":462382,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ See also [`mock_dependencies_with_balance`] and [`mock_dependencies_with_balances`]","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":462383,"byte_end":462470,"line_start":38,"line_end":38,"column_start":1,"column_end":88}},{"value":"/ if you want to start with some initial balances.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":462471,"byte_end":462523,"line_start":39,"line_end":39,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":2967},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":462943,"byte_end":462973,"line_start":52,"line_end":52,"column_start":8,"column_end":38},"name":"mock_dependencies_with_balance","qualname":"::mock::mock_dependencies_with_balance","value":"pub fn mock_dependencies_with_balance(&[Coin])\n-> OwnedDeps<MockStorage, MockApi, MockQuerier, Empty>","parent":null,"children":[],"decl_id":null,"docs":" Creates all external requirements that can be injected for unit tests.","sig":null,"attributes":[{"value":"/ Creates all external requirements that can be injected for unit tests.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":462788,"byte_end":462862,"line_start":49,"line_end":49,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":462863,"byte_end":462866,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ It sets the given balance for the contract itself, nothing else.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":462867,"byte_end":462935,"line_start":51,"line_end":51,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":2968},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":463302,"byte_end":463333,"line_start":60,"line_end":60,"column_start":8,"column_end":39},"name":"mock_dependencies_with_balances","qualname":"::mock::mock_dependencies_with_balances","value":"pub fn mock_dependencies_with_balances(&[(&str, &[Coin])])\n-> OwnedDeps<MockStorage, MockApi, MockQuerier>","parent":null,"children":[],"decl_id":null,"docs":" Initializes the querier along with the mock_dependencies.\n Sets all balances provided (you must explicitly set contract balance if desired).\n","sig":null,"attributes":[{"value":"/ Initializes the querier along with the mock_dependencies.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":463147,"byte_end":463208,"line_start":58,"line_end":58,"column_start":1,"column_end":62}},{"value":"/ Sets all balances provided (you must explicitly set contract balance if desired).","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":463209,"byte_end":463294,"line_start":59,"line_end":59,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":2969},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":463735,"byte_end":463746,"line_start":73,"line_end":73,"column_start":10,"column_end":21},"name":"MockStorage","qualname":"::mock::MockStorage","value":"MemoryStorage","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8444},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":464362,"byte_end":464369,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"MockApi","qualname":"::mock::MockApi","value":"MockApi {  }","parent":null,"children":[{"krate":0,"index":8445}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2986},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":468375,"byte_end":468383,"line_start":214,"line_end":214,"column_start":8,"column_end":16},"name":"mock_env","qualname":"::mock::mock_env","value":"pub fn mock_env() -> Env","parent":null,"children":[],"decl_id":null,"docs":" Returns a default enviroment with height, time, chain_id, and contract address\n You can submit as is to most contracts, or modify height/time if you want to\n test for expiration.","sig":null,"attributes":[{"value":"/ Returns a default enviroment with height, time, chain_id, and contract address","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":468127,"byte_end":468209,"line_start":209,"line_end":209,"column_start":1,"column_end":83}},{"value":"/ You can submit as is to most contracts, or modify height/time if you want to","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":468210,"byte_end":468290,"line_start":210,"line_end":210,"column_start":1,"column_end":81}},{"value":"/ test for expiration.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":468291,"byte_end":468315,"line_start":211,"line_end":211,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":468316,"byte_end":468319,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ This is intended for use in test code only.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":468320,"byte_end":468367,"line_start":213,"line_end":213,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":2987},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":468867,"byte_end":468876,"line_start":230,"line_end":230,"column_start":8,"column_end":17},"name":"mock_info","qualname":"::mock::mock_info","value":"pub fn mock_info(&str, &[Coin]) -> MessageInfo","parent":null,"children":[],"decl_id":null,"docs":" Just set sender and funds for the message.\n This is intended for use in test code only.\n","sig":null,"attributes":[{"value":"/ Just set sender and funds for the message.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":468765,"byte_end":468811,"line_start":228,"line_end":228,"column_start":1,"column_end":47}},{"value":"/ This is intended for use in test code only.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":468812,"byte_end":468859,"line_start":229,"line_end":229,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":2988},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":474553,"byte_end":474583,"line_start":393,"line_end":393,"column_start":10,"column_end":40},"name":"MockQuerierCustomHandlerResult","qualname":"::mock::MockQuerierCustomHandlerResult","value":"SystemResult<ContractResult<Binary>>","parent":null,"children":[],"decl_id":null,"docs":" The same type as cosmwasm-std's QuerierResult, but easier to reuse in\n cosmwasm-vm. It might diverge from QuerierResult at some point.\n","sig":null,"attributes":[{"value":"/ The same type as cosmwasm-std's QuerierResult, but easier to reuse in","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":474402,"byte_end":474475,"line_start":391,"line_end":391,"column_start":1,"column_end":74}},{"value":"/ cosmwasm-vm. It might diverge from QuerierResult at some point.","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":474476,"byte_end":474543,"line_start":392,"line_end":392,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2989},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":474734,"byte_end":474745,"line_start":397,"line_end":397,"column_start":12,"column_end":23},"name":"MockQuerier","qualname":"::mock::MockQuerier","value":"MockQuerier {  }","parent":null,"children":[{"krate":0,"index":2991},{"krate":0,"index":2992},{"krate":0,"index":2993},{"krate":0,"index":2994}],"decl_id":null,"docs":" MockQuerier holds an immutable table of bank balances\n TODO: also allow querying contracts\n","sig":null,"attributes":[{"value":"/ MockQuerier holds an immutable table of bank balances","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":474625,"byte_end":474682,"line_start":395,"line_end":395,"column_start":1,"column_end":58}},{"value":"/ TODO: also allow querying contracts","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":474683,"byte_end":474722,"line_start":396,"line_end":396,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2998},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":475282,"byte_end":475285,"line_start":411,"line_end":411,"column_start":12,"column_end":15},"name":"new","qualname":"<MockQuerier<C>>::new","value":"pub fn new(&[(&str, &[Coin])]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3000},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":475996,"byte_end":476010,"line_start":427,"line_end":427,"column_start":12,"column_end":26},"name":"update_balance","qualname":"<MockQuerier<C>>::update_balance","value":"pub fn update_balance<impl Into<String>: Into<String>>(&mut Self,\n                                                       impl Into<String>,\n                                                       Vec<Coin>)\n-> Option<Vec<Coin>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3002},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":476227,"byte_end":476241,"line_start":436,"line_end":436,"column_start":12,"column_end":26},"name":"update_staking","qualname":"<MockQuerier<C>>::update_staking","value":"pub fn update_staking(&mut Self, &str, &[crate::query::Validator],\n                      &[crate::query::FullDelegation])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"staking\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":476188,"byte_end":476215,"line_start":435,"line_end":435,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3003},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":476487,"byte_end":476506,"line_start":445,"line_end":445,"column_start":12,"column_end":31},"name":"with_custom_handler","qualname":"<MockQuerier<C>>::with_custom_handler","value":"pub fn with_custom_handler<CH: 'static>(Self, CH) -> Self where CH: Fn(&C) ->\nMockQuerierCustomHandlerResult","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3012},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":477386,"byte_end":477398,"line_start":476,"line_end":476,"column_start":12,"column_end":24},"name":"handle_query","qualname":"<MockQuerier<C>>::handle_query","value":"pub fn handle_query(&Self, &QueryRequest<C>) -> QuerierResult","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8454},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":478800,"byte_end":478811,"line_start":513,"line_end":513,"column_start":12,"column_end":23},"name":"BankQuerier","qualname":"::mock::BankQuerier","value":"BankQuerier {  }","parent":null,"children":[{"krate":0,"index":8455}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3016},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":478889,"byte_end":478892,"line_start":518,"line_end":518,"column_start":12,"column_end":15},"name":"new","qualname":"<BankQuerier>::new","value":"pub fn new(&[(&str, &[Coin])]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3017},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":479142,"byte_end":479147,"line_start":526,"line_end":526,"column_start":12,"column_end":17},"name":"query","qualname":"<BankQuerier>::query","value":"pub fn query(&Self, &BankQuery) -> QuerierResult","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8460},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":480418,"byte_end":480432,"line_start":558,"line_end":558,"column_start":12,"column_end":26},"name":"StakingQuerier","qualname":"::mock::StakingQuerier","value":"StakingQuerier {  }","parent":null,"children":[{"krate":0,"index":8461},{"krate":0,"index":8462},{"krate":0,"index":8463}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"staking\")","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":480353,"byte_end":480380,"line_start":556,"line_end":556,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3022},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":480588,"byte_end":480591,"line_start":566,"line_end":566,"column_start":12,"column_end":15},"name":"new","qualname":"<StakingQuerier>::new","value":"pub fn new(&str, &[Validator], &[FullDelegation]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3023},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":480856,"byte_end":480861,"line_start":574,"line_end":574,"column_start":12,"column_end":17},"name":"query","qualname":"<StakingQuerier>::query","value":"pub fn query(&Self, &StakingQuery) -> QuerierResult","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3028},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483579,"byte_end":483593,"line_start":674,"line_end":674,"column_start":8,"column_end":22},"name":"riffle_shuffle","qualname":"::mock::riffle_shuffle","value":"pub fn riffle_shuffle<T: Clone>(&[T]) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Performs a perfect shuffle (in shuffle)","sig":null,"attributes":[{"value":"/ Performs a perfect shuffle (in shuffle)","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":482863,"byte_end":482906,"line_start":627,"line_end":627,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":482907,"byte_end":482910,"line_start":628,"line_end":628,"column_start":1,"column_end":4}},{"value":"/ https://en.wikipedia.org/wiki/Riffle_shuffle_permutation#Perfect_shuffles","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":482911,"byte_end":482988,"line_start":629,"line_end":629,"column_start":1,"column_end":78}},{"value":"/ https://en.wikipedia.org/wiki/In_shuffle","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":482989,"byte_end":483033,"line_start":630,"line_end":630,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483034,"byte_end":483037,"line_start":631,"line_end":631,"column_start":1,"column_end":4}},{"value":"/ The number of shuffles required to restore the original order are listed in","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483038,"byte_end":483117,"line_start":632,"line_end":632,"column_start":1,"column_end":80}},{"value":"/ https://oeis.org/A002326, e.g.:","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483118,"byte_end":483153,"line_start":633,"line_end":633,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483154,"byte_end":483157,"line_start":634,"line_end":634,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483158,"byte_end":483171,"line_start":635,"line_end":635,"column_start":1,"column_end":14}},{"value":"/ 2: 2","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483172,"byte_end":483180,"line_start":636,"line_end":636,"column_start":1,"column_end":9}},{"value":"/ 4: 4","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483181,"byte_end":483189,"line_start":637,"line_end":637,"column_start":1,"column_end":9}},{"value":"/ 6: 3","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483190,"byte_end":483198,"line_start":638,"line_end":638,"column_start":1,"column_end":9}},{"value":"/ 8: 6","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483199,"byte_end":483207,"line_start":639,"line_end":639,"column_start":1,"column_end":9}},{"value":"/ 10: 10","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483208,"byte_end":483218,"line_start":640,"line_end":640,"column_start":1,"column_end":11}},{"value":"/ 12: 12","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483219,"byte_end":483229,"line_start":641,"line_end":641,"column_start":1,"column_end":11}},{"value":"/ 14: 4","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483230,"byte_end":483239,"line_start":642,"line_end":642,"column_start":1,"column_end":10}},{"value":"/ 16: 8","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483240,"byte_end":483249,"line_start":643,"line_end":643,"column_start":1,"column_end":10}},{"value":"/ 18: 18","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483250,"byte_end":483260,"line_start":644,"line_end":644,"column_start":1,"column_end":11}},{"value":"/ 20: 6","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483261,"byte_end":483270,"line_start":645,"line_end":645,"column_start":1,"column_end":10}},{"value":"/ 22: 11","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483271,"byte_end":483281,"line_start":646,"line_end":646,"column_start":1,"column_end":11}},{"value":"/ 24: 20","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483282,"byte_end":483292,"line_start":647,"line_end":647,"column_start":1,"column_end":11}},{"value":"/ 26: 18","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483293,"byte_end":483303,"line_start":648,"line_end":648,"column_start":1,"column_end":11}},{"value":"/ 28: 28","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483304,"byte_end":483314,"line_start":649,"line_end":649,"column_start":1,"column_end":11}},{"value":"/ 30: 5","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483315,"byte_end":483324,"line_start":650,"line_end":650,"column_start":1,"column_end":10}},{"value":"/ 32: 10","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483325,"byte_end":483335,"line_start":651,"line_end":651,"column_start":1,"column_end":11}},{"value":"/ 34: 12","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483336,"byte_end":483346,"line_start":652,"line_end":652,"column_start":1,"column_end":11}},{"value":"/ 36: 36","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483347,"byte_end":483357,"line_start":653,"line_end":653,"column_start":1,"column_end":11}},{"value":"/ 38: 12","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483358,"byte_end":483368,"line_start":654,"line_end":654,"column_start":1,"column_end":11}},{"value":"/ 40: 20","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483369,"byte_end":483379,"line_start":655,"line_end":655,"column_start":1,"column_end":11}},{"value":"/ 42: 14","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483380,"byte_end":483390,"line_start":656,"line_end":656,"column_start":1,"column_end":11}},{"value":"/ 44: 12","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483391,"byte_end":483401,"line_start":657,"line_end":657,"column_start":1,"column_end":11}},{"value":"/ 46: 23","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483402,"byte_end":483412,"line_start":658,"line_end":658,"column_start":1,"column_end":11}},{"value":"/ 48: 21","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483413,"byte_end":483423,"line_start":659,"line_end":659,"column_start":1,"column_end":11}},{"value":"/ 50: 8","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483424,"byte_end":483433,"line_start":660,"line_end":660,"column_start":1,"column_end":10}},{"value":"/ 52: 52","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483434,"byte_end":483444,"line_start":661,"line_end":661,"column_start":1,"column_end":11}},{"value":"/ 54: 20","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483445,"byte_end":483455,"line_start":662,"line_end":662,"column_start":1,"column_end":11}},{"value":"/ 56: 18","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483456,"byte_end":483466,"line_start":663,"line_end":663,"column_start":1,"column_end":11}},{"value":"/ 58: 58","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483467,"byte_end":483477,"line_start":664,"line_end":664,"column_start":1,"column_end":11}},{"value":"/ 60: 60","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483478,"byte_end":483488,"line_start":665,"line_end":665,"column_start":1,"column_end":11}},{"value":"/ 62: 6","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483489,"byte_end":483498,"line_start":666,"line_end":666,"column_start":1,"column_end":10}},{"value":"/ 64: 12","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483499,"byte_end":483509,"line_start":667,"line_end":667,"column_start":1,"column_end":11}},{"value":"/ 66: 66","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483510,"byte_end":483520,"line_start":668,"line_end":668,"column_start":1,"column_end":11}},{"value":"/ 68: 22","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483521,"byte_end":483531,"line_start":669,"line_end":669,"column_start":1,"column_end":11}},{"value":"/ 70: 35","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483532,"byte_end":483542,"line_start":670,"line_end":670,"column_start":1,"column_end":11}},{"value":"/ 72: 9","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483543,"byte_end":483552,"line_start":671,"line_end":671,"column_start":1,"column_end":10}},{"value":"/ 74: 20","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483553,"byte_end":483563,"line_start":672,"line_end":672,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483564,"byte_end":483571,"line_start":673,"line_end":673,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3030},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":483986,"byte_end":483995,"line_start":689,"line_end":689,"column_start":8,"column_end":17},"name":"digit_sum","qualname":"::mock::digit_sum","value":"pub fn digit_sum(&[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3032},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":484229,"byte_end":484244,"line_start":695,"line_end":695,"column_start":8,"column_end":23},"name":"mock_wasmd_attr","qualname":"::mock::mock_wasmd_attr","value":"pub fn mock_wasmd_attr<impl Into<String>: Into<String>,\n                       impl Into<String>: Into<String>>(impl Into<String>,\n                                                        impl Into<String>)\n-> Attribute","parent":null,"children":[],"decl_id":null,"docs":" Only for test code. This bypasses assertions in new, allowing us to create _*\n Attributes to simulate responses from the blockchain\n","sig":null,"attributes":[{"value":"/ Only for test code. This bypasses assertions in new, allowing us to create _*","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":484083,"byte_end":484164,"line_start":693,"line_end":693,"column_start":1,"column_end":82}},{"value":"/ Attributes to simulate responses from the blockchain","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":484165,"byte_end":484221,"line_start":694,"line_end":694,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":3035},"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":3542,"byte_end":3549,"line_start":100,"line_end":100,"column_start":9,"column_end":16},"name":"testing","qualname":"::testing","value":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","parent":null,"children":[{"krate":0,"index":3036},{"krate":0,"index":3039},{"krate":0,"index":3040},{"krate":0,"index":3043},{"krate":0,"index":3046},{"krate":0,"index":3049},{"krate":0,"index":3052},{"krate":0,"index":3055},{"krate":0,"index":3058},{"krate":0,"index":3061},{"krate":0,"index":3064},{"krate":0,"index":3067},{"krate":0,"index":3070},{"krate":0,"index":3073},{"krate":0,"index":3076},{"krate":0,"index":3079}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(target_arch = \"wasm32\"))","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/lib.rs","byte_start":3498,"byte_end":3533,"line_start":99,"line_end":99,"column_start":1,"column_end":36}}]}],"impls":[{"id":3,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":5558,"byte_end":5562,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":6764,"byte_end":6768,"line_start":70,"line_end":70,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":6892,"byte_end":6896,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":7029,"byte_end":7033,"line_start":84,"line_end":84,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":7297,"byte_end":7301,"line_start":98,"line_end":98,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":7433,"byte_end":7439,"line_start":105,"line_end":105,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":7646,"byte_end":7652,"line_start":114,"line_end":114,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":7734,"byte_end":7740,"line_start":120,"line_end":120,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":7830,"byte_end":7833,"line_start":126,"line_end":126,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":7942,"byte_end":7945,"line_start":132,"line_end":132,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":8174,"byte_end":8187,"line_start":141,"line_end":141,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":8287,"byte_end":8300,"line_start":147,"line_end":147,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":8408,"byte_end":8411,"line_start":153,"line_end":153,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":8916,"byte_end":8929,"line_start":164,"line_end":164,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":9034,"byte_end":9047,"line_start":172,"line_end":172,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":9145,"byte_end":9158,"line_start":178,"line_end":178,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":23476,"byte_end":23482,"line_start":16,"line_end":16,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":25376,"byte_end":25382,"line_start":72,"line_end":72,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":25515,"byte_end":25521,"line_start":78,"line_end":78,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":25988,"byte_end":25994,"line_start":91,"line_end":91,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":26443,"byte_end":26449,"line_start":102,"line_end":102,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":26612,"byte_end":26618,"line_start":111,"line_end":111,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":26763,"byte_end":26769,"line_start":118,"line_end":118,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":26876,"byte_end":26882,"line_start":124,"line_end":124,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":26970,"byte_end":26973,"line_start":130,"line_end":130,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":27133,"byte_end":27139,"line_start":137,"line_end":137,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":27331,"byte_end":27334,"line_start":145,"line_end":145,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":27506,"byte_end":27512,"line_start":153,"line_end":153,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":27858,"byte_end":27864,"line_start":169,"line_end":169,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":28108,"byte_end":28114,"line_start":179,"line_end":179,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":28345,"byte_end":28358,"line_start":190,"line_end":190,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":39877,"byte_end":39881,"line_start":13,"line_end":13,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":40080,"byte_end":40084,"line_start":22,"line_end":22,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/deps.rs","byte_start":45782,"byte_end":45786,"line_start":36,"line_end":36,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/deps.rs","byte_start":45851,"byte_end":45860,"line_start":38,"line_end":38,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/deps.rs","byte_start":46312,"byte_end":46319,"line_start":56,"line_end":56,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","byte_start":49259,"byte_end":49277,"line_start":24,"line_end":24,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","byte_start":49541,"byte_end":49559,"line_start":34,"line_end":34,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","byte_start":50516,"byte_end":50534,"line_start":62,"line_end":62,"column_start":28,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":54579,"byte_end":54587,"line_start":107,"line_end":107,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":57363,"byte_end":57371,"line_start":201,"line_end":201,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":63783,"byte_end":63791,"line_start":406,"line_end":406,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":63931,"byte_end":63939,"line_start":412,"line_end":412,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":64077,"byte_end":64085,"line_start":418,"line_end":418,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":64219,"byte_end":64227,"line_start":424,"line_end":424,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":64359,"byte_end":64367,"line_start":430,"line_end":430,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":64488,"byte_end":64496,"line_start":436,"line_end":436,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":65110,"byte_end":65127,"line_start":459,"line_end":459,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":65456,"byte_end":65469,"line_start":473,"line_end":473,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":66239,"byte_end":66262,"line_start":501,"line_end":501,"column_start":6,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":66665,"byte_end":66682,"line_start":521,"line_end":521,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/system_error.rs","byte_start":75791,"byte_end":75802,"line_start":37,"line_end":37,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/system_error.rs","byte_start":75834,"byte_end":75845,"line_start":39,"line_end":39,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/verification_error.rs","byte_start":77500,"byte_end":77517,"line_start":31,"line_end":31,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/verification_error.rs","byte_start":77779,"byte_end":77796,"line_start":41,"line_end":41,"column_start":39,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/verification_error.rs","byte_start":79062,"byte_end":79079,"line_start":74,"line_end":74,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/iterator.rs","byte_start":110468,"byte_end":110473,"line_start":20,"line_end":20,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":113771,"byte_end":113778,"line_start":28,"line_end":28,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":516},{"krate":0,"index":519},{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":121791,"byte_end":121798,"line_start":236,"line_end":236,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":122523,"byte_end":122530,"line_start":262,"line_end":262,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":124596,"byte_end":124603,"line_start":312,"line_end":312,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":125209,"byte_end":125216,"line_start":330,"line_end":330,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":125402,"byte_end":125409,"line_start":339,"line_end":339,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":125581,"byte_end":125588,"line_start":346,"line_end":346,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":125774,"byte_end":125781,"line_start":355,"line_end":355,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":125953,"byte_end":125960,"line_start":362,"line_end":362,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":126982,"byte_end":126989,"line_start":384,"line_end":384,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":127336,"byte_end":127343,"line_start":397,"line_end":397,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":554},{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":127473,"byte_end":127480,"line_start":405,"line_end":405,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":127624,"byte_end":127631,"line_start":413,"line_end":413,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":127741,"byte_end":127748,"line_start":419,"line_end":419,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":127948,"byte_end":127955,"line_start":429,"line_end":429,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":128199,"byte_end":128206,"line_start":439,"line_end":439,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":128437,"byte_end":128451,"line_start":450,"line_end":450,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":163979,"byte_end":163989,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":679},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":687},{"krate":0,"index":690},{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":172402,"byte_end":172412,"line_start":248,"line_end":248,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":173134,"byte_end":173144,"line_start":274,"line_end":274,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":175210,"byte_end":175220,"line_start":324,"line_end":324,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":175826,"byte_end":175836,"line_start":342,"line_end":342,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":176025,"byte_end":176035,"line_start":351,"line_end":351,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":176216,"byte_end":176226,"line_start":358,"line_end":358,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":714},{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":176415,"byte_end":176425,"line_start":367,"line_end":367,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":176606,"byte_end":176616,"line_start":374,"line_end":374,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":719},{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":177653,"byte_end":177660,"line_start":396,"line_end":396,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":722},{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":178013,"byte_end":178023,"line_start":409,"line_end":409,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":178153,"byte_end":178163,"line_start":417,"line_end":417,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":728},{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":178304,"byte_end":178314,"line_start":425,"line_end":425,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":178424,"byte_end":178434,"line_start":431,"line_end":431,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":178634,"byte_end":178644,"line_start":441,"line_end":441,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":178888,"byte_end":178898,"line_start":451,"line_end":451,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":179135,"byte_end":179152,"line_start":462,"line_end":462,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/isqrt.rs","byte_start":217915,"byte_end":217916,"line_start":12,"line_end":12,"column_start":19,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/isqrt.rs","byte_start":218768,"byte_end":218774,"line_start":48,"line_end":48,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/isqrt.rs","byte_start":218796,"byte_end":218803,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/isqrt.rs","byte_start":218825,"byte_end":218832,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/isqrt.rs","byte_start":218854,"byte_end":218861,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":221608,"byte_end":221615,"line_start":36,"line_end":36,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":902},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":908},{"krate":0,"index":910},{"krate":0,"index":912},{"krate":0,"index":914},{"krate":0,"index":916},{"krate":0,"index":918},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":225255,"byte_end":225262,"line_start":161,"line_end":161,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":225354,"byte_end":225361,"line_start":167,"line_end":167,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":225446,"byte_end":225453,"line_start":173,"line_end":173,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":225544,"byte_end":225551,"line_start":179,"line_end":179,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":225642,"byte_end":225649,"line_start":185,"line_end":185,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":225739,"byte_end":225746,"line_start":191,"line_end":191,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":225843,"byte_end":225849,"line_start":197,"line_end":197,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":941},{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":226141,"byte_end":226148,"line_start":207,"line_end":207,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":945},{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":226291,"byte_end":226298,"line_start":215,"line_end":215,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":948},{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":226576,"byte_end":226582,"line_start":226,"line_end":226,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":226785,"byte_end":226792,"line_start":238,"line_end":238,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":226907,"byte_end":226914,"line_start":244,"line_end":244,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":957},{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":227168,"byte_end":227175,"line_start":256,"line_end":256,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":961},{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":227299,"byte_end":227306,"line_start":264,"line_end":264,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":964},{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":227619,"byte_end":227626,"line_start":277,"line_end":277,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":227807,"byte_end":227814,"line_start":284,"line_end":284,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":969},{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":228132,"byte_end":228139,"line_start":297,"line_end":297,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":228317,"byte_end":228324,"line_start":304,"line_end":304,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":974},{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":228580,"byte_end":228587,"line_start":316,"line_end":316,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":978},{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":228715,"byte_end":228722,"line_start":324,"line_end":324,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":981},{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":228977,"byte_end":228984,"line_start":336,"line_end":336,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":985},{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":229119,"byte_end":229126,"line_start":344,"line_end":344,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":229248,"byte_end":229255,"line_start":350,"line_end":350,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":229373,"byte_end":229380,"line_start":356,"line_end":356,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":229499,"byte_end":229506,"line_start":362,"line_end":362,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":229609,"byte_end":229616,"line_start":368,"line_end":368,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":998},{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":229898,"byte_end":229905,"line_start":381,"line_end":381,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":230088,"byte_end":230095,"line_start":388,"line_end":388,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1003}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":230210,"byte_end":230217,"line_start":394,"line_end":394,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":230309,"byte_end":230316,"line_start":400,"line_end":400,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1011}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":231378,"byte_end":231385,"line_start":436,"line_end":436,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":231647,"byte_end":231654,"line_start":446,"line_end":446,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":231946,"byte_end":231960,"line_start":458,"line_end":458,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":232425,"byte_end":232432,"line_start":476,"line_end":476,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":247126,"byte_end":247133,"line_start":53,"line_end":53,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1150},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1156},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1162},{"krate":0,"index":1164},{"krate":0,"index":1166},{"krate":0,"index":1168},{"krate":0,"index":1170},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":254388,"byte_end":254395,"line_start":289,"line_end":289,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":254491,"byte_end":254498,"line_start":295,"line_end":295,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":254590,"byte_end":254597,"line_start":301,"line_end":301,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":254689,"byte_end":254696,"line_start":307,"line_end":307,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1184}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":254787,"byte_end":254794,"line_start":313,"line_end":313,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1186}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":254885,"byte_end":254892,"line_start":319,"line_end":319,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":254982,"byte_end":254989,"line_start":325,"line_end":325,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":255086,"byte_end":255093,"line_start":331,"line_end":331,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1192},{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":255387,"byte_end":255394,"line_start":341,"line_end":341,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1196},{"krate":0,"index":1197}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":255537,"byte_end":255544,"line_start":349,"line_end":349,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1199},{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":255949,"byte_end":255955,"line_start":364,"line_end":364,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":256059,"byte_end":256066,"line_start":370,"line_end":370,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1204}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":256347,"byte_end":256354,"line_start":380,"line_end":380,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1206},{"krate":0,"index":1207}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":256595,"byte_end":256602,"line_start":392,"line_end":392,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1210},{"krate":0,"index":1211}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":256726,"byte_end":256733,"line_start":400,"line_end":400,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1213},{"krate":0,"index":1214}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":257033,"byte_end":257040,"line_start":413,"line_end":413,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1216}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":257221,"byte_end":257228,"line_start":420,"line_end":420,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1218},{"krate":0,"index":1219}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":257474,"byte_end":257481,"line_start":432,"line_end":432,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1222},{"krate":0,"index":1223}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":257604,"byte_end":257611,"line_start":440,"line_end":440,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1225},{"krate":0,"index":1226}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":257893,"byte_end":257900,"line_start":453,"line_end":453,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1228}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":258081,"byte_end":258088,"line_start":460,"line_end":460,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1230},{"krate":0,"index":1231}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":258396,"byte_end":258403,"line_start":473,"line_end":473,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1233}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":258577,"byte_end":258584,"line_start":480,"line_end":480,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1235},{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":258904,"byte_end":258911,"line_start":493,"line_end":493,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1240},{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":259038,"byte_end":259045,"line_start":501,"line_end":501,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1243},{"krate":0,"index":1244}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":259364,"byte_end":259371,"line_start":514,"line_end":514,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1248},{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":259508,"byte_end":259515,"line_start":522,"line_end":522,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":259637,"byte_end":259644,"line_start":528,"line_end":528,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1254}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":259762,"byte_end":259769,"line_start":534,"line_end":534,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1256}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":259888,"byte_end":259895,"line_start":540,"line_end":540,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":260009,"byte_end":260016,"line_start":546,"line_end":546,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1261}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":260146,"byte_end":260153,"line_start":552,"line_end":552,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":260261,"byte_end":260268,"line_start":558,"line_end":558,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":261417,"byte_end":261424,"line_start":597,"line_end":597,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1272}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":261686,"byte_end":261693,"line_start":607,"line_end":607,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1276}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":261985,"byte_end":261999,"line_start":619,"line_end":619,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":262397,"byte_end":262404,"line_start":634,"line_end":634,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1289}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":295144,"byte_end":295151,"line_start":56,"line_end":56,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1406},{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1412},{"krate":0,"index":1414},{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1418},{"krate":0,"index":1420},{"krate":0,"index":1422},{"krate":0,"index":1424},{"krate":0,"index":1426},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":305405,"byte_end":305412,"line_start":380,"line_end":380,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1433}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":305600,"byte_end":305607,"line_start":388,"line_end":388,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1436}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":305703,"byte_end":305710,"line_start":394,"line_end":394,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1438}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":305802,"byte_end":305809,"line_start":400,"line_end":400,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":305901,"byte_end":305908,"line_start":406,"line_end":406,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1442}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":305999,"byte_end":306006,"line_start":412,"line_end":412,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1444}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":306097,"byte_end":306104,"line_start":418,"line_end":418,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1446}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":306194,"byte_end":306201,"line_start":424,"line_end":424,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1448}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":306298,"byte_end":306305,"line_start":430,"line_end":430,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1450},{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":306822,"byte_end":306829,"line_start":449,"line_end":449,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1454},{"krate":0,"index":1455}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":307123,"byte_end":307130,"line_start":459,"line_end":459,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1458},{"krate":0,"index":1459}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":307273,"byte_end":307280,"line_start":467,"line_end":467,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1461},{"krate":0,"index":1462}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":307559,"byte_end":307565,"line_start":478,"line_end":478,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1464}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":307669,"byte_end":307676,"line_start":484,"line_end":484,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1466}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":307957,"byte_end":307964,"line_start":494,"line_end":494,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1468},{"krate":0,"index":1469}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":308121,"byte_end":308128,"line_start":502,"line_end":502,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1472},{"krate":0,"index":1473}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":308284,"byte_end":308291,"line_start":510,"line_end":510,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1475},{"krate":0,"index":1476}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":308502,"byte_end":308509,"line_start":519,"line_end":519,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1478}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":308714,"byte_end":308721,"line_start":526,"line_end":526,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1480},{"krate":0,"index":1481}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":308883,"byte_end":308890,"line_start":534,"line_end":534,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1484},{"krate":0,"index":1485}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":309042,"byte_end":309049,"line_start":542,"line_end":542,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1487},{"krate":0,"index":1488}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":309331,"byte_end":309338,"line_start":555,"line_end":555,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1490}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":309519,"byte_end":309526,"line_start":562,"line_end":562,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1492},{"krate":0,"index":1493}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":309742,"byte_end":309749,"line_start":571,"line_end":571,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1495}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":309947,"byte_end":309954,"line_start":578,"line_end":578,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1497},{"krate":0,"index":1498}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":310274,"byte_end":310281,"line_start":591,"line_end":591,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1502},{"krate":0,"index":1503}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":310431,"byte_end":310438,"line_start":599,"line_end":599,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1505}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":310584,"byte_end":310591,"line_start":605,"line_end":605,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":310733,"byte_end":310740,"line_start":611,"line_end":611,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1510}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":310883,"byte_end":310890,"line_start":617,"line_end":617,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":311028,"byte_end":311035,"line_start":623,"line_end":623,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1515}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":311165,"byte_end":311172,"line_start":629,"line_end":629,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1518}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":311294,"byte_end":311301,"line_start":635,"line_end":635,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1520}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":311563,"byte_end":311570,"line_start":645,"line_end":645,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1524}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":311862,"byte_end":311876,"line_start":657,"line_end":657,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1532}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":312274,"byte_end":312281,"line_start":672,"line_end":672,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1537}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":332529,"byte_end":332535,"line_start":32,"line_end":32,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1631},{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1637},{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1641},{"krate":0,"index":1643},{"krate":0,"index":1645},{"krate":0,"index":1647},{"krate":0,"index":1649},{"krate":0,"index":1651},{"krate":0,"index":1653},{"krate":0,"index":1655},{"krate":0,"index":1656},{"krate":0,"index":1657},{"krate":0,"index":1658},{"krate":0,"index":1659},{"krate":0,"index":1660},{"krate":0,"index":1661},{"krate":0,"index":1662}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":336160,"byte_end":336166,"line_start":157,"line_end":157,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1664}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":336249,"byte_end":336255,"line_start":163,"line_end":163,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1666}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":336345,"byte_end":336351,"line_start":169,"line_end":169,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1668}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":336440,"byte_end":336446,"line_start":175,"line_end":175,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1670}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":336539,"byte_end":336545,"line_start":181,"line_end":181,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1672},{"krate":0,"index":1673}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":336827,"byte_end":336833,"line_start":192,"line_end":192,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1675}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":337032,"byte_end":337038,"line_start":204,"line_end":204,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1679}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":337152,"byte_end":337158,"line_start":210,"line_end":210,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1681},{"krate":0,"index":1682}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":337321,"byte_end":337327,"line_start":218,"line_end":218,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1685},{"krate":0,"index":1686}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":337488,"byte_end":337494,"line_start":226,"line_end":226,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1688},{"krate":0,"index":1689}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":337801,"byte_end":337807,"line_start":239,"line_end":239,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1691}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":337984,"byte_end":337990,"line_start":246,"line_end":246,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1693},{"krate":0,"index":1694}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":338303,"byte_end":338309,"line_start":259,"line_end":259,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1696}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":338484,"byte_end":338490,"line_start":266,"line_end":266,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1698},{"krate":0,"index":1699}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":338659,"byte_end":338665,"line_start":274,"line_end":274,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1702},{"krate":0,"index":1703}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":338824,"byte_end":338830,"line_start":282,"line_end":282,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1705},{"krate":0,"index":1706}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":339109,"byte_end":339115,"line_start":295,"line_end":295,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1708}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":339289,"byte_end":339295,"line_start":302,"line_end":302,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1710},{"krate":0,"index":1711}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":339454,"byte_end":339460,"line_start":310,"line_end":310,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1714},{"krate":0,"index":1715}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":339625,"byte_end":339631,"line_start":318,"line_end":318,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1717}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":339779,"byte_end":339785,"line_start":324,"line_end":324,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1720}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":339929,"byte_end":339935,"line_start":330,"line_end":330,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":340081,"byte_end":340087,"line_start":336,"line_end":336,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1725}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":340228,"byte_end":340234,"line_start":342,"line_end":342,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1727}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":340370,"byte_end":340376,"line_start":348,"line_end":348,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1730}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":340490,"byte_end":340496,"line_start":354,"line_end":354,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1732},{"krate":0,"index":1735}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":341531,"byte_end":341537,"line_start":391,"line_end":391,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1738}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":341799,"byte_end":341805,"line_start":401,"line_end":401,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1742}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":342094,"byte_end":342107,"line_start":413,"line_end":413,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1750}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":342568,"byte_end":342574,"line_start":431,"line_end":431,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1754}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":362431,"byte_end":362441,"line_start":62,"line_end":62,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1838}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/wasm.rs","byte_start":366269,"byte_end":366289,"line_start":42,"line_end":42,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1854}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":356884,"byte_end":356889,"line_start":73,"line_end":73,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":356935,"byte_end":356947,"line_start":75,"line_end":75,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1905}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":357065,"byte_end":357077,"line_start":81,"line_end":81,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1908}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":357228,"byte_end":357240,"line_start":88,"line_end":88,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1911}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":357372,"byte_end":357384,"line_start":94,"line_end":94,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1914}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":369088,"byte_end":369102,"line_start":44,"line_end":44,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1932},{"krate":0,"index":1933},{"krate":0,"index":1934},{"krate":0,"index":1935}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":369602,"byte_end":369616,"line_start":64,"line_end":64,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1938}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":369755,"byte_end":369769,"line_start":70,"line_end":70,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1942}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":370028,"byte_end":370034,"line_start":79,"line_end":79,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1945}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":374261,"byte_end":374266,"line_start":18,"line_end":18,"column_start":20,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":382609,"byte_end":382618,"line_start":219,"line_end":219,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1984}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":382755,"byte_end":382764,"line_start":226,"line_end":226,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1987}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":382912,"byte_end":382921,"line_start":233,"line_end":233,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1990}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":383043,"byte_end":383052,"line_start":239,"line_end":239,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1993}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":386025,"byte_end":386030,"line_start":26,"line_end":26,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2017},{"krate":0,"index":2019},{"krate":0,"index":2022}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":387169,"byte_end":387178,"line_start":64,"line_end":64,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2026}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":387724,"byte_end":387733,"line_start":84,"line_end":84,"column_start":57,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":2032}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":387869,"byte_end":387878,"line_start":90,"line_end":90,"column_start":58,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2036}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":388649,"byte_end":388658,"line_start":120,"line_end":120,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2052}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":392860,"byte_end":392868,"line_start":88,"line_end":88,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2093}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":393061,"byte_end":393069,"line_start":99,"line_end":99,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2096},{"krate":0,"index":2097},{"krate":0,"index":2100},{"krate":0,"index":2102},{"krate":0,"index":2103},{"krate":0,"index":2104},{"krate":0,"index":2107},{"krate":0,"index":2110},{"krate":0,"index":2112},{"krate":0,"index":2114}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":400232,"byte_end":400238,"line_start":43,"line_end":43,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2143},{"krate":0,"index":2145},{"krate":0,"index":2147},{"krate":0,"index":2149},{"krate":0,"index":2151},{"krate":0,"index":2152}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":404388,"byte_end":404400,"line_start":150,"line_end":150,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2154},{"krate":0,"index":2155},{"krate":0,"index":2156},{"krate":0,"index":2157},{"krate":0,"index":2158}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":405087,"byte_end":405099,"line_start":174,"line_end":174,"column_start":64,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":2161}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":405360,"byte_end":405366,"line_start":183,"line_end":183,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2163}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":412158,"byte_end":412170,"line_start":42,"line_end":42,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2183},{"krate":0,"index":2184}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":412509,"byte_end":412521,"line_start":54,"line_end":54,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2187}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":412662,"byte_end":412674,"line_start":60,"line_end":60,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2190}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":412923,"byte_end":412929,"line_start":69,"line_end":69,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2193}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/storage.rs","byte_start":424902,"byte_end":424915,"line_start":17,"line_end":17,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2328}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/storage.rs","byte_start":425004,"byte_end":425017,"line_start":23,"line_end":23,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2330},{"krate":0,"index":2331},{"krate":0,"index":2332},{"krate":0,"index":2333}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/storage.rs","byte_start":427081,"byte_end":427094,"line_start":70,"line_end":70,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2336}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":436156,"byte_end":436165,"line_start":30,"line_end":30,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2362},{"krate":0,"index":2363},{"krate":0,"index":2364},{"krate":0,"index":2365},{"krate":0,"index":2366},{"krate":0,"index":2367},{"krate":0,"index":2368},{"krate":0,"index":2369},{"krate":0,"index":2370}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":437601,"byte_end":437610,"line_start":79,"line_end":79,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2372}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":448793,"byte_end":448807,"line_start":149,"line_end":149,"column_start":35,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":448984,"byte_end":448998,"line_start":153,"line_end":153,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2511},{"krate":0,"index":2512}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":449139,"byte_end":449153,"line_start":161,"line_end":161,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2516},{"krate":0,"index":2517},{"krate":0,"index":2520},{"krate":0,"index":2523},{"krate":0,"index":2525},{"krate":0,"index":2529},{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2536},{"krate":0,"index":2537},{"krate":0,"index":2539}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":464551,"byte_end":464558,"line_start":93,"line_end":93,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2974}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":464686,"byte_end":464693,"line_start":101,"line_end":101,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2976},{"krate":0,"index":2978},{"krate":0,"index":2979},{"krate":0,"index":2981},{"krate":0,"index":2982},{"krate":0,"index":2983},{"krate":0,"index":2984},{"krate":0,"index":2985}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":475254,"byte_end":475265,"line_start":410,"line_end":410,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2998},{"krate":0,"index":3000},{"krate":0,"index":3002},{"krate":0,"index":3003}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":476710,"byte_end":476721,"line_start":454,"line_end":454,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3006}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":476842,"byte_end":476853,"line_start":460,"line_end":460,"column_start":53,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3009}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":477358,"byte_end":477369,"line_start":475,"line_end":475,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3012}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":478339,"byte_end":478352,"line_start":500,"line_end":500,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3014}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":478864,"byte_end":478875,"line_start":517,"line_end":517,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3016},{"krate":0,"index":3017}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Inherent","span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":480560,"byte_end":480574,"line_start":565,"line_end":565,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3022},{"krate":0,"index":3023}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":5558,"byte_end":5562,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":6764,"byte_end":6768,"line_start":70,"line_end":70,"column_start":23,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3085},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":6892,"byte_end":6896,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3085},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":7029,"byte_end":7033,"line_start":84,"line_end":84,"column_start":26,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3085},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":7297,"byte_end":7301,"line_start":98,"line_end":98,"column_start":28,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3085},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":7433,"byte_end":7439,"line_start":105,"line_end":105,"column_start":26,"column_end":32},"kind":{"Impl":{"id":8}},"from":{"krate":5,"index":7590},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":7646,"byte_end":7652,"line_start":114,"line_end":114,"column_start":21,"column_end":27},"kind":{"Impl":{"id":9}},"from":{"krate":5,"index":7590},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":7734,"byte_end":7740,"line_start":120,"line_end":120,"column_start":22,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":5,"index":7590},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":7830,"byte_end":7833,"line_start":126,"line_end":126,"column_start":21,"column_end":24},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":546},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":7942,"byte_end":7945,"line_start":132,"line_end":132,"column_start":29,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":546},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":8174,"byte_end":8187,"line_start":141,"line_end":141,"column_start":22,"column_end":35},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3135},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":8287,"byte_end":8300,"line_start":147,"line_end":147,"column_start":24,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3135},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":8408,"byte_end":8411,"line_start":153,"line_end":153,"column_start":30,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":5,"index":7050},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":8916,"byte_end":8929,"line_start":164,"line_end":164,"column_start":16,"column_end":29},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3135},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":9034,"byte_end":9047,"line_start":172,"line_end":172,"column_start":6,"column_end":19},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/addresses.rs","byte_start":9145,"byte_end":9158,"line_start":178,"line_end":178,"column_start":23,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3135},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":23476,"byte_end":23482,"line_start":16,"line_end":16,"column_start":6,"column_end":12},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":25376,"byte_end":25382,"line_start":72,"line_end":72,"column_start":23,"column_end":29},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":3181},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":25515,"byte_end":25521,"line_start":78,"line_end":78,"column_start":21,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":3181},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":25988,"byte_end":25994,"line_start":91,"line_end":91,"column_start":22,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":3181},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":26443,"byte_end":26449,"line_start":102,"line_end":102,"column_start":16,"column_end":22},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":3181},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":26612,"byte_end":26618,"line_start":111,"line_end":111,"column_start":51,"column_end":57},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":3181},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":26763,"byte_end":26769,"line_start":118,"line_end":118,"column_start":50,"column_end":56},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3181},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":26876,"byte_end":26882,"line_start":124,"line_end":124,"column_start":24,"column_end":30},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":3181},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":26970,"byte_end":26973,"line_start":130,"line_end":130,"column_start":23,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":5,"index":7050},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":27133,"byte_end":27139,"line_start":137,"line_end":137,"column_start":29,"column_end":35},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":3181},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":27331,"byte_end":27334,"line_start":145,"line_end":145,"column_start":28,"column_end":31},"kind":{"Impl":{"id":33}},"from":{"krate":5,"index":7050},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":27506,"byte_end":27512,"line_start":153,"line_end":153,"column_start":27,"column_end":33},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":3181},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":27858,"byte_end":27864,"line_start":169,"line_end":169,"column_start":20,"column_end":26},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":3181},"to":{"krate":23,"index":2101}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":28108,"byte_end":28114,"line_start":179,"line_end":179,"column_start":32,"column_end":38},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3181},"to":{"krate":23,"index":1560}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/binary.rs","byte_start":28345,"byte_end":28358,"line_start":190,"line_end":190,"column_start":32,"column_end":45},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":150},"to":{"krate":23,"index":1646}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":39877,"byte_end":39881,"line_start":13,"line_end":13,"column_start":6,"column_end":10},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/coins.rs","byte_start":40080,"byte_end":40084,"line_start":22,"line_end":22,"column_start":23,"column_end":27},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3206},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/deps.rs","byte_start":45782,"byte_end":45786,"line_start":36,"line_end":36,"column_start":35,"column_end":39},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3272},"to":{"krate":2,"index":3014}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/deps.rs","byte_start":45851,"byte_end":45860,"line_start":38,"line_end":38,"column_start":54,"column_end":63},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/deps.rs","byte_start":46312,"byte_end":46319,"line_start":56,"line_end":56,"column_start":26,"column_end":33},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","byte_start":49259,"byte_end":49277,"line_start":24,"line_end":24,"column_start":6,"column_end":24},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","byte_start":49541,"byte_end":49559,"line_start":34,"line_end":34,"column_start":40,"column_end":58},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":3282},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/recover_pubkey_error.rs","byte_start":50516,"byte_end":50534,"line_start":62,"line_end":62,"column_start":28,"column_end":46},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":3282},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":54579,"byte_end":54587,"line_start":107,"line_end":107,"column_start":6,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":3303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":57363,"byte_end":57371,"line_start":201,"line_end":201,"column_start":30,"column_end":38},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":3303},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":63783,"byte_end":63791,"line_start":406,"line_end":406,"column_start":36,"column_end":44},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":3303},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":63931,"byte_end":63939,"line_start":412,"line_end":412,"column_start":43,"column_end":51},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3303},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":64077,"byte_end":64085,"line_start":418,"line_end":418,"column_start":34,"column_end":42},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3303},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":64219,"byte_end":64227,"line_start":424,"line_end":424,"column_start":35,"column_end":43},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3303},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":64359,"byte_end":64367,"line_start":430,"line_end":430,"column_start":30,"column_end":38},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3303},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":64488,"byte_end":64496,"line_start":436,"line_end":436,"column_start":34,"column_end":42},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3303},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":65110,"byte_end":65127,"line_start":459,"line_end":459,"column_start":23,"column_end":40},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":3349},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":65456,"byte_end":65469,"line_start":473,"line_end":473,"column_start":6,"column_end":19},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":3390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":66239,"byte_end":66262,"line_start":501,"line_end":501,"column_start":6,"column_end":29},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/std_error.rs","byte_start":66665,"byte_end":66682,"line_start":521,"line_end":521,"column_start":6,"column_end":23},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":3436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/system_error.rs","byte_start":75791,"byte_end":75802,"line_start":37,"line_end":37,"column_start":28,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":3673},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/system_error.rs","byte_start":75834,"byte_end":75845,"line_start":39,"line_end":39,"column_start":28,"column_end":39},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":3673},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/verification_error.rs","byte_start":77500,"byte_end":77517,"line_start":31,"line_end":31,"column_start":6,"column_end":23},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":3685},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/verification_error.rs","byte_start":77779,"byte_end":77796,"line_start":41,"line_end":41,"column_start":39,"column_end":56},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3685},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/errors/verification_error.rs","byte_start":79062,"byte_end":79079,"line_start":74,"line_end":74,"column_start":28,"column_end":45},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":3685},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/iterator.rs","byte_start":110468,"byte_end":110473,"line_start":20,"line_end":20,"column_start":23,"column_end":28},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":3712},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":113771,"byte_end":113778,"line_start":28,"line_end":28,"column_start":6,"column_end":13},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":121791,"byte_end":121798,"line_start":236,"line_end":236,"column_start":28,"column_end":35},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3722},"to":{"krate":0,"index":752}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":122523,"byte_end":122530,"line_start":262,"line_end":262,"column_start":18,"column_end":25},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3722},"to":{"krate":2,"index":11870}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":124596,"byte_end":124603,"line_start":312,"line_end":312,"column_start":23,"column_end":30},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":3722},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":125209,"byte_end":125216,"line_start":330,"line_end":330,"column_start":14,"column_end":21},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":3722},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":125402,"byte_end":125409,"line_start":339,"line_end":339,"column_start":20,"column_end":27},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3722},"to":{"krate":2,"index":3102}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":125581,"byte_end":125588,"line_start":346,"line_end":346,"column_start":14,"column_end":21},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3722},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":125774,"byte_end":125781,"line_start":355,"line_end":355,"column_start":20,"column_end":27},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":3722},"to":{"krate":2,"index":3106}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":125953,"byte_end":125960,"line_start":362,"line_end":362,"column_start":14,"column_end":21},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3722},"to":{"krate":2,"index":3081}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":126982,"byte_end":126989,"line_start":384,"line_end":384,"column_start":23,"column_end":30},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":3081}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":127336,"byte_end":127343,"line_start":397,"line_end":397,"column_start":23,"column_end":30},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":3722},"to":{"krate":2,"index":3081}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":127473,"byte_end":127480,"line_start":405,"line_end":405,"column_start":23,"column_end":30},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":3722},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":127624,"byte_end":127631,"line_start":413,"line_end":413,"column_start":29,"column_end":36},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":3722},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":127741,"byte_end":127748,"line_start":419,"line_end":419,"column_start":31,"column_end":38},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":3722},"to":{"krate":2,"index":7379}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":127948,"byte_end":127955,"line_start":429,"line_end":429,"column_start":20,"column_end":27},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":3722},"to":{"krate":23,"index":2101}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":128199,"byte_end":128206,"line_start":439,"line_end":439,"column_start":32,"column_end":39},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":3722},"to":{"krate":23,"index":1560}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal.rs","byte_start":128437,"byte_end":128451,"line_start":450,"line_end":450,"column_start":32,"column_end":46},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":572},"to":{"krate":23,"index":1646}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":163979,"byte_end":163989,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3781},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":172402,"byte_end":172412,"line_start":248,"line_end":248,"column_start":28,"column_end":38},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":3781},"to":{"krate":0,"index":752}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":173134,"byte_end":173144,"line_start":274,"line_end":274,"column_start":18,"column_end":28},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":3781},"to":{"krate":2,"index":11870}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":175210,"byte_end":175220,"line_start":324,"line_end":324,"column_start":23,"column_end":33},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":3781},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":175826,"byte_end":175836,"line_start":342,"line_end":342,"column_start":14,"column_end":24},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":3781},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":176025,"byte_end":176035,"line_start":351,"line_end":351,"column_start":20,"column_end":30},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":3781},"to":{"krate":2,"index":3102}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":176216,"byte_end":176226,"line_start":358,"line_end":358,"column_start":14,"column_end":24},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":3781},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":176415,"byte_end":176425,"line_start":367,"line_end":367,"column_start":20,"column_end":30},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":3781},"to":{"krate":2,"index":3106}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":176606,"byte_end":176616,"line_start":374,"line_end":374,"column_start":14,"column_end":24},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":3781},"to":{"krate":2,"index":3081}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":177653,"byte_end":177660,"line_start":396,"line_end":396,"column_start":26,"column_end":33},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":3081}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":178013,"byte_end":178023,"line_start":409,"line_end":409,"column_start":23,"column_end":33},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":3781},"to":{"krate":2,"index":3081}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":178153,"byte_end":178163,"line_start":417,"line_end":417,"column_start":23,"column_end":33},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":3781},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":178304,"byte_end":178314,"line_start":425,"line_end":425,"column_start":29,"column_end":39},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":3781},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":178424,"byte_end":178434,"line_start":431,"line_end":431,"column_start":31,"column_end":41},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":3781},"to":{"krate":2,"index":7379}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":178634,"byte_end":178644,"line_start":441,"line_end":441,"column_start":20,"column_end":30},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":3781},"to":{"krate":23,"index":2101}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":178888,"byte_end":178898,"line_start":451,"line_end":451,"column_start":32,"column_end":42},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3781},"to":{"krate":23,"index":1560}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/decimal256.rs","byte_start":179135,"byte_end":179152,"line_start":462,"line_end":462,"column_start":32,"column_end":49},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":743},"to":{"krate":23,"index":1646}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/fraction.rs","byte_start":217283,"byte_end":217288,"line_start":4,"line_end":4,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":3009},"to":{"krate":0,"index":752}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/isqrt.rs","byte_start":217915,"byte_end":217916,"line_start":12,"line_end":12,"column_start":19,"column_end":20},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":781},"to":{"krate":0,"index":778}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/isqrt.rs","byte_start":218768,"byte_end":218774,"line_start":48,"line_end":48,"column_start":19,"column_end":25},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":5115},"to":{"krate":0,"index":783}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/isqrt.rs","byte_start":218796,"byte_end":218803,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3840},"to":{"krate":0,"index":783}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/isqrt.rs","byte_start":218825,"byte_end":218832,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":4447},"to":{"krate":0,"index":783}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/isqrt.rs","byte_start":218854,"byte_end":218861,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":5054},"to":{"krate":0,"index":783}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":221608,"byte_end":221615,"line_start":36,"line_end":36,"column_start":6,"column_end":13},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":225255,"byte_end":225262,"line_start":161,"line_end":161,"column_start":23,"column_end":30},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":225354,"byte_end":225361,"line_start":167,"line_end":167,"column_start":21,"column_end":28},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":225446,"byte_end":225453,"line_start":173,"line_end":173,"column_start":20,"column_end":27},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":225544,"byte_end":225551,"line_start":179,"line_end":179,"column_start":20,"column_end":27},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":225642,"byte_end":225649,"line_start":185,"line_end":185,"column_start":20,"column_end":27},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":225739,"byte_end":225746,"line_start":191,"line_end":191,"column_start":19,"column_end":26},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":225843,"byte_end":225849,"line_start":197,"line_end":197,"column_start":27,"column_end":33},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":5115},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":226141,"byte_end":226148,"line_start":207,"line_end":207,"column_start":24,"column_end":31},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":226291,"byte_end":226298,"line_start":215,"line_end":215,"column_start":18,"column_end":25},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":11870}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":226576,"byte_end":226582,"line_start":226,"line_end":226,"column_start":24,"column_end":30},"kind":{"Impl":{"id":155}},"from":{"krate":5,"index":7590},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":226785,"byte_end":226792,"line_start":238,"line_end":238,"column_start":23,"column_end":30},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":226907,"byte_end":226914,"line_start":244,"line_end":244,"column_start":23,"column_end":30},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":227168,"byte_end":227175,"line_start":256,"line_end":256,"column_start":31,"column_end":38},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":227299,"byte_end":227306,"line_start":264,"line_end":264,"column_start":23,"column_end":30},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":227619,"byte_end":227626,"line_start":277,"line_end":277,"column_start":29,"column_end":36},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":3106}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":227807,"byte_end":227814,"line_start":284,"line_end":284,"column_start":23,"column_end":30},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":3081}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":228132,"byte_end":228139,"line_start":297,"line_end":297,"column_start":29,"column_end":36},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":3110}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":228317,"byte_end":228324,"line_start":304,"line_end":304,"column_start":23,"column_end":30},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":228580,"byte_end":228587,"line_start":316,"line_end":316,"column_start":31,"column_end":38},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":228715,"byte_end":228722,"line_start":324,"line_end":324,"column_start":19,"column_end":26},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":3148}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":228977,"byte_end":228984,"line_start":336,"line_end":336,"column_start":27,"column_end":34},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":3148}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":229119,"byte_end":229126,"line_start":344,"line_end":344,"column_start":29,"column_end":36},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":3102}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":229248,"byte_end":229255,"line_start":350,"line_end":350,"column_start":37,"column_end":44},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":3102}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":229373,"byte_end":229380,"line_start":356,"line_end":356,"column_start":29,"column_end":36},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":229499,"byte_end":229506,"line_start":362,"line_end":362,"column_start":37,"column_end":44},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":229609,"byte_end":229616,"line_start":368,"line_end":368,"column_start":14,"column_end":21},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":3092}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":229898,"byte_end":229905,"line_start":381,"line_end":381,"column_start":29,"column_end":36},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":3118}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":230088,"byte_end":230095,"line_start":388,"line_end":388,"column_start":25,"column_end":32},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":3171}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":230210,"byte_end":230217,"line_start":394,"line_end":394,"column_start":33,"column_end":40},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":3171}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":230309,"byte_end":230316,"line_start":400,"line_end":400,"column_start":6,"column_end":13},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":231378,"byte_end":231385,"line_start":436,"line_end":436,"column_start":20,"column_end":27},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3840},"to":{"krate":23,"index":2101}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":231647,"byte_end":231654,"line_start":446,"line_end":446,"column_start":32,"column_end":39},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3840},"to":{"krate":23,"index":1560}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":231946,"byte_end":231960,"line_start":458,"line_end":458,"column_start":32,"column_end":46},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1020},"to":{"krate":23,"index":1646}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint128.rs","byte_start":232425,"byte_end":232432,"line_start":476,"line_end":476,"column_start":31,"column_end":38},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":7379}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":247126,"byte_end":247133,"line_start":53,"line_end":53,"column_start":6,"column_end":13},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":4447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":254388,"byte_end":254395,"line_start":289,"line_end":289,"column_start":24,"column_end":31},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":254491,"byte_end":254498,"line_start":295,"line_end":295,"column_start":23,"column_end":30},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":254590,"byte_end":254597,"line_start":301,"line_end":301,"column_start":21,"column_end":28},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":254689,"byte_end":254696,"line_start":307,"line_end":307,"column_start":20,"column_end":27},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":254787,"byte_end":254794,"line_start":313,"line_end":313,"column_start":20,"column_end":27},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":254885,"byte_end":254892,"line_start":319,"line_end":319,"column_start":20,"column_end":27},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":254982,"byte_end":254989,"line_start":325,"line_end":325,"column_start":19,"column_end":26},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":255086,"byte_end":255093,"line_start":331,"line_end":331,"column_start":27,"column_end":34},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":255387,"byte_end":255394,"line_start":341,"line_end":341,"column_start":24,"column_end":31},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":255537,"byte_end":255544,"line_start":349,"line_end":349,"column_start":18,"column_end":25},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":11870}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":255949,"byte_end":255955,"line_start":364,"line_end":364,"column_start":24,"column_end":30},"kind":{"Impl":{"id":199}},"from":{"krate":5,"index":7590},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":256059,"byte_end":256066,"line_start":370,"line_end":370,"column_start":23,"column_end":30},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":256347,"byte_end":256354,"line_start":380,"line_end":380,"column_start":23,"column_end":30},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":256595,"byte_end":256602,"line_start":392,"line_end":392,"column_start":31,"column_end":38},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":256726,"byte_end":256733,"line_start":400,"line_end":400,"column_start":23,"column_end":30},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":257033,"byte_end":257040,"line_start":413,"line_end":413,"column_start":29,"column_end":36},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":3106}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":257221,"byte_end":257228,"line_start":420,"line_end":420,"column_start":23,"column_end":30},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":257474,"byte_end":257481,"line_start":432,"line_end":432,"column_start":31,"column_end":38},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":257604,"byte_end":257611,"line_start":440,"line_end":440,"column_start":14,"column_end":21},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":3092}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":257893,"byte_end":257900,"line_start":453,"line_end":453,"column_start":29,"column_end":36},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":3118}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":258081,"byte_end":258088,"line_start":460,"line_end":460,"column_start":23,"column_end":30},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":3081}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":258396,"byte_end":258403,"line_start":473,"line_end":473,"column_start":29,"column_end":36},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":3110}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":258577,"byte_end":258584,"line_start":480,"line_end":480,"column_start":19,"column_end":26},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":3148}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":258904,"byte_end":258911,"line_start":493,"line_end":493,"column_start":27,"column_end":34},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":3148}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":259038,"byte_end":259045,"line_start":501,"line_end":501,"column_start":19,"column_end":26},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":3142}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":259364,"byte_end":259371,"line_start":514,"line_end":514,"column_start":27,"column_end":34},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":3142}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":259508,"byte_end":259515,"line_start":522,"line_end":522,"column_start":29,"column_end":36},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":3102}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":259637,"byte_end":259644,"line_start":528,"line_end":528,"column_start":37,"column_end":44},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":3102}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":259762,"byte_end":259769,"line_start":534,"line_end":534,"column_start":29,"column_end":36},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":259888,"byte_end":259895,"line_start":540,"line_end":540,"column_start":37,"column_end":44},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":260009,"byte_end":260016,"line_start":546,"line_end":546,"column_start":25,"column_end":32},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":3171}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":260146,"byte_end":260153,"line_start":552,"line_end":552,"column_start":33,"column_end":40},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":3171}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":260261,"byte_end":260268,"line_start":558,"line_end":558,"column_start":6,"column_end":13},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":4447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":261417,"byte_end":261424,"line_start":597,"line_end":597,"column_start":20,"column_end":27},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":4447},"to":{"krate":23,"index":2101}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":261686,"byte_end":261693,"line_start":607,"line_end":607,"column_start":32,"column_end":39},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":4447},"to":{"krate":23,"index":1560}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":261985,"byte_end":261999,"line_start":619,"line_end":619,"column_start":32,"column_end":46},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":1278},"to":{"krate":23,"index":1646}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint256.rs","byte_start":262397,"byte_end":262404,"line_start":634,"line_end":634,"column_start":31,"column_end":38},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":7379}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":295144,"byte_end":295151,"line_start":56,"line_end":56,"column_start":6,"column_end":13},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":5054},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":305405,"byte_end":305412,"line_start":380,"line_end":380,"column_start":24,"column_end":31},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":305600,"byte_end":305607,"line_start":388,"line_end":388,"column_start":24,"column_end":31},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":305703,"byte_end":305710,"line_start":394,"line_end":394,"column_start":23,"column_end":30},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":305802,"byte_end":305809,"line_start":400,"line_end":400,"column_start":21,"column_end":28},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":305901,"byte_end":305908,"line_start":406,"line_end":406,"column_start":20,"column_end":27},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":305999,"byte_end":306006,"line_start":412,"line_end":412,"column_start":20,"column_end":27},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":306097,"byte_end":306104,"line_start":418,"line_end":418,"column_start":20,"column_end":27},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":306194,"byte_end":306201,"line_start":424,"line_end":424,"column_start":19,"column_end":26},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":306298,"byte_end":306305,"line_start":430,"line_end":430,"column_start":27,"column_end":34},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":4447},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":306822,"byte_end":306829,"line_start":449,"line_end":449,"column_start":27,"column_end":34},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3840},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":307123,"byte_end":307130,"line_start":459,"line_end":459,"column_start":24,"column_end":31},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":307273,"byte_end":307280,"line_start":467,"line_end":467,"column_start":18,"column_end":25},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":11870}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":307559,"byte_end":307565,"line_start":478,"line_end":478,"column_start":24,"column_end":30},"kind":{"Impl":{"id":246}},"from":{"krate":5,"index":7590},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":307669,"byte_end":307676,"line_start":484,"line_end":484,"column_start":23,"column_end":30},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":307957,"byte_end":307964,"line_start":494,"line_end":494,"column_start":23,"column_end":30},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":308121,"byte_end":308128,"line_start":502,"line_end":502,"column_start":31,"column_end":38},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":308284,"byte_end":308291,"line_start":510,"line_end":510,"column_start":23,"column_end":30},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":308502,"byte_end":308509,"line_start":519,"line_end":519,"column_start":29,"column_end":36},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":3106}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":308714,"byte_end":308721,"line_start":526,"line_end":526,"column_start":23,"column_end":30},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":308883,"byte_end":308890,"line_start":534,"line_end":534,"column_start":31,"column_end":38},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":309042,"byte_end":309049,"line_start":542,"line_end":542,"column_start":14,"column_end":21},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":3092}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":309331,"byte_end":309338,"line_start":555,"line_end":555,"column_start":29,"column_end":36},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":3118}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":309519,"byte_end":309526,"line_start":562,"line_end":562,"column_start":23,"column_end":30},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":3081}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":309742,"byte_end":309749,"line_start":571,"line_end":571,"column_start":29,"column_end":36},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":3110}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":309947,"byte_end":309954,"line_start":578,"line_end":578,"column_start":19,"column_end":26},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":3148}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":310274,"byte_end":310281,"line_start":591,"line_end":591,"column_start":27,"column_end":34},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":3148}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":310431,"byte_end":310438,"line_start":599,"line_end":599,"column_start":29,"column_end":36},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":3102}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":310584,"byte_end":310591,"line_start":605,"line_end":605,"column_start":37,"column_end":44},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":3102}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":310733,"byte_end":310740,"line_start":611,"line_end":611,"column_start":29,"column_end":36},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":310883,"byte_end":310890,"line_start":617,"line_end":617,"column_start":37,"column_end":44},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":311028,"byte_end":311035,"line_start":623,"line_end":623,"column_start":25,"column_end":32},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":3171}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":311165,"byte_end":311172,"line_start":629,"line_end":629,"column_start":33,"column_end":40},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":3171}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":311294,"byte_end":311301,"line_start":635,"line_end":635,"column_start":20,"column_end":27},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":5054},"to":{"krate":23,"index":2101}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":311563,"byte_end":311570,"line_start":645,"line_end":645,"column_start":32,"column_end":39},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":5054},"to":{"krate":23,"index":1560}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":311862,"byte_end":311876,"line_start":657,"line_end":657,"column_start":32,"column_end":46},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":1526},"to":{"krate":23,"index":1646}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint512.rs","byte_start":312274,"byte_end":312281,"line_start":672,"line_end":672,"column_start":31,"column_end":38},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":7379}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":332529,"byte_end":332535,"line_start":32,"line_end":32,"column_start":6,"column_end":12},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":5115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":336160,"byte_end":336166,"line_start":157,"line_end":157,"column_start":20,"column_end":26},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":5115},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":336249,"byte_end":336255,"line_start":163,"line_end":163,"column_start":20,"column_end":26},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":5115},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":336345,"byte_end":336351,"line_start":169,"line_end":169,"column_start":20,"column_end":26},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":5115},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":336440,"byte_end":336446,"line_start":175,"line_end":175,"column_start":19,"column_end":25},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":5115},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":336539,"byte_end":336545,"line_start":181,"line_end":181,"column_start":24,"column_end":30},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":5115},"to":{"krate":2,"index":2917}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":336827,"byte_end":336833,"line_start":192,"line_end":192,"column_start":23,"column_end":29},"kind":{"Impl":{"id":283}},"from":{"krate":5,"index":7590},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":337032,"byte_end":337038,"line_start":204,"line_end":204,"column_start":23,"column_end":29},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":5115},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":337152,"byte_end":337158,"line_start":210,"line_end":210,"column_start":22,"column_end":28},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":5115},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":337321,"byte_end":337327,"line_start":218,"line_end":218,"column_start":30,"column_end":36},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":5115},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":337488,"byte_end":337494,"line_start":226,"line_end":226,"column_start":22,"column_end":28},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":5115},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":337801,"byte_end":337807,"line_start":239,"line_end":239,"column_start":28,"column_end":34},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":5115},"to":{"krate":2,"index":3106}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":337984,"byte_end":337990,"line_start":246,"line_end":246,"column_start":22,"column_end":28},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":5115},"to":{"krate":2,"index":3081}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":338303,"byte_end":338309,"line_start":259,"line_end":259,"column_start":28,"column_end":34},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":5115},"to":{"krate":2,"index":3110}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":338484,"byte_end":338490,"line_start":266,"line_end":266,"column_start":22,"column_end":28},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":5115},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":338659,"byte_end":338665,"line_start":274,"line_end":274,"column_start":30,"column_end":36},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":5115},"to":{"krate":2,"index":3086}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":338824,"byte_end":338830,"line_start":282,"line_end":282,"column_start":14,"column_end":20},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":5115},"to":{"krate":2,"index":3092}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":339109,"byte_end":339115,"line_start":295,"line_end":295,"column_start":28,"column_end":34},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":5115},"to":{"krate":2,"index":3118}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":339289,"byte_end":339295,"line_start":302,"line_end":302,"column_start":19,"column_end":25},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":5115},"to":{"krate":2,"index":3148}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":339454,"byte_end":339460,"line_start":310,"line_end":310,"column_start":27,"column_end":33},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":5115},"to":{"krate":2,"index":3148}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":339625,"byte_end":339631,"line_start":318,"line_end":318,"column_start":28,"column_end":34},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":5115},"to":{"krate":2,"index":3102}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":339779,"byte_end":339785,"line_start":324,"line_end":324,"column_start":36,"column_end":42},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":5115},"to":{"krate":2,"index":3102}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":339929,"byte_end":339935,"line_start":330,"line_end":330,"column_start":28,"column_end":34},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":5115},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":340081,"byte_end":340087,"line_start":336,"line_end":336,"column_start":36,"column_end":42},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":5115},"to":{"krate":2,"index":3114}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":340228,"byte_end":340234,"line_start":342,"line_end":342,"column_start":25,"column_end":31},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":5115},"to":{"krate":2,"index":3171}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":340370,"byte_end":340376,"line_start":348,"line_end":348,"column_start":33,"column_end":39},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":5115},"to":{"krate":2,"index":3171}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":340490,"byte_end":340496,"line_start":354,"line_end":354,"column_start":6,"column_end":12},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":5115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":341531,"byte_end":341537,"line_start":391,"line_end":391,"column_start":20,"column_end":26},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":5115},"to":{"krate":23,"index":2101}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":341799,"byte_end":341805,"line_start":401,"line_end":401,"column_start":32,"column_end":38},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":5115},"to":{"krate":23,"index":1560}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":342094,"byte_end":342107,"line_start":413,"line_end":413,"column_start":32,"column_end":45},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":1744},"to":{"krate":23,"index":1646}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/math/uint64.rs","byte_start":342568,"byte_end":342574,"line_start":431,"line_end":431,"column_start":31,"column_end":37},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":5115},"to":{"krate":2,"index":7379}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/staking.rs","byte_start":362431,"byte_end":362441,"line_start":62,"line_end":62,"column_start":31,"column_end":41},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":5794},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/wasm.rs","byte_start":366269,"byte_end":366289,"line_start":42,"line_end":42,"column_start":6,"column_end":26},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":6361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":356689,"byte_end":356698,"line_start":69,"line_end":69,"column_start":24,"column_end":33},"kind":"SuperTrait","from":{"krate":23,"index":2101},"to":{"krate":0,"index":1901}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":356701,"byte_end":356706,"line_start":69,"line_end":69,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":2625},"to":{"krate":0,"index":1901}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":356884,"byte_end":356889,"line_start":73,"line_end":73,"column_start":22,"column_end":27},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":7395},"to":{"krate":0,"index":1901}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":356935,"byte_end":356947,"line_start":75,"line_end":75,"column_start":42,"column_end":54},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":6504},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":357065,"byte_end":357077,"line_start":81,"line_end":81,"column_start":34,"column_end":46},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":6504},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":357228,"byte_end":357240,"line_start":88,"line_end":88,"column_start":45,"column_end":57},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":6504},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/query/mod.rs","byte_start":357372,"byte_end":357384,"line_start":94,"line_end":94,"column_start":42,"column_end":54},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":6504},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":369088,"byte_end":369102,"line_start":44,"line_end":44,"column_start":9,"column_end":23},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":6584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":369602,"byte_end":369616,"line_start":64,"line_end":64,"column_start":21,"column_end":35},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":6584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":369755,"byte_end":369769,"line_start":70,"line_end":70,"column_start":45,"column_end":59},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":6584},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/contract_result.rs","byte_start":370028,"byte_end":370034,"line_start":79,"line_end":79,"column_start":37,"column_end":43},"kind":{"Impl":{"id":373}},"from":{"krate":2,"index":43488},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":374182,"byte_end":374191,"line_start":16,"line_end":16,"column_start":22,"column_end":31},"kind":"SuperTrait","from":{"krate":23,"index":2101},"to":{"krate":0,"index":1975}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":374194,"byte_end":374199,"line_start":16,"line_end":16,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":2625},"to":{"krate":0,"index":1975}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":374207,"byte_end":374212,"line_start":16,"line_end":16,"column_start":47,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":9343},"to":{"krate":0,"index":1975}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":374215,"byte_end":374224,"line_start":16,"line_end":16,"column_start":55,"column_end":64},"kind":"SuperTrait","from":{"krate":2,"index":2655},"to":{"krate":0,"index":1975}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":374227,"byte_end":374237,"line_start":16,"line_end":16,"column_start":67,"column_end":77},"kind":"SuperTrait","from":{"krate":20,"index":645},"to":{"krate":0,"index":1975}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":374261,"byte_end":374266,"line_start":18,"line_end":18,"column_start":20,"column_end":25},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":7395},"to":{"krate":0,"index":1975}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":382609,"byte_end":382618,"line_start":219,"line_end":219,"column_start":27,"column_end":36},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":6664},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":382755,"byte_end":382764,"line_start":226,"line_end":226,"column_start":30,"column_end":39},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":6664},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":382912,"byte_end":382921,"line_start":233,"line_end":233,"column_start":35,"column_end":44},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":6664},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/cosmos_msg.rs","byte_start":383043,"byte_end":383052,"line_start":239,"line_end":239,"column_start":27,"column_end":36},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":6664},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":386025,"byte_end":386030,"line_start":26,"line_end":26,"column_start":6,"column_end":11},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":7452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":387169,"byte_end":387178,"line_start":64,"line_end":64,"column_start":6,"column_end":15},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":7516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":387724,"byte_end":387733,"line_start":84,"line_end":84,"column_start":57,"column_end":66},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":7516},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":387869,"byte_end":387878,"line_start":90,"line_end":90,"column_start":58,"column_end":67},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":7516},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/events.rs","byte_start":388649,"byte_end":388658,"line_start":120,"line_end":120,"column_start":32,"column_end":41},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":7516},"to":{"krate":2,"index":2655}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":392860,"byte_end":392868,"line_start":88,"line_end":88,"column_start":21,"column_end":29},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":7582},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/response.rs","byte_start":393061,"byte_end":393069,"line_start":99,"line_end":99,"column_start":9,"column_end":17},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":7582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":400232,"byte_end":400238,"line_start":43,"line_end":43,"column_start":9,"column_end":15},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":7731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":404388,"byte_end":404400,"line_start":150,"line_end":150,"column_start":6,"column_end":18},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":7932},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":405087,"byte_end":405099,"line_start":174,"line_end":174,"column_start":64,"column_end":76},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":7932},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/submessages.rs","byte_start":405360,"byte_end":405366,"line_start":183,"line_end":183,"column_start":29,"column_end":35},"kind":{"Impl":{"id":428}},"from":{"krate":2,"index":43488},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":412158,"byte_end":412170,"line_start":42,"line_end":42,"column_start":9,"column_end":21},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":8069},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":412509,"byte_end":412521,"line_start":54,"line_end":54,"column_start":21,"column_end":33},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":8069},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":412662,"byte_end":412674,"line_start":60,"line_end":60,"column_start":42,"column_end":54},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":8069},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/results/system_result.rs","byte_start":412923,"byte_end":412929,"line_start":69,"line_end":69,"column_start":35,"column_end":41},"kind":{"Impl":{"id":438}},"from":{"krate":2,"index":43488},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/storage.rs","byte_start":424902,"byte_end":424915,"line_start":17,"line_end":17,"column_start":6,"column_end":19},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":8077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/storage.rs","byte_start":425004,"byte_end":425017,"line_start":23,"line_end":23,"column_start":18,"column_end":31},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":8077},"to":{"krate":0,"index":2487}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/storage.rs","byte_start":427081,"byte_end":427094,"line_start":70,"line_end":70,"column_start":21,"column_end":34},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":8077},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":436156,"byte_end":436165,"line_start":30,"line_end":30,"column_start":6,"column_end":15},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":8081},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/timestamp.rs","byte_start":437601,"byte_end":437610,"line_start":79,"line_end":79,"column_start":23,"column_end":32},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":8081},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":448793,"byte_end":448807,"line_start":149,"line_end":149,"column_start":35,"column_end":49},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":8131},"to":{"krate":2,"index":3014}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":448984,"byte_end":448998,"line_start":153,"line_end":153,"column_start":36,"column_end":50},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":8131},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/traits.rs","byte_start":449139,"byte_end":449153,"line_start":161,"line_end":161,"column_start":26,"column_end":40},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":8131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":464551,"byte_end":464558,"line_start":93,"line_end":93,"column_start":18,"column_end":25},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":8444},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":464686,"byte_end":464693,"line_start":101,"line_end":101,"column_start":14,"column_end":21},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":8444},"to":{"krate":0,"index":2493}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":475254,"byte_end":475265,"line_start":410,"line_end":410,"column_start":27,"column_end":38},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":2989},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":476710,"byte_end":476721,"line_start":454,"line_end":454,"column_start":18,"column_end":29},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":2989},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":476842,"byte_end":476853,"line_start":460,"line_end":460,"column_start":53,"column_end":64},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":2989},"to":{"krate":0,"index":2503}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":477358,"byte_end":477369,"line_start":475,"line_end":475,"column_start":41,"column_end":52},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":2989},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":478339,"byte_end":478352,"line_start":500,"line_end":500,"column_start":6,"column_end":19},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":8449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":478864,"byte_end":478875,"line_start":517,"line_end":517,"column_start":6,"column_end":17},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":8454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thienlk/.cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-beta7/src/mock.rs","byte_start":480560,"byte_end":480574,"line_start":565,"line_end":565,"column_start":6,"column_end":20},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":8460},"to":{"krate":4294967295,"index":4294967295}}]}